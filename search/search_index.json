{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u5c0f\u9ec4\u9e2d \u00b6 \u8fd9\u91cc\u662f\u6768\u534e\u4eae\u7684\u4e2a\u4eba\u7f51\u7ad9 https://yanghualv7.github.io \u7a0b\u5e8f\u662f\u5199\u7ed9\u5176\u4ed6\u4eba\u8bfb\u7684\uff0c\u8ba9\u673a\u5668\u8fd0\u884c\u8d77\u6765\u53ea\u662f\u4e00\u4e2a\u9644\u5e26\u529f\u80fd\u3002 \u901a\u8fc7\u4e3b\u9898\u548c\u76ee\u5f55\u4ee5\u6253\u5f00\u6587\u7ae0 PC\u7aef \u5728\u4e0a\u65b9\u6807\u7b7e\u680f\u9009\u62e9\u4e3b\u9898 \u5728\u5de6\u4fa7\u76ee\u5f55\u9009\u62e9\u6587\u7ae0 \u79fb\u52a8\u7aef \u70b9\u51fb\u5de6\u4e0a\u89d2 \\(\u2261\\) \u7136\u540e\u70b9\u51fb \\(\\leftarrow\\) \u9009\u62e9\u4e3b\u9898\u548c\u6587\u7ae0 \u641c\u7d22\u5173\u952e\u8bcd\u4ee5\u6253\u5f00\u6587\u7ae0 \u6ce8\u610f\u6bcf\u5929\u5b8c\u6210\u5f85\u529e\u4e8b\u9879\uff0c\u505a\u597d\u5b9e\u65f6\u8bb0\u5f55\u4e0e\u53cd\u9988","title":"\u5c0f\u9ec4\u9e2d"},{"location":"#_1","text":"\u8fd9\u91cc\u662f\u6768\u534e\u4eae\u7684\u4e2a\u4eba\u7f51\u7ad9 https://yanghualv7.github.io \u7a0b\u5e8f\u662f\u5199\u7ed9\u5176\u4ed6\u4eba\u8bfb\u7684\uff0c\u8ba9\u673a\u5668\u8fd0\u884c\u8d77\u6765\u53ea\u662f\u4e00\u4e2a\u9644\u5e26\u529f\u80fd\u3002 \u901a\u8fc7\u4e3b\u9898\u548c\u76ee\u5f55\u4ee5\u6253\u5f00\u6587\u7ae0 PC\u7aef \u5728\u4e0a\u65b9\u6807\u7b7e\u680f\u9009\u62e9\u4e3b\u9898 \u5728\u5de6\u4fa7\u76ee\u5f55\u9009\u62e9\u6587\u7ae0 \u79fb\u52a8\u7aef \u70b9\u51fb\u5de6\u4e0a\u89d2 \\(\u2261\\) \u7136\u540e\u70b9\u51fb \\(\\leftarrow\\) \u9009\u62e9\u4e3b\u9898\u548c\u6587\u7ae0 \u641c\u7d22\u5173\u952e\u8bcd\u4ee5\u6253\u5f00\u6587\u7ae0 \u6ce8\u610f\u6bcf\u5929\u5b8c\u6210\u5f85\u529e\u4e8b\u9879\uff0c\u505a\u597d\u5b9e\u65f6\u8bb0\u5f55\u4e0e\u53cd\u9988","title":"\u5c0f\u9ec4\u9e2d"},{"location":"Documentation/concept2/c2_index/","text":"c2\u5212\u8239\u673a\u6570\u636e\u83b7\u53d6 \u00b6 1. \u9879\u76ee\u4ecb\u7ecd \u00b6 \u672c\u9879\u76ee\u57fa\u4e8econcept2\u5b98\u65b9\u63d0\u4f9b\u7684 PMSDKDemo \u5f00\u653e\u63a5\u53e3\uff0c\u7f16\u5199\u5bf9\u5e94c++\u7a0b\u5e8f\u5b9e\u73b0\u6570\u636e\u7684\u5b9e\u65f6\u83b7\u53d6\u3002 \u6ce8\u610f\u83b7\u53d6\u547d\u4ee4\u65f6\u9700\u5c06\u84dd\u7259\u4e0ePM5\u8868\u5934\u76f8\u8fde\u3002 2. \u9879\u76ee\u53c2\u8003\u8d44\u6599 \u00b6 \u5f00\u53d1\u8005\u8bf4\u660e\u6587\u6863 concept2-161p concept2-80p: \u6b64\u6587\u6863\u5728Concept2 SDK\u7684 Documentation \u76ee\u5f55\u4e2d \u5f00\u53d1\u8bba\u575b Concept2 Forum","title":"\u9879\u76ee\u6458\u8981"},{"location":"Documentation/concept2/c2_index/#c2","text":"","title":"c2\u5212\u8239\u673a\u6570\u636e\u83b7\u53d6"},{"location":"Documentation/concept2/c2_index/#1","text":"\u672c\u9879\u76ee\u57fa\u4e8econcept2\u5b98\u65b9\u63d0\u4f9b\u7684 PMSDKDemo \u5f00\u653e\u63a5\u53e3\uff0c\u7f16\u5199\u5bf9\u5e94c++\u7a0b\u5e8f\u5b9e\u73b0\u6570\u636e\u7684\u5b9e\u65f6\u83b7\u53d6\u3002 \u6ce8\u610f\u83b7\u53d6\u547d\u4ee4\u65f6\u9700\u5c06\u84dd\u7259\u4e0ePM5\u8868\u5934\u76f8\u8fde\u3002","title":"1. \u9879\u76ee\u4ecb\u7ecd"},{"location":"Documentation/concept2/c2_index/#2","text":"\u5f00\u53d1\u8005\u8bf4\u660e\u6587\u6863 concept2-161p concept2-80p: \u6b64\u6587\u6863\u5728Concept2 SDK\u7684 Documentation \u76ee\u5f55\u4e2d \u5f00\u53d1\u8bba\u575b Concept2 Forum","title":"2. \u9879\u76ee\u53c2\u8003\u8d44\u6599"},{"location":"Documentation/concept2/concept2/","text":"concept2\u4e0b\u53d1\u8bbe\u7f6e\u547d\u4ee4 \u00b6 \u672c\u6587\u6863\u662f\u53d9\u8ff0\u5982\u4f55\u6784\u5efa\u5408\u9002\u7684\u6307\u4ee4\uff0c\u4f7f\u7528\u5b98\u65b9\u63d0\u4f9b\u7684API\u63a5\u53e3\u5411concept2\u5212\u8239\u673a\u53d1\u9001\u9884\u5b9a\u4e49\u547d\u4ee4\u3002 \u672c\u6587\u6863\u4e0d\u4fdd\u8bc1\u5b8c\u5168\u51c6\u786e\uff0c\u4ec5\u505a\u53c2\u8003\u4f7f\u7528\uff0c\u8bf7\u4f7f\u7528\u8005\u5207\u52ff\u76f2\u4ece\u3002 1. \u6ce8\u610f\u4e8b\u9879 \u00b6 \u53d1\u9001\u4ee5\u4e0b\u547d\u4ee4\u9700\u5148\u7528\u84dd\u7259\u4e0e\u8868\u5934\u76f8\u8fde \u6784\u5efa\u547d\u4ee4\u5b57\u7b26\u6570\u91cf\u6700\u5927\u503c\u4e3a120 \u4e0b\u53d1\u6307\u4ee4\u53ef\u4f7f\u7528\u5b98\u65b9\u63d0\u4f9b PMSDKDemo \u200b PMSDKDemo\u4e0b\u8f7d\u5730\u5740 2.\u6821\u9a8c\u548c\u8ba1\u7b97 \u00b6 \u9664\u53bb f1\u3001f2 \u5c06\u6240\u6709\u6570\u636e\u8fdb\u884c\u5f02\u6216 \u793a\u4f8b \u200b \u9700\u8981\u8ba1\u7b97\u7684\u6570\u636e \uff1a76 18 01 01 05 03 05 00 00 01 d3 c1 05 05 00 00 00 13 71 14 01 01 13 02 01 01 \u200b \u6821\u9a8c\u548c \uff1a19 \u200b \u53d1\u9001\u547d\u4ee4 \uff1af1 76 18 01 01 05 03 05 00 00 01 d3 c1 05 05 00 00 00 13 71 14 01 01 13 02 01 01 19 f2 3.\u56fa\u5b9a\u65f6\u95f4/\u8ddd\u79bb \u00b6 1. \u8ddd\u79bb/\u5206\u6bb5 \u00b6 \u539f\u59cb\u793a\u4f8b \u8be5\u547d\u4ee4\u4f7f\u7528 tkcmdsetUSB_do_DDIcommand \u53d1\u9001\uff0c\u5176\u53d1\u9001\u7684\u542b\u4e49\u4e3a\uff1a\u76ee\u6807\u8ddd\u79bb 2000m \uff0c\u5206\u6bb5\u8ddd\u79bb 400m \u81ea\u5b9a\u4e49\u793a\u4f8b \u200b \u5b8c\u6574\u547d\u4ee4 \uff1af1 76 18 01 01 03 03 05 80 00 01 11 11 05 05 80 00 00 00 64 14 01 01 13 02 01 01 0b f2 \u200b \u8bf4\u660e \uff1a\u76ee\u6807\u8ddd\u79bb 69905m ,\u5206\u6bb5\u8ddd\u79bb 100m \u200b 00 01 11 11 \uff1a\u8868\u793a\u8bbe\u5b9a\u76ee\u6807\u8ddd\u79bb\u4e3a 69905m \uff0c\u4ee5 1m \u4e3a\u5355\u4f4d \u200b 00 00 00 64 \uff1a\u8868\u793a\u5206\u6bb5\u8ddd\u79bb\u4e3a 100m \uff0c\u4ee5 1m \u4e3a\u5355\u4f4d 2.\u65f6\u95f4/\u5206\u6bb5 \u00b6 \u539f\u59cb\u793a\u4f8b \u200b \u8be5\u547d\u4ee4\u4f7f\u7528 tkcmdsetUSB_do_DDIcommand \u53d1\u9001\uff0c\u5176\u53d1\u9001\u7684\u542b\u4e49\u4e3a\uff1a\u76ee\u6807\u65f6\u95f4 20min ,\u5206\u6bb5\u65f6\u95f4 4min \u81ea\u5b9a\u4e49\u793a\u4f8b \u200b \u5b8c\u6574\u547d\u4ee4 \uff1af1 76 18 01 01 05 03 05 00 00 01 d4 c0 05 05 00 00 00 17 70 14 01 01 13 02 01 01 1a f2 \u200b \u8bf4\u660e \uff1a\u76ee\u6807\u65f6\u95f4 20min ,\u5206\u6bb5\u65f6\u95f4 1min \u200b 00 01 d4 c0 \uff1a\u8868\u793a\u8bbe\u5b9a\u76ee\u6807\u65f6\u95f4\u4e3a 20min \uff0c\u4ee5 0.01sec \u4e3a\u5355\u4f4d \u200b 00 00 17 70 : \u8868\u793a\u5206\u6bb5\u65f6\u95f4\u4e3a 1min \uff0c\u4ee5 0.01sec \u4e3a\u5355\u4f4d 4.\u53ef\u53d8\u95f4\u9694 \u00b6 1.\u5206\u6bb5\uff08\u8ddd\u79bb/\u65f6\u95f4+\u4f11\u606f\uff09 \u00b6 \u5b8c\u6574\u547d\u4ee4 \uff1af1 76 6f 18 01 00 01 01 08 17 01 01 03 05 80 00 00 01 f4 04 02 00 3c 06 04 00 00 27 10 14 01 01 18 01 01 17 01 00 03 05 00 00 00 46 50 04 02 00 00 06 04 00 00 27 10 14 01 01 18 01 02 17 01 01 03 05 80 00 00 03 e8 04 02 00 00 06 04 00 00 27 10 14 01 01 18 01 03 17 01 00 03 05 00 00 00 75 30 04 02 00 78 06 04 00 00 27 10 14 01 01 13 02 01 01 09 f2 1min*3+\u95f4\u969430s :f1 76 43 18 01 00 01 01 08 17 01 00 03 05 00 00 00 17 70 04 02 00 1e 14 01 01 18 01 01 17 01 00 03 05 00 00 00 17 70 04 02 00 1e 14 01 01 18 01 02 17 01 00 03 05 00 00 00 17 70 04 02 00 00 14 01 01 13 02 01 01 53 f2 100m*3+\u95f4\u969430s :f1 76 43 18 01 00 01 01 08 17 01 01 03 05 80 00 00 00 64 04 02 00 1e 14 01 01 18 01 01 17 01 01 03 05 80 00 00 00 64 04 02 00 1e 14 01 01 18 01 02 17 01 01 03 05 80 00 00 00 64 04 02 00 00 14 01 01 13 02 01 01 d1 f2 5. \u672a\u5b9a\u4e49\u4f11\u606f\u65f6\u95f4 \u00b6 \u5b8c\u6574\u547d\u4ee4 \uff1af1 76 45 18 01 00 01 01 08 17 01 04 03 05 80 00 00 00 64 04 02 00 00 06 04 00 00 32 c8 14 01 01 18 01 01 17 01 03 03 05 00 00 00 2e e0 04 02 00 00 06 04 00 00 32 c8 14 01 01 01 01 09 05 05 80 00 00 00 00 13 02 01 01 8f f2 17 01 04 \uff1a 04 \u8868\u793a\u76ee\u6807\u8ddd\u79bb\u4f11\u606f\u65f6\u95f4\u672a\u5b9a\u4e49 17 01 03 \uff1a 03 \u8868\u793a\u76ee\u6807\u65f6\u95f4\u4f11\u606f\u65f6\u95f4\u672a\u5b9a\u4e49 01 01 09 \uff1a\u8bbe\u7f6e\u672a\u5b9a\u4e49\u4f11\u606f\u65f6\u95f4 100m Undefined Rest +3min Undefined Rest \uff1af1 76 31 18 01 00 01 01 08 17 01 04 03 05 80 00 00 00 64 14 01 01 18 01 01 17 01 03 03 05 00 00 00 2e e0 14 01 01 01 01 09 05 05 80 00 00 00 00 13 02 01 01 fb f2 6.\u7ec8\u6b62\u953b\u70bc \u00b6 \u5b8c\u6574\u547d\u4ee4 \uff1af1 76 04 13 02 01 02 60 f2","title":"\u6784\u5efa\u547d\u4ee4"},{"location":"Documentation/concept2/concept2/#concept2","text":"\u672c\u6587\u6863\u662f\u53d9\u8ff0\u5982\u4f55\u6784\u5efa\u5408\u9002\u7684\u6307\u4ee4\uff0c\u4f7f\u7528\u5b98\u65b9\u63d0\u4f9b\u7684API\u63a5\u53e3\u5411concept2\u5212\u8239\u673a\u53d1\u9001\u9884\u5b9a\u4e49\u547d\u4ee4\u3002 \u672c\u6587\u6863\u4e0d\u4fdd\u8bc1\u5b8c\u5168\u51c6\u786e\uff0c\u4ec5\u505a\u53c2\u8003\u4f7f\u7528\uff0c\u8bf7\u4f7f\u7528\u8005\u5207\u52ff\u76f2\u4ece\u3002","title":"concept2\u4e0b\u53d1\u8bbe\u7f6e\u547d\u4ee4"},{"location":"Documentation/concept2/concept2/#1","text":"\u53d1\u9001\u4ee5\u4e0b\u547d\u4ee4\u9700\u5148\u7528\u84dd\u7259\u4e0e\u8868\u5934\u76f8\u8fde \u6784\u5efa\u547d\u4ee4\u5b57\u7b26\u6570\u91cf\u6700\u5927\u503c\u4e3a120 \u4e0b\u53d1\u6307\u4ee4\u53ef\u4f7f\u7528\u5b98\u65b9\u63d0\u4f9b PMSDKDemo \u200b PMSDKDemo\u4e0b\u8f7d\u5730\u5740","title":"1. \u6ce8\u610f\u4e8b\u9879"},{"location":"Documentation/concept2/concept2/#2","text":"\u9664\u53bb f1\u3001f2 \u5c06\u6240\u6709\u6570\u636e\u8fdb\u884c\u5f02\u6216 \u793a\u4f8b \u200b \u9700\u8981\u8ba1\u7b97\u7684\u6570\u636e \uff1a76 18 01 01 05 03 05 00 00 01 d3 c1 05 05 00 00 00 13 71 14 01 01 13 02 01 01 \u200b \u6821\u9a8c\u548c \uff1a19 \u200b \u53d1\u9001\u547d\u4ee4 \uff1af1 76 18 01 01 05 03 05 00 00 01 d3 c1 05 05 00 00 00 13 71 14 01 01 13 02 01 01 19 f2","title":"2.\u6821\u9a8c\u548c\u8ba1\u7b97"},{"location":"Documentation/concept2/concept2/#3","text":"","title":"3.\u56fa\u5b9a\u65f6\u95f4/\u8ddd\u79bb"},{"location":"Documentation/concept2/concept2/#1_1","text":"\u539f\u59cb\u793a\u4f8b \u8be5\u547d\u4ee4\u4f7f\u7528 tkcmdsetUSB_do_DDIcommand \u53d1\u9001\uff0c\u5176\u53d1\u9001\u7684\u542b\u4e49\u4e3a\uff1a\u76ee\u6807\u8ddd\u79bb 2000m \uff0c\u5206\u6bb5\u8ddd\u79bb 400m \u81ea\u5b9a\u4e49\u793a\u4f8b \u200b \u5b8c\u6574\u547d\u4ee4 \uff1af1 76 18 01 01 03 03 05 80 00 01 11 11 05 05 80 00 00 00 64 14 01 01 13 02 01 01 0b f2 \u200b \u8bf4\u660e \uff1a\u76ee\u6807\u8ddd\u79bb 69905m ,\u5206\u6bb5\u8ddd\u79bb 100m \u200b 00 01 11 11 \uff1a\u8868\u793a\u8bbe\u5b9a\u76ee\u6807\u8ddd\u79bb\u4e3a 69905m \uff0c\u4ee5 1m \u4e3a\u5355\u4f4d \u200b 00 00 00 64 \uff1a\u8868\u793a\u5206\u6bb5\u8ddd\u79bb\u4e3a 100m \uff0c\u4ee5 1m \u4e3a\u5355\u4f4d","title":"1. \u8ddd\u79bb/\u5206\u6bb5"},{"location":"Documentation/concept2/concept2/#2_1","text":"\u539f\u59cb\u793a\u4f8b \u200b \u8be5\u547d\u4ee4\u4f7f\u7528 tkcmdsetUSB_do_DDIcommand \u53d1\u9001\uff0c\u5176\u53d1\u9001\u7684\u542b\u4e49\u4e3a\uff1a\u76ee\u6807\u65f6\u95f4 20min ,\u5206\u6bb5\u65f6\u95f4 4min \u81ea\u5b9a\u4e49\u793a\u4f8b \u200b \u5b8c\u6574\u547d\u4ee4 \uff1af1 76 18 01 01 05 03 05 00 00 01 d4 c0 05 05 00 00 00 17 70 14 01 01 13 02 01 01 1a f2 \u200b \u8bf4\u660e \uff1a\u76ee\u6807\u65f6\u95f4 20min ,\u5206\u6bb5\u65f6\u95f4 1min \u200b 00 01 d4 c0 \uff1a\u8868\u793a\u8bbe\u5b9a\u76ee\u6807\u65f6\u95f4\u4e3a 20min \uff0c\u4ee5 0.01sec \u4e3a\u5355\u4f4d \u200b 00 00 17 70 : \u8868\u793a\u5206\u6bb5\u65f6\u95f4\u4e3a 1min \uff0c\u4ee5 0.01sec \u4e3a\u5355\u4f4d","title":"2.\u65f6\u95f4/\u5206\u6bb5"},{"location":"Documentation/concept2/concept2/#4","text":"","title":"4.\u53ef\u53d8\u95f4\u9694"},{"location":"Documentation/concept2/concept2/#1_2","text":"\u5b8c\u6574\u547d\u4ee4 \uff1af1 76 6f 18 01 00 01 01 08 17 01 01 03 05 80 00 00 01 f4 04 02 00 3c 06 04 00 00 27 10 14 01 01 18 01 01 17 01 00 03 05 00 00 00 46 50 04 02 00 00 06 04 00 00 27 10 14 01 01 18 01 02 17 01 01 03 05 80 00 00 03 e8 04 02 00 00 06 04 00 00 27 10 14 01 01 18 01 03 17 01 00 03 05 00 00 00 75 30 04 02 00 78 06 04 00 00 27 10 14 01 01 13 02 01 01 09 f2 1min*3+\u95f4\u969430s :f1 76 43 18 01 00 01 01 08 17 01 00 03 05 00 00 00 17 70 04 02 00 1e 14 01 01 18 01 01 17 01 00 03 05 00 00 00 17 70 04 02 00 1e 14 01 01 18 01 02 17 01 00 03 05 00 00 00 17 70 04 02 00 00 14 01 01 13 02 01 01 53 f2 100m*3+\u95f4\u969430s :f1 76 43 18 01 00 01 01 08 17 01 01 03 05 80 00 00 00 64 04 02 00 1e 14 01 01 18 01 01 17 01 01 03 05 80 00 00 00 64 04 02 00 1e 14 01 01 18 01 02 17 01 01 03 05 80 00 00 00 64 04 02 00 00 14 01 01 13 02 01 01 d1 f2","title":"1.\u5206\u6bb5\uff08\u8ddd\u79bb/\u65f6\u95f4+\u4f11\u606f\uff09"},{"location":"Documentation/concept2/concept2/#5","text":"\u5b8c\u6574\u547d\u4ee4 \uff1af1 76 45 18 01 00 01 01 08 17 01 04 03 05 80 00 00 00 64 04 02 00 00 06 04 00 00 32 c8 14 01 01 18 01 01 17 01 03 03 05 00 00 00 2e e0 04 02 00 00 06 04 00 00 32 c8 14 01 01 01 01 09 05 05 80 00 00 00 00 13 02 01 01 8f f2 17 01 04 \uff1a 04 \u8868\u793a\u76ee\u6807\u8ddd\u79bb\u4f11\u606f\u65f6\u95f4\u672a\u5b9a\u4e49 17 01 03 \uff1a 03 \u8868\u793a\u76ee\u6807\u65f6\u95f4\u4f11\u606f\u65f6\u95f4\u672a\u5b9a\u4e49 01 01 09 \uff1a\u8bbe\u7f6e\u672a\u5b9a\u4e49\u4f11\u606f\u65f6\u95f4 100m Undefined Rest +3min Undefined Rest \uff1af1 76 31 18 01 00 01 01 08 17 01 04 03 05 80 00 00 00 64 14 01 01 18 01 01 17 01 03 03 05 00 00 00 2e e0 14 01 01 01 01 09 05 05 80 00 00 00 00 13 02 01 01 fb f2","title":"5. \u672a\u5b9a\u4e49\u4f11\u606f\u65f6\u95f4"},{"location":"Documentation/concept2/concept2/#6","text":"\u5b8c\u6574\u547d\u4ee4 \uff1af1 76 04 13 02 01 02 60 f2","title":"6.\u7ec8\u6b62\u953b\u70bc"},{"location":"Documentation/git/git-index/","text":"git-\u64cd\u4f5c \u00b6 \u200b \u672c\u6587\u6863\u65e8\u5728\u8bb0\u5f55\u548c\u603b\u7ed3\u6211\u5728\u65e5\u5e38\u4f7f\u7528 Git \u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u4fbf\u4e8e\u4ee5\u540e\u53c2\u8003\u548c\u56de\u987e\u3002Git \u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u7248\u672c\u63a7\u5236\u5de5\u5177\uff0c\u4f46\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u5e38\u5e38\u4f1a\u9047\u5230\u4e00\u4e9b\u56f0\u6270\u548c\u6311\u6218\u3002\u901a\u8fc7\u8bb0\u5f55\u8fd9\u4e9b\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\uff0c\u6211\u53ef\u4ee5\u66f4\u597d\u5730\u5e94\u5bf9\u7c7b\u4f3c\u7684\u60c5\u51b5\uff0c\u5e76\u63d0\u9ad8\u81ea\u5df1\u7684 Git \u6280\u80fd\u3002 \u200b \u901a\u8fc7\u8bb0\u5f55\u548c\u603b\u7ed3\u8fd9\u4e9b\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\uff0c\u6211\u53ef\u4ee5\u66f4\u52a0\u719f\u6089 Git \u7684\u5404\u79cd\u529f\u80fd\u548c\u64cd\u4f5c\uff0c\u5e76\u4e14\u5728\u4ee5\u540e\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u80fd\u591f\u66f4\u9ad8\u6548\u5730\u4f7f\u7528 Git\u3002\u540c\u65f6\uff0c\u8fd9\u4e2a\u6587\u6863\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u6211\u4e2a\u4eba\u7684\u77e5\u8bc6\u5e93\uff0c\u968f\u65f6\u67e5\u9605\u548c\u5206\u4eab\u7ed9\u5176\u4ed6\u4eba\u3002","title":"\u524d\u8a00"},{"location":"Documentation/git/git-index/#git-","text":"\u200b \u672c\u6587\u6863\u65e8\u5728\u8bb0\u5f55\u548c\u603b\u7ed3\u6211\u5728\u65e5\u5e38\u4f7f\u7528 Git \u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u4fbf\u4e8e\u4ee5\u540e\u53c2\u8003\u548c\u56de\u987e\u3002Git \u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u7248\u672c\u63a7\u5236\u5de5\u5177\uff0c\u4f46\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u5e38\u5e38\u4f1a\u9047\u5230\u4e00\u4e9b\u56f0\u6270\u548c\u6311\u6218\u3002\u901a\u8fc7\u8bb0\u5f55\u8fd9\u4e9b\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\uff0c\u6211\u53ef\u4ee5\u66f4\u597d\u5730\u5e94\u5bf9\u7c7b\u4f3c\u7684\u60c5\u51b5\uff0c\u5e76\u63d0\u9ad8\u81ea\u5df1\u7684 Git \u6280\u80fd\u3002 \u200b \u901a\u8fc7\u8bb0\u5f55\u548c\u603b\u7ed3\u8fd9\u4e9b\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\uff0c\u6211\u53ef\u4ee5\u66f4\u52a0\u719f\u6089 Git \u7684\u5404\u79cd\u529f\u80fd\u548c\u64cd\u4f5c\uff0c\u5e76\u4e14\u5728\u4ee5\u540e\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u80fd\u591f\u66f4\u9ad8\u6548\u5730\u4f7f\u7528 Git\u3002\u540c\u65f6\uff0c\u8fd9\u4e2a\u6587\u6863\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u6211\u4e2a\u4eba\u7684\u77e5\u8bc6\u5e93\uff0c\u968f\u65f6\u67e5\u9605\u548c\u5206\u4eab\u7ed9\u5176\u4ed6\u4eba\u3002","title":"git-\u64cd\u4f5c"},{"location":"Documentation/git/git-%E5%B0%8F%E7%BB%86%E8%8A%82/","text":"git-\u5c0f\u7ec6\u8282 \u00b6 \u9879\u76ee\u514b\u9686\u5931\u8d25 \u00b6 \u5728\u5f00\u542f\u52a0\u901f\u5668\u514b\u9686 GitHub \u9879\u76ee\u65f6\u4f1a\u5b58\u5728\u514b\u9686\u5931\u8d25\u95ee\u9898 git clone https://github.com/yanghualv7/yanghualv7.github.io.git pages \u8fd9\u4e2a\u9519\u8bef\u63d0\u793a\u663e\u793a\u4f60\u7684\u7535\u8111\u65e0\u6cd5\u8fde\u63a5\u5230 GitHub \u7684\u670d\u52a1\u5668 Cloning into 'pages' ... fatal: unable to access 'https://github.com/yanghualv7/yanghualv7.github.io.git/ ' : Failed to connect to github.com port 443 after 21127 ms: Couldn ' t connect to server \u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u89e3\u51b3 git config --global http.postBuffer 524288000 \u8fd9\u4e2a\u547d\u4ee4\u7684\u610f\u4e49\u662f\u8bbe\u7f6e Git \u7684 http.postBuffer \u53c2\u6570\u7684\u503c\u4e3a 524288000\u3002 http.postBuffer \u53c2\u6570\u7528\u4e8e\u8bbe\u7f6e Git \u5728\u8fdb\u884c HTTP \u7f51\u7edc\u8bf7\u6c42\u65f6\u4f7f\u7528\u7684\u7f13\u51b2\u533a\u5927\u5c0f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cGit \u4f7f\u7528\u8f83\u5c0f\u7684\u7f13\u51b2\u533a\u6765\u5904\u7406 HTTP \u8bf7\u6c42\u3002\u4f46\u662f\uff0c\u5f53\u4f60\u5728\u8fdb\u884c\u5927\u578b\u64cd\u4f5c\uff08\u5982\u514b\u9686\u5927\u578b\u5b58\u50a8\u5e93\uff09\u65f6\uff0c\u4e0a\u4f20\u7684\u6570\u636e\u53ef\u80fd\u4f1a\u8d85\u51fa\u9ed8\u8ba4\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u5bfc\u81f4\u8bf7\u6c42\u5931\u8d25\u3002 \u901a\u8fc7\u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u5e76\u8bbe\u7f6e\u8f83\u5927\u7684 http.postBuffer \u503c\uff0c\u53ef\u4ee5\u589e\u52a0 Git \u7684\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u4ee5\u4fbf\u5904\u7406\u5927\u91cf\u6570\u636e\u7684\u4e0a\u4f20\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u5728\u4e0a\u4f20\u5927\u578b\u64cd\u4f5c\u65f6\u51fa\u73b0\u8bf7\u6c42\u5931\u8d25\u7684\u60c5\u51b5\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u547d\u4ee4\u662f\u5168\u5c40\u8bbe\u7f6e\uff0c\u5bf9\u5f53\u524d\u7528\u6237\u7684\u6240\u6709 Git \u4ed3\u5e93\u90fd\u751f\u6548\u3002\u5982\u679c\u4f60\u53ea\u60f3\u5728\u7279\u5b9a\u7684\u4ed3\u5e93\u4e2d\u8bbe\u7f6e\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u53ef\u4ee5\u5728\u8be5\u4ed3\u5e93\u76ee\u5f55\u4e0b\u6267\u884c\u76f8\u540c\u7684\u547d\u4ee4\uff0c\u800c\u4e0d\u4f7f\u7528 --global \u53c2\u6570\u3002 \u6210\u529f\u514b\u9686 git clone https://github.com/yanghualv7/yanghualv7.github.io.git pages Cloning into 'pages' ... remote: Enumerating objects: 355 , done . remote: Counting objects: 100 % ( 103 /103 ) , done . remote: Compressing objects: 100 % ( 63 /63 ) , done . remote: Total 355 ( delta 35 ) , reused 83 ( delta 25 ) , pack-reused 252Receiving obj Receiving objects: 100 % ( 355 /355 ) , 12 .55 MiB | 4 .45 MiB/s, done . Resolving deltas: 100 % ( 107 /107 ) , done .","title":"git\u514b\u9686\u9879\u76ee\u5931\u8d25"},{"location":"Documentation/git/git-%E5%B0%8F%E7%BB%86%E8%8A%82/#git-","text":"","title":"git-\u5c0f\u7ec6\u8282"},{"location":"Documentation/git/git-%E5%B0%8F%E7%BB%86%E8%8A%82/#_1","text":"\u5728\u5f00\u542f\u52a0\u901f\u5668\u514b\u9686 GitHub \u9879\u76ee\u65f6\u4f1a\u5b58\u5728\u514b\u9686\u5931\u8d25\u95ee\u9898 git clone https://github.com/yanghualv7/yanghualv7.github.io.git pages \u8fd9\u4e2a\u9519\u8bef\u63d0\u793a\u663e\u793a\u4f60\u7684\u7535\u8111\u65e0\u6cd5\u8fde\u63a5\u5230 GitHub \u7684\u670d\u52a1\u5668 Cloning into 'pages' ... fatal: unable to access 'https://github.com/yanghualv7/yanghualv7.github.io.git/ ' : Failed to connect to github.com port 443 after 21127 ms: Couldn ' t connect to server \u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u89e3\u51b3 git config --global http.postBuffer 524288000 \u8fd9\u4e2a\u547d\u4ee4\u7684\u610f\u4e49\u662f\u8bbe\u7f6e Git \u7684 http.postBuffer \u53c2\u6570\u7684\u503c\u4e3a 524288000\u3002 http.postBuffer \u53c2\u6570\u7528\u4e8e\u8bbe\u7f6e Git \u5728\u8fdb\u884c HTTP \u7f51\u7edc\u8bf7\u6c42\u65f6\u4f7f\u7528\u7684\u7f13\u51b2\u533a\u5927\u5c0f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cGit \u4f7f\u7528\u8f83\u5c0f\u7684\u7f13\u51b2\u533a\u6765\u5904\u7406 HTTP \u8bf7\u6c42\u3002\u4f46\u662f\uff0c\u5f53\u4f60\u5728\u8fdb\u884c\u5927\u578b\u64cd\u4f5c\uff08\u5982\u514b\u9686\u5927\u578b\u5b58\u50a8\u5e93\uff09\u65f6\uff0c\u4e0a\u4f20\u7684\u6570\u636e\u53ef\u80fd\u4f1a\u8d85\u51fa\u9ed8\u8ba4\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u5bfc\u81f4\u8bf7\u6c42\u5931\u8d25\u3002 \u901a\u8fc7\u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u5e76\u8bbe\u7f6e\u8f83\u5927\u7684 http.postBuffer \u503c\uff0c\u53ef\u4ee5\u589e\u52a0 Git \u7684\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u4ee5\u4fbf\u5904\u7406\u5927\u91cf\u6570\u636e\u7684\u4e0a\u4f20\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u5728\u4e0a\u4f20\u5927\u578b\u64cd\u4f5c\u65f6\u51fa\u73b0\u8bf7\u6c42\u5931\u8d25\u7684\u60c5\u51b5\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u547d\u4ee4\u662f\u5168\u5c40\u8bbe\u7f6e\uff0c\u5bf9\u5f53\u524d\u7528\u6237\u7684\u6240\u6709 Git \u4ed3\u5e93\u90fd\u751f\u6548\u3002\u5982\u679c\u4f60\u53ea\u60f3\u5728\u7279\u5b9a\u7684\u4ed3\u5e93\u4e2d\u8bbe\u7f6e\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u53ef\u4ee5\u5728\u8be5\u4ed3\u5e93\u76ee\u5f55\u4e0b\u6267\u884c\u76f8\u540c\u7684\u547d\u4ee4\uff0c\u800c\u4e0d\u4f7f\u7528 --global \u53c2\u6570\u3002 \u6210\u529f\u514b\u9686 git clone https://github.com/yanghualv7/yanghualv7.github.io.git pages Cloning into 'pages' ... remote: Enumerating objects: 355 , done . remote: Counting objects: 100 % ( 103 /103 ) , done . remote: Compressing objects: 100 % ( 63 /63 ) , done . remote: Total 355 ( delta 35 ) , reused 83 ( delta 25 ) , pack-reused 252Receiving obj Receiving objects: 100 % ( 355 /355 ) , 12 .55 MiB | 4 .45 MiB/s, done . Resolving deltas: 100 % ( 107 /107 ) , done .","title":"\u9879\u76ee\u514b\u9686\u5931\u8d25"},{"location":"Documentation/git/git-%E6%8E%A8%E9%80%81%E6%96%B9%E5%BC%8F/","text":"git-\u63a8\u9001\u65b9\u5f0f \u00b6 \u82e5\u8fdc\u7a0b\u4ed3\u5e93\u4e2d\u6ca1\u6709\u521b\u5efa\u4e0e\u672c\u5730\u5206\u652f sensors-concept2-formulate_plan \u76f8\u5bf9\u5e94\u7684\u8fdc\u7a0b\u5206\u652f\uff0c\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\u6765\u63a8\u9001\u672c\u5730\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff1a \u521b\u5efa\u672c\u5730\u5206\u652f(\u82e5\u5df2\u521b\u5efa\u5ffd\u7565\u6b64\u6b65\u9aa4)\uff1a \u5728\u672c\u5730\u4ee3\u7801\u5e93\u4e2d\u5efa\u7acb\u81ea\u5df1\u7684\u5206\u652f git checkout -b sensors-concept2-formulate_plan \u521b\u5efa\u8fdc\u7a0b\u5206\u652f \u9996\u5148\uff0c\u5728\u8fdc\u7a0b\u4ed3\u5e93\u4e2d\u521b\u5efa\u4e00\u4e2a\u4e0e\u672c\u5730\u5206\u652f\u76f8\u5bf9\u5e94\u7684\u8fdc\u7a0b\u5206\u652f\u3002\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a git push origin sensors-concept2-formulate_plan:sensors-concept2-formulate_plan \u8fd9\u4f1a\u5c06\u672c\u5730\u5206\u652f\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u5728\u8fdc\u7a0b\u4ed3\u5e93\u4e2d\u521b\u5efa\u4e00\u4e2a\u540c\u540d\u7684\u5206\u652f sensors-concept2-formulate_plan \u3002 \u63a8\u9001\u672c\u5730\u5206\u652f\uff1a \u4e00\u65e6\u8fdc\u7a0b\u5206\u652f\u521b\u5efa\u6210\u529f\uff0c\u53ef\u4ee5\u4f7f\u7528\u6b63\u5e38\u7684 git push \u547d\u4ee4\u6765\u5c06\u672c\u5730\u5206\u652f\u63a8\u9001\u5230\u8fdc\u7a0b\u5206\u652f\uff1a git push origin sensors-concept2-formulate_plan \u8fd9\u4f1a\u5c06\u672c\u5730\u5206\u652f\u7684\u4fee\u6539\u63a8\u9001\u5230\u8fdc\u7a0b\u5206\u652f\u4e2d\u3002 \u5c06\u4fee\u6539\u6dfb\u52a0\u5230\u6682\u5b58\u533a\uff1a \u4f7f\u7528 git add \u547d\u4ee4\u5c06\u9700\u8981\u8981\u63d0\u4ea4\u7684\u4fee\u6539\u6dfb\u52a0\u5230\u6682\u5b58\u533a\u3002\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5c06\u6240\u6709\u4fee\u6539\u6dfb\u52a0\u5230\u6682\u5b58\u533a\uff1a git add . \u6216\u8005\uff0c\u5982\u679c\u53ea\u5c06\u7279\u5b9a\u6587\u4ef6\u7684\u4fee\u6539\u6dfb\u52a0\u5230\u6682\u5b58\u533a\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5c06\u6587\u4ef6\u540d\u66ff\u6362\u4e3a\u5b9e\u9645\u7684\u6587\u4ef6\u540d\uff1a git add include/pm5getdata.h include/sed_data_sql.h include/sed_formulate_plan.h source/main.cpp source/sed_data_sql.cpp \u63d0\u4ea4\u4fee\u6539\u5230\u672c\u5730\u5206\u652f\uff1a \u4f7f\u7528 git commit \u547d\u4ee4\u5c06\u6682\u5b58\u533a\u4e2d\u7684\u4fee\u6539\u63d0\u4ea4\u5230\u672c\u5730\u5206\u652f\u3002\u5728\u63d0\u4ea4\u65f6\uff0c\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u63d0\u4ea4\u4fe1\u606f\uff0c\u63cf\u8ff0\u6240\u505a\u7684\u4fee\u6539\u3002\u4f8b\u5982\uff1a git commit -m \"\u589e\u52a0Get\u8bf7\u6c42\" \u8bf7\u5c06 \"\u589e\u52a0Get\u8bf7\u6c42\" \u66ff\u6362\u4e3a\u9002\u5408\u672c\u6b21\u4fee\u6539\u7684\u5b9e\u9645\u63cf\u8ff0\u3002 \u67e5\u770b\u672c\u5730\u5206\u652f\u72b6\u6001\uff1a \u4f7f\u7528 git status \u547d\u4ee4\u6765\u786e\u8ba4\u63d0\u4ea4\u662f\u5426\u6210\u529f\uff0c\u4ee5\u53ca\u662f\u5426\u8fd8\u6709\u672a\u63d0\u4ea4\u7684\u4fee\u6539\u3002 git status \u63a8\u9001\u524d\u5148pull \u4e3a\u907f\u514d\u53d1\u751f\u51b2\u7a81\uff0c\u5148 pull \u4e00\u904d\uff0c\u5982\u6709\u51b2\u7a81\u5148\u5728\u672c\u5730\u5c06\u51b2\u7a81\u89e3\u51b3 git pull \u63a8\u9001\u672c\u5730\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93 \u5c06\u672c\u5730\u5206\u652f\u7684\u4fee\u6539\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528 git push \u547d\u4ee4\uff1a git push origin sensors-concept2-formulate_plan \u8fd9\u4f1a\u5c06\u672c\u5730\u5206\u652f\u7684\u4fee\u6539\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\u4e2d\u7684\u76f8\u5e94\u5206\u652f\u3002 \u8bf7\u6ce8\u610f\uff0c\u672c\u5730\u5206\u652f\u53ef\u80fd\u5df2\u7ecf\u6bd4\u8fdc\u7a0b\u4ed3\u5e93\u7684 origin/master \u5206\u652f\u8d85\u524d\u4e86 n \u6b21\u63d0\u4ea4\u3002\u5728\u63a8\u9001\u4e4b\u524d\uff0c\u786e\u4fdd\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f\u4fdd\u6301\u540c\u6b65\u3002","title":"git\u63a8\u9001"},{"location":"Documentation/git/git-%E6%8E%A8%E9%80%81%E6%96%B9%E5%BC%8F/#git-","text":"\u82e5\u8fdc\u7a0b\u4ed3\u5e93\u4e2d\u6ca1\u6709\u521b\u5efa\u4e0e\u672c\u5730\u5206\u652f sensors-concept2-formulate_plan \u76f8\u5bf9\u5e94\u7684\u8fdc\u7a0b\u5206\u652f\uff0c\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\u6765\u63a8\u9001\u672c\u5730\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff1a \u521b\u5efa\u672c\u5730\u5206\u652f(\u82e5\u5df2\u521b\u5efa\u5ffd\u7565\u6b64\u6b65\u9aa4)\uff1a \u5728\u672c\u5730\u4ee3\u7801\u5e93\u4e2d\u5efa\u7acb\u81ea\u5df1\u7684\u5206\u652f git checkout -b sensors-concept2-formulate_plan \u521b\u5efa\u8fdc\u7a0b\u5206\u652f \u9996\u5148\uff0c\u5728\u8fdc\u7a0b\u4ed3\u5e93\u4e2d\u521b\u5efa\u4e00\u4e2a\u4e0e\u672c\u5730\u5206\u652f\u76f8\u5bf9\u5e94\u7684\u8fdc\u7a0b\u5206\u652f\u3002\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a git push origin sensors-concept2-formulate_plan:sensors-concept2-formulate_plan \u8fd9\u4f1a\u5c06\u672c\u5730\u5206\u652f\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u5728\u8fdc\u7a0b\u4ed3\u5e93\u4e2d\u521b\u5efa\u4e00\u4e2a\u540c\u540d\u7684\u5206\u652f sensors-concept2-formulate_plan \u3002 \u63a8\u9001\u672c\u5730\u5206\u652f\uff1a \u4e00\u65e6\u8fdc\u7a0b\u5206\u652f\u521b\u5efa\u6210\u529f\uff0c\u53ef\u4ee5\u4f7f\u7528\u6b63\u5e38\u7684 git push \u547d\u4ee4\u6765\u5c06\u672c\u5730\u5206\u652f\u63a8\u9001\u5230\u8fdc\u7a0b\u5206\u652f\uff1a git push origin sensors-concept2-formulate_plan \u8fd9\u4f1a\u5c06\u672c\u5730\u5206\u652f\u7684\u4fee\u6539\u63a8\u9001\u5230\u8fdc\u7a0b\u5206\u652f\u4e2d\u3002 \u5c06\u4fee\u6539\u6dfb\u52a0\u5230\u6682\u5b58\u533a\uff1a \u4f7f\u7528 git add \u547d\u4ee4\u5c06\u9700\u8981\u8981\u63d0\u4ea4\u7684\u4fee\u6539\u6dfb\u52a0\u5230\u6682\u5b58\u533a\u3002\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5c06\u6240\u6709\u4fee\u6539\u6dfb\u52a0\u5230\u6682\u5b58\u533a\uff1a git add . \u6216\u8005\uff0c\u5982\u679c\u53ea\u5c06\u7279\u5b9a\u6587\u4ef6\u7684\u4fee\u6539\u6dfb\u52a0\u5230\u6682\u5b58\u533a\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5c06\u6587\u4ef6\u540d\u66ff\u6362\u4e3a\u5b9e\u9645\u7684\u6587\u4ef6\u540d\uff1a git add include/pm5getdata.h include/sed_data_sql.h include/sed_formulate_plan.h source/main.cpp source/sed_data_sql.cpp \u63d0\u4ea4\u4fee\u6539\u5230\u672c\u5730\u5206\u652f\uff1a \u4f7f\u7528 git commit \u547d\u4ee4\u5c06\u6682\u5b58\u533a\u4e2d\u7684\u4fee\u6539\u63d0\u4ea4\u5230\u672c\u5730\u5206\u652f\u3002\u5728\u63d0\u4ea4\u65f6\uff0c\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u63d0\u4ea4\u4fe1\u606f\uff0c\u63cf\u8ff0\u6240\u505a\u7684\u4fee\u6539\u3002\u4f8b\u5982\uff1a git commit -m \"\u589e\u52a0Get\u8bf7\u6c42\" \u8bf7\u5c06 \"\u589e\u52a0Get\u8bf7\u6c42\" \u66ff\u6362\u4e3a\u9002\u5408\u672c\u6b21\u4fee\u6539\u7684\u5b9e\u9645\u63cf\u8ff0\u3002 \u67e5\u770b\u672c\u5730\u5206\u652f\u72b6\u6001\uff1a \u4f7f\u7528 git status \u547d\u4ee4\u6765\u786e\u8ba4\u63d0\u4ea4\u662f\u5426\u6210\u529f\uff0c\u4ee5\u53ca\u662f\u5426\u8fd8\u6709\u672a\u63d0\u4ea4\u7684\u4fee\u6539\u3002 git status \u63a8\u9001\u524d\u5148pull \u4e3a\u907f\u514d\u53d1\u751f\u51b2\u7a81\uff0c\u5148 pull \u4e00\u904d\uff0c\u5982\u6709\u51b2\u7a81\u5148\u5728\u672c\u5730\u5c06\u51b2\u7a81\u89e3\u51b3 git pull \u63a8\u9001\u672c\u5730\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93 \u5c06\u672c\u5730\u5206\u652f\u7684\u4fee\u6539\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528 git push \u547d\u4ee4\uff1a git push origin sensors-concept2-formulate_plan \u8fd9\u4f1a\u5c06\u672c\u5730\u5206\u652f\u7684\u4fee\u6539\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\u4e2d\u7684\u76f8\u5e94\u5206\u652f\u3002 \u8bf7\u6ce8\u610f\uff0c\u672c\u5730\u5206\u652f\u53ef\u80fd\u5df2\u7ecf\u6bd4\u8fdc\u7a0b\u4ed3\u5e93\u7684 origin/master \u5206\u652f\u8d85\u524d\u4e86 n \u6b21\u63d0\u4ea4\u3002\u5728\u63a8\u9001\u4e4b\u524d\uff0c\u786e\u4fdd\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f\u4fdd\u6301\u540c\u6b65\u3002","title":"git-\u63a8\u9001\u65b9\u5f0f"},{"location":"Documentation/git/git-%E7%BB%88%E7%AB%AF%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/","text":"\u5728 Git \u4e2d\u51fa\u73b0\u4e2d\u6587\u6587\u4ef6\u540d\u4e71\u7801\u7684\u60c5\u51b5\uff0c\u901a\u5e38\u662f\u56e0\u4e3a\u7ec8\u7aef\u6216 Git \u672c\u8eab\u7684\u7f16\u7801\u8bbe\u7f6e\u95ee\u9898\u3002\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u6765\u89e3\u51b3 Git \u663e\u793a\u4e2d\u6587\u6587\u4ef6\u540d\u4e71\u7801\u7684\u95ee\u9898\uff1a 1. \u68c0\u67e5\u7ec8\u7aef\u7f16\u7801 \u00b6 \u786e\u4fdd\u4f60\u7684\u7ec8\u7aef\u4f7f\u7528\u7684\u662f UTF-8 \u7f16\u7801\u3002\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u68c0\u67e5\u7ec8\u7aef\u7684\u5f53\u524d\u7f16\u7801\uff1a locale \u786e\u4fdd\u8f93\u51fa\u7684 LANG \u548c LC_CTYPE \u7b49\u53d8\u91cf\u4e2d\u5305\u542b UTF-8 \uff0c\u4f8b\u5982\uff1a LANG=\"en_US.UTF-8\" LC_CTYPE=\"en_US.UTF-8\" \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u4e3a UTF-8\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u8bbe\u7f6e\uff1a export LC_ALL = en_US.UTF-8 export LANG = en_US.UTF-8 2. \u8bbe\u7f6e Git \u7684\u7f16\u7801 \u00b6 \u4f60\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e Git \u914d\u7f6e\u6765\u786e\u4fdd Git \u4ee5 UTF-8 \u7f16\u7801\u5904\u7406\u6587\u4ef6\u540d\uff1a git config --global core.quotepath false \u8fd9\u6761\u547d\u4ee4\u7684\u4f5c\u7528\u662f\u7981\u7528 Git \u5bf9\u975e ASCII \u5b57\u7b26\u7684\u8f6c\u4e49\uff0c\u786e\u4fdd\u4e2d\u6587\u6587\u4ef6\u540d\u53ef\u4ee5\u6b63\u786e\u663e\u793a\u3002 3. \u5728 .gitconfig \u6587\u4ef6\u4e2d\u624b\u52a8\u914d\u7f6e\u7f16\u7801 \u00b6 \u6253\u5f00 Git \u7684\u5168\u5c40\u914d\u7f6e\u6587\u4ef6 .gitconfig \uff0c\u624b\u52a8\u6dfb\u52a0\u6216\u4fee\u6539\u7f16\u7801\u8bbe\u7f6e\uff1a [ i18n ] commitencoding = utf-8 [ core ] quotepath = false \u5b8c\u6210\u8fd9\u4e9b\u6b65\u9aa4\u540e\uff0c\u518d\u6b21\u8fd0\u884c git status \uff0c\u4e2d\u6587\u6587\u4ef6\u540d\u5e94\u8be5\u4f1a\u6b63\u786e\u663e\u793a\u3002","title":"git\u7ec8\u7aef\u4e71\u7801"},{"location":"Documentation/git/git-%E7%BB%88%E7%AB%AF%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/#1","text":"\u786e\u4fdd\u4f60\u7684\u7ec8\u7aef\u4f7f\u7528\u7684\u662f UTF-8 \u7f16\u7801\u3002\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u68c0\u67e5\u7ec8\u7aef\u7684\u5f53\u524d\u7f16\u7801\uff1a locale \u786e\u4fdd\u8f93\u51fa\u7684 LANG \u548c LC_CTYPE \u7b49\u53d8\u91cf\u4e2d\u5305\u542b UTF-8 \uff0c\u4f8b\u5982\uff1a LANG=\"en_US.UTF-8\" LC_CTYPE=\"en_US.UTF-8\" \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u4e3a UTF-8\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u8bbe\u7f6e\uff1a export LC_ALL = en_US.UTF-8 export LANG = en_US.UTF-8","title":"1. \u68c0\u67e5\u7ec8\u7aef\u7f16\u7801"},{"location":"Documentation/git/git-%E7%BB%88%E7%AB%AF%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/#2-git","text":"\u4f60\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e Git \u914d\u7f6e\u6765\u786e\u4fdd Git \u4ee5 UTF-8 \u7f16\u7801\u5904\u7406\u6587\u4ef6\u540d\uff1a git config --global core.quotepath false \u8fd9\u6761\u547d\u4ee4\u7684\u4f5c\u7528\u662f\u7981\u7528 Git \u5bf9\u975e ASCII \u5b57\u7b26\u7684\u8f6c\u4e49\uff0c\u786e\u4fdd\u4e2d\u6587\u6587\u4ef6\u540d\u53ef\u4ee5\u6b63\u786e\u663e\u793a\u3002","title":"2. \u8bbe\u7f6e Git \u7684\u7f16\u7801"},{"location":"Documentation/git/git-%E7%BB%88%E7%AB%AF%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/#3-gitconfig","text":"\u6253\u5f00 Git \u7684\u5168\u5c40\u914d\u7f6e\u6587\u4ef6 .gitconfig \uff0c\u624b\u52a8\u6dfb\u52a0\u6216\u4fee\u6539\u7f16\u7801\u8bbe\u7f6e\uff1a [ i18n ] commitencoding = utf-8 [ core ] quotepath = false \u5b8c\u6210\u8fd9\u4e9b\u6b65\u9aa4\u540e\uff0c\u518d\u6b21\u8fd0\u884c git status \uff0c\u4e2d\u6587\u6587\u4ef6\u540d\u5e94\u8be5\u4f1a\u6b63\u786e\u663e\u793a\u3002","title":"3. \u5728 .gitconfig \u6587\u4ef6\u4e2d\u624b\u52a8\u914d\u7f6e\u7f16\u7801"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/","text":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u7840\u7b14\u8bb0 \u00b6 \\[ (DAY)^{-1} \\] \u4e00.\u65e9\u671f\u51af\u8bfa\u4f9d\u66fc\u673a \u00b6 \u63a7\u5236\u5668\uff1a\u6307\u6325\u7a0b\u5e8f\u8fd0\u884c \u7279\u70b9\uff1a \u4e94\u5927\u4ef6 \u6307\u4ee4\u548c\u6570\u636e\u4ee5\u540c\u7b49\u5730\u4f4d\u5b58\u4e8e\u5b58\u50a8\u5668 \u6307\u4ee4\u548c\u6570\u636e\u4e3a\u4e8c\u8fdb\u5236 \u6307\u4ee4\u7531\u64cd\u4f5c\u7801\u548c\u5730\u5740\u7801\u7ec4\u6210 \u5b58\u50a8\u7a0b\u5e8f \u4ee5\u8fd0\u7b97\u5668\u4e3a\u4e3b \u4e8c.\u73b0\u4ee3\u8ba1\u7b97\u673a\u7ed3\u6784 \u00b6 \u4ee5\u5b58\u50a8\u5668\u4e3a\u4e2d\u5fc3 1.CPU\uff1a\u8fd0\u7b97\u5668+\u63a7\u5236\u5668 \u00b6 2.\u4e3b\u5b58\u50a8\u5668 \u00b6 MAR \u5b58\u50a8\u5730\u5740\u5bc4\u5b58\u5668 \u53cd\u6620\u5b58\u50a8\u5355\u5143\u7684\u4e2a\u6570 MDR \u5b58\u50a8\u6570\u636e\u5bc4\u5b58\u5668 \u53cd\u6620\u5b58\u50a8\u5b57\u957f 3.\u5b58\u50a8\u4f53 \u00b6 \u5b58\u50a8\u5355\u5143 \u5b58\u653e\u4e00\u4e32\u4e8c\u8fdb\u5236\u4ee3\u7801 \u5b58\u50a8\u5b57 \u4e8c\u8fdb\u5236\u4ee3\u7801\u7ec4\u5408 \u5b58\u50a8\u5b57\u957f \u4e8c\u8fdb\u5236\u4f4d\u6570 \u5b58\u50a8\u5143 \u5b58\u50a8\u4e8c\u8fdb\u5236\u7535\u5b50\u5143\u4ef6\uff0c1bit 4.\u8fd0\u7b97\u5668 \u00b6 \u5b9e\u73b0\u7b97\u6570\u8fd0\u7b97 ACC \u7d2f\u52a0\u5668 MQ \u4e58\u5546\u8fd0\u7b97\u5668 X ALU 5.\u63a7\u5236\u5668 \u00b6 CU \u5206\u6790\u6307\u4ee4\uff0c\u53d1\u9001\u63a7\u5236\u4fe1\u53f7 IR \u6307\u4ee4\u5bc4\u5b58\u5668 \u5b58\u653e\u5f53\u524d\u6267\u884c\u6307\u4ee4 PC \u7a0b\u5e8f\u8ba1\u6570\u5668\uff0c\u5b58\u653e\u4e0b\u4e00\u6761\u6307\u4ee4 \u4e09.\u8ba1\u7b97\u673a\u5de5\u4f5c\u8fc7\u7a0b \u00b6 \u56db.\u5b9a\u70b9\u6570\u7f16\u7801 \u00b6 \\(\\text{n+1 bit}\\) \u5408\u6cd5\u8868\u793a\u8303\u56f4 \u6700\u5927\u6570 \u6700\u5c0f\u6570 \u771f\u503c0\u7684\u8868\u793a \u5e26\u7b26\u53f7\u6574\u6570\uff1a\u539f\u7801 \\(-(2^n-1)\\leq x\\leq2^n-1\\) \\(\\begin{array}{c}\\mathbf{0},111...111\\\\=2^n-1\\end{array}\\) \\(\\begin{array}{c}1,111...111\\\\=-(2^n-1)\\end{array}\\) \\(\\begin{array}{c} [+0]_{\\text{\u539f}} = 0 , 0 0 0 \\ldots 0 0 0 \\\\ [-0]_{\\text{\u539f}} = 1 , 0 0 0 \\ldots 0 0 0 \\end{array}\\) \u5e26\u7b26\u53f7\u6574\u6570\uff1a\u53cd\u7801 \\(-(2^n-1)\\leq x\\leq2^n-1\\) \\(\\begin{array}{c}\\mathbf{0},111...111\\\\=2^n-1\\end{array}\\) \\(\\begin{array}{c}1,111...111\\\\=-(2^n-1)\\end{array}\\) \\(\\begin{array}{c} [+0]_{\\text{\u539f}} = 0 , 0 0 0 \\ldots 0 0 0 \\\\ [-0]_{\\text{\u539f}} = 1 , 1 1 1 \\ldots 1 1 1 \\end{array}\\) \u5e26\u7b26\u53f7\u6574\u6570\uff1a\u8865\u7801 \\(-2^n\\leq x\\leq2^n-1\\) \\(\\begin{array}{c}\\mathbf{0},111...111\\\\=2^n-1\\end{array}\\) \\(\\begin{array}{c}1,111...111\\\\=-2^n\\end{array}\\) \\(\\begin{array}{c} [+0]_{\\text{\u8865}} = 0 , 0 0 0 \\ldots 0 0 0 \\\\ \\text{\u771f\u503c0\u53ea\u6709\u4e00\u79cd\u8865\u7801} \\end{array}\\) \u65e0\u7b26\u53f7\u6574\u6570 \\(0\\leq x\\leq2^{n+1}-1\\) \\(\\begin{array}{c}1111...111\\\\=2^{n+1}-1\\end{array}\\) \\(\\begin{array}{c}1,000...000\\\\=0\\end{array}\\) \\(0000...000\\) 1.\u53cd\u7801 \u00b6 2.\u8865\u7801 \u00b6 \u5f53\u8981\u5b8c\u6210\u8fd9\u4e2a\u8f6c\u6362 $$ [B] \\text{\u8865} \\rightarrow [-B] \\text{\u8865} $$ \u4ec5\u9700\u5c06 \\(\\ [B]_\\text{\u8865}\\) \u6309\u7167 \u6309\u4f4d\u53d6\u53cd\u52a0\u4e00\u7684\u65b9\u5f0f\u8f6c\u6362\u5373\u53ef \uff08\u5305\u62ec\u7b26\u53f7\u4f4d\uff09 \u5feb\u6377\u65b9\u5f0f\uff08\u8d1f\u6570\uff09\uff1a\u7b2c\u4e00\u4e2a1\u4e0d\u53d8\uff0c\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4f59\u53d6\u53cd \u6ce8\uff1a\u67092\u4e2a\u7279\u6b8a\u8865\u7801\uff1a 1111 \uff08-1\uff09 1000\uff08-8\uff09\uff1f \u4e94. \u7b97\u672f\u903b\u8f91\u5355\u5143\uff08ALU\uff09\u7684\u4f5c\u7528 \u00b6 \u7ec4\u5408\u903b\u8f91\u7535\u8def\uff1a\u53ea\u4e0e\u8f93\u51fa\u548c\u8f93\u5165\u6709\u5173 \u65f6\u5e8f\u903b\u8f91\u7535\u8def\uff1a ALU\u7684\u6838\u5fc3\u662f\u52a0\u6cd5\u5668 \u516d. \u52a0\u6cd5\u5668 \u00b6 \u4e03. \u5b9a\u70b9\u6570 \u00b6 1.\u79fb\u4f4d\u8fd0\u7b97 \u00b6 2.\u52a0\u51cf\u6cd5 \u00b6 \u76f4\u63a5\u7528\u539f\u7801\u52a0\u51cf\u53ef\u80fd\u4f1a\u51fa\u9519 \u8ba1\u7b97\u7ed3\u679c\u6ea2\u51fa \u5728-127~127\u8303\u56f4\u5185\uff088\u4f4d\u673a\u5668\u6570\uff0c\u542b\u7b26\u53f7\u4f4d\uff09\u7684\u6570\u636e\u8fdb\u884c\u8ba1\u7b97 120+16=136\uff0c\u8ba1\u7b97\u7ed3\u679c\u4f1a\u6ea2\u51fa\u3002 0 111 1000 + 0 001 0000 = 1 000 1000 \uff08\u7b2c\u4e00\u4e2a\u4e3a\u7b26\u53f7\u4f4d\uff09 3.\u65e0\u7b26\u53f7\u548c\u6709\u7b26\u53f7\u6570\u8ba1\u7b97 \u00b6 \u6807\u5fd7\u4f4d \\(OF\uff08Overflow Flag)\\) \u6ea2\u51fa\u6807\u5fd7\uff0c\u7528\u4e8e\u5224\u65ad \u5e26\u7b26\u53f7\u6570 \u52a0\u51cf\u8fd0\u7b97\u662f\u5426\u6ea2\u51fa\u3002 \\(OF=1\\) \u6ea2\u51fa \\(OF=0\\) \u672a\u6ea2\u51fa OF : \u6b21\u9ad8\u4f4d\u8fdb\u4f4d\u548c\u6700\u9ad8\u4f4d\u8fdb\u4f4d\u5f02\u6216 0 b 1000 + 0 b 1000 -- > 0 b 0000 OF -- > 1 0 b 1011 + 0 b 0100 -- > 0 b 1111 OF -- > 0 \\(SF\uff08Sign Flag\uff09\\) \u7b26\u53f7\u6807\u5fd7\uff0c\u7528\u4e8e\u5224\u65ad \u5e26\u7b26\u53f7\u6570 \u52a0\u51cf\u8fd0\u7b97\u7ed3\u679c\u7684\u6b63\u8d1f\u6027 \u3002 \\(SF=1\\) \u7ed3\u679c\u4e3a\u8d1f \\(SF=0\\) \u7ed3\u679c\u4e3a\u6b63 \u6700\u9ad8\u4f4d\u672c\u4f4d \\(ZF\uff08Zero Flag)\\) \u96f6\u6807\u5fd7\uff0c\u7528\u4e8e\u5224\u65ad\u52a0\u51cf\u8fd0\u7b97\u7ed3\u679c\u662f\u5426\u4e3a0\u3002 $ZF=1 $\u8868\u793a\u7ed3\u679c\u4e3a0 \\(ZF=0\\) \u8868\u793a\u7ed3\u679c\u4e0d\u4e3a0 \\(CF\uff08Carry Flag)\\) \u8fdb\u4f4d/\u501f\u4f4d\u6807\u5fd7\uff0c\u7528\u4e8e\u5224\u65ad \u65e0\u7b26\u53f7\u6570 \u52a0\u51cf\u8fd0\u7b97\u662f\u5426\u6ea2\u51fa\u3002 \\(CF=1\\) \u6ea2\u51fa $CF=0 $\u672a\u6ea2\u51fa \u65e0\u7b26\u53f7\u6570\u7684\u6700\u9ad8\u4f4d\u8fdb\u4f4d\u4e3a 1 \u5f02\u6216sub\uff0cCF= 1 \uff0c\u5426\u5219CF= 0 0 b 1111 + 0 b 0001 -- > 0 b 0000 CF -- > 1 0 b 0111 + 0 b 0001 -- > 0 b 1000 CF -- > 0 3.\u539f\u7801\u4e58\u6cd5\u8fd0\u7b97 \u00b6 \u624b\u7b97\u5341\u8fdb\u5236 \\[\\begin{aligned}\\mathsf{r}&\\text{\u8fdb\u5236:}\\quad K_{\\mathbf{n}}K_{\\mathbf{n-1}}\\ldots K_{\\mathbf{2}}K_{\\mathbf{1}}K_{\\mathbf{0}}K_{-1}K_{-2}\\ldots K_{-m}\\\\&=K_{\\mathbf{n}}\\times r^{\\mathbf{n}}+K_{\\mathbf{n-1}}\\times r^{n-1}+\\cdots+K_{\\mathbf{2}}\\times r^{\\mathbf{2}}+K_{\\mathbf{1}}\\times r^{\\mathbf{1}}+K_{\\mathbf{0}}\\times r^{\\mathbf{0}}+K_{\\mathbf{-1}}\\times r^{-1}+K_{\\mathbf{-2}}\\times r^{-\\mathbf{2}}+\\ldots+K_{-m}\\times r^{-m}\\end{aligned}\\] \\[ \\begin{equation*} \\begin{array}{r} & 0.985 \\\\ \\times & 0.211 \\\\ \\hline & 985 \\\\ & 985\\phantom{0} \\\\ & 1970\\phantom{00} \\\\ \\hline & 0.207835 \\\\ \\end{array} \\quad \\rightarrow \\quad \\begin{array}{r} & 0.985 \\\\ \\times & 0.211 \\\\ \\hline & 0.000985 \\\\ & 0.00985\\phantom{0} \\\\ & 0.1970\\phantom{00} \\\\ \\hline & 0.207835 \\\\ \\end{array} \\end{equation*} \\] \\[ \\begin{array}{l}0.211=2\\times10^{-1}+1\\times10^{-2}+1\\times10^{-3}\\\\0.985=985\\times10^{-3}\\end{array} \\] \\[ 0.985\\times0.211=(985\\times1\\times10^{-6})+(985\\times1\\times10^{-5})+(985\\times2\\times10^{-4}) \\] \u624b\u7b97\u4e8c\u8fdb\u5236 \\[ \\begin{equation*} \\begin{array}{r} & 0.1101 \\\\ \\times & 0.1011 \\\\ \\hline & 1101 \\\\ & 1101\\phantom{0} \\\\ & 0000\\phantom{00} \\\\ & 1101\\phantom{000} \\\\ \\hline & 0.10001111 \\\\ \\end{array} \\quad \\rightarrow \\quad \\begin{array}{r} & 0.1101 \\\\ \\times & 0.1011 \\\\ \\hline & 0.00001101 \\\\ & 0.0001101\\phantom{0} \\\\ & 0.000000\\phantom{00} \\\\ & 0.01101\\phantom{000} \\\\ \\hline & 0.10001111 \\\\ \\end{array} \\end{equation*} \\] \\[ \\begin{align*} &\\text{\u4e58\u6570} : 0.1011 = 1\\times2^{-1} + 0\\times2^{-2} + 1\\times2^{-3} + 1\\times2^{-4} \\\\ &\\text{\u88ab\u4e58\u6570} : 0.1101 = 1101\\times2^{-4} \\\\ &0.1101\\times0.1011=(1101\\times1\\times2^{-8})+(1101\\times1\\times2^{-7})+(1101\\times0\\times2^{-6})+(1101\\times1\\times2^{-5}) \\end{align*} \\] 4.\u8865\u7801\u4e58\u6cd5 \u00b6 5.\u539f\u7801\u9664\u6cd5 \u00b6 \u516b. \u6d6e\u70b9\u6570 \u00b6 1. \u6d6e\u70b9\u6570\u7684\u8868\u793a \u00b6 \u9636\u7801\u3001\u5c3e\u6570\u5747\u7528\u8865\u7801\u8868\u793a \u4f8b\uff1a\u9636\u7801\u3001\u5c3e\u6570\u5747\u7528\u8865\u7801\u8868\u793a\uff0c\u6c42a\u3001b\u7684\u771f\u503c $$ a = 0,01;1.1001 $$ \\[ b = 0,10;0.01001 \\] a\uff1a \u9636\u7801 \\(0,01\\) \u5bf9\u5e94\u771f\u503c \\(+1\\) \u5c3e\u6570 \\(1.1001\\) \u5bf9\u5e94\u771f\u503c \\(-0.0111 = 2^{1}\\times(-\\left(2^{-2}+2^{-3}+2^{-4}\\right))\\) a \u7684\u771f\u503c \\(=2^{1} \\times(-0.0111)=-0.111\\) \u9636\u7b26 \u9636\u7801\u6570\u503c\u90e8\u5206 \u6570\u7b26 \u5c3e\u6570\u7684\u6570\u503c\u90e8\u5206 a 0 01 1 1001 \\(2^{1}\\times(-\\left(2^{-2}+2^{-3}+2^{-4}\\right)) =-0.111\\) b 0 10 0 01001 \\(2^{2}\\times(+\\left(2^{-2}+2^{-5}\\right)) = +1.001\\) 2. \u89c4\u683c\u5316\u6d6e\u70b9\u6570 \u00b6 \u89c4\u683c\u5316\u6d6e\u70b9\u6570\uff1a\u89c4\u5b9a\u5c3e\u6570\u7684\u6700\u9ad8\u6570\u503c\u4f4d\u5fc5\u987b\u662f\u4e00\u4e2a\u6709\u6548\u503c \u3002 \u5de6\u89c4\uff1a\u5f53\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u7ed3\u679c\u4e3a\u975e\u89c4\u683c\u5316\u65f6\u8981\u8fdb\u884c\u89c4\u683c\u5316\u5904\u7406\uff0c\u5c06\u5c3e\u6570\u7b97\u6570\u5de6\u79fb\u4e00\u4f4d\uff0c\u9636\u7801\u51cf1\u3002 \u53f3\u89c4\uff1a\u5f53\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u7ed3\u679c\u5c3e\u6570\u51fa\u73b0\u6ea2\u51fa\uff08\u53cc\u7b26\u53f7\u4f4d\u4e3a01\u621610\uff09\u65f6\uff0c\u5c06\u5c3e\u6570\u7b97\u6570\u53f3\u79fb\u4e00\u4f4d\uff0c\u9636\u7801\u52a01\u3002 \u6c42a+b \\[ \\begin{align} &a=2^{2}\\times00.1100, \\\\ & b=2^{2}\\times00.1000, \\\\ a+b& =2^{2}\\times00.1100+2^2\\times00.1000, \\\\ &=2^{2}\\times(00.1100+00.1000), \\\\ &=2^{2}\\times01.0100, \\\\ &=2^{3}\\times00.1010 \\end{align} \\] \u4f5c\u4e1a \u00b6 3.IEEE 754\u6807\u51c6 \u00b6 \uff081\uff09\u79fb\u7801 \u00b6 \u8865\u7801\u7684\u57fa\u7840\u4e0a\u7b26\u53f7\u4f4d\u53d6\u53cd\u3002 \u8865\u7801\u53ea\u80fd\u7528\u4e8e\u8868\u793a\u6574\u6570 \u79fb\u7801\u7684\u5b9a\u4e49\uff1a \u79fb\u7801=\u771f\u503c+\u504f\u7f6e\u503c \u6b64\u59048\u4f4d\u79fb\u7801\u7684\u504f\u7f6e\u503c \\(=127D=0111\\ 1111B\\) , \u5373 \\(2^{n-1}-1\\) \u771f\u503c -128 = -1000 0000 B \u79fb\u7801 = -1000 0000 + 011111111 = 11111 1111 \u771f\u503c -127 = -111 11118 \u79fb\u7801 = -111 1111 + 011111111 = 0000 0000 \u771f\u503c -126 = -111 1110 B \u79fb\u7801 = -1111110 + 011111111 = 0000 0001 \u771f\u503c + 0 = + 0 \u79fb\u7801 = + 0 + 01111111 = 01111111 \u771f\u503c + 127 = + 1111111 B \u79fb\u7801 = + 111111 + 0111111111 = 111111110 \u7279\u6b8a\u79fb\u7801 \u771f\u503c -128 = -1000 0000 B \u79fb\u7801 = -1000 0000 + 011111111 = 11111 1111 \u65e0\u7b26\u53f7\u6570\uff1a 255 \u771f\u503c -127 = -111 11118 \u79fb\u7801 = -111 1111 + 011111111 = 0000 0000 \u65e0\u7b26\u53f7\u6570\uff1a 255 \uff082\uff09IEEE 754\u683c\u5f0f \u00b6 \u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u6d6e\u70b9\u6570\u662f\u4e00\u79cd\u7528\u6765\u8fd1\u4f3c\u8868\u793a\u5b9e\u6570\u7684\u6570\u5b66\u5f62\u5f0f\uff0c\u7279\u522b\u662f\u5728\u975e\u5e38\u5927\u6216\u975e\u5e38\u5c0f\u7684\u8303\u56f4\u5185\u3002\u4e00\u4e2a\u6d6e\u70b9\u6570\u7531\u4e09\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a \u6570\u7b26\u3001\u9636\u7801\u3001\u5c3e\u6570 \u3002 \u6570\u7b26 \uff1a\u901a\u5e38\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u8868\u793a\uff0c0\u4ee3\u8868\u6b63\u6570\uff0c1\u4ee3\u8868\u8d1f\u6570\u3002 \u9636\u7801 \uff08Exponent\uff09\uff1a\u662f\u4e00\u4e2a\u8868\u793a\u6570\u7684\u4e8c\u8fdb\u5236\u6307\u6570\u7684\u5b57\u6bb5\u3002\u5728\u6807\u51c6\u6d6e\u70b9\u6570\u8868\u793a\u4e2d\uff08\u5982 IEEE 754\uff09\uff0c\u9636\u7801\u901a\u5e38\u4f1a\u7ecf\u8fc7\u504f\u79fb\uff08\u6216\u79f0\u4e3a\u201c\u6307\u6570\u504f\u79fb\u201d\uff09\uff0c\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u7279\u5b9a\u7684\u503c\uff08\u6bd4\u5982127\u5bf9\u4e8e32\u4f4d\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0c1023\u5bf9\u4e8e64\u4f4d\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff09\u4f1a\u88ab\u52a0\u5230\u5b9e\u9645\u7684\u6307\u6570\u4e0a\u4ee5\u5f97\u5230\u9636\u7801\u7684\u503c\u3002\u8fd9\u79cd\u504f\u79fb\u5141\u8bb8\u8868\u793a\u6b63\u6307\u6570\u548c\u8d1f\u6307\u6570\u3002 \u5c3e\u6570 \uff08Mantissa \u6216 Significand\uff09\uff1a\u8868\u793a\u6570\u7684\u6709\u6548\u6570\u5b57\uff08\u6216\u79f0\u4e3a\u201c\u5c3e\u6570\u201d\uff09\u3002\u5728\u89c4\u683c\u5316\u7684\u6d6e\u70b9\u6570\u8868\u793a\u4e2d\uff0c\u5c3e\u6570\u5305\u542b\u6240\u6709\u7684\u663e\u8457\u6570\u5b57\uff08\u9664\u4e86\u901a\u5e38 \u7701\u7565\u7684\u6700\u9ad8\u4f4d\u6570\u5b57 \uff0c\u8be5\u6570\u5b57\u5728\u89c4\u683c\u5316\u7684\u6570\u4e2d\u603b\u662f1\uff0c\u9664\u975e\u6570\u662f0\uff09\u3002\u5c3e\u6570\u4e0d\u5305\u62ec\u9636\u7801\u7684\u504f\u79fb\u3002 \u4f8b\u5982\uff0c\u5728 IEEE 754\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6807\u51c6\u4e2d\uff0c\u4e00\u4e2a32\u4f4d\u7684\u6d6e\u70b9\u6570\u7531\u4ee5\u4e0b\u4e09\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a \u6570\u7b26 \uff1a1\u4f4d \u9636\u7801 \uff1a8\u4f4d\uff08\u5e26\u6709127\u7684\u504f\u79fb\uff09 \u5c3e\u6570 \uff1a23\u4f4d\uff08 \u52a0\u4e0a\u9690\u542b\u7684\u6700\u9ad8\u4f4d\uff0c\u537324\u4f4d\u6709\u6548\u6570\u5b57 \uff09 \u5728\u8fd9\u79cd\u683c\u5f0f\u4e2d\uff0c\u4e00\u4e2a\u6d6e\u70b9\u6570\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a \\[ (-1)^{\u6570\u7b26}\\times 1.\u5c3e\u6570\\times 2^{\u9636\u7801 - \u504f\u79fb} \\] \u9636\u7801\u7684\u504f\u79fb\u5141\u8bb8\u6211\u4eec\u8868\u793a\u975e\u5e38\u5c0f\u548c\u975e\u5e38\u5927\u7684\u6570\u503c\uff0c\u800c\u5c3e\u6570\u5219\u63d0\u4f9b\u4e86\u8fd9\u4e9b\u6570\u503c\u7684\u7cbe\u786e\u5ea6\u3002\u5f53\u89e3\u91ca\u9636\u7801\u65f6\uff0c\u901a\u5e38\u9700\u8981\u4ece\u5b58\u50a8\u7684\u9636\u7801\u503c\u4e2d\u51cf\u53bb\u504f\u79fb\u91cf\u4ee5\u83b7\u5f97\u5b9e\u9645\u7684\u6307\u6570\u503c\u3002\u4f8b\u5982\uff0c\u5982\u679c\u9636\u7801\u5b58\u50a8\u7684\u503c\u662f 130 \uff08\u4e8c\u8fdb\u5236\u4e3a \\(1000\\ 0010\\) \uff09\uff0c\u5728\u5355\u7cbe\u5ea6\u6d6e\u70b9\u683c\u5f0f\u4e2d\uff0c\u5b9e\u9645\u7684\u6307\u6570\u662f130 - 127 = 3\u3002 \uff083\uff09\u5341\u8fdb\u5236\u8f6cIEEE 754\u6d6e\u70b9\u6570\u793a\u4f8b \u00b6 \\((-0.75)_{10}=(-0.11)_{2}=(-1.1)_{2}\\times2^{-1}\\) \u6570\u7b26=1 \u5c3e\u6570\u90e8\u5206 = .100000.... (\u9690\u542b\u6700\u9ad8\u4f4d1) \u9636\u7801\u771f\u503c=-1 \u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b\u504f\u79fb\u91cf = 127D \u79fb\u7801 =\u9636\u7801\u771f\u503c+\u504f\u79fb\u91cf \\(= -1\\ +\\ 1111111=0111\\ 11110\\) (\u51d1\u8db38\u4f4d) \\[ \\color{black}{\\rightarrow}\\color{red}{1}\\ \\color{blue}{01111110}\\ \\color{green}{10000000000000000000000} \\] \uff084\uff09IEEE 754\u6d6e\u70b9\u6570\u8f6c\u5341\u8fdb\u5236 \u00b6 \u4f8b\uff1a IEEE 754 \u7684\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570 \\(CO\\ AO\\ OO\\ OO\\ H\\) \u7684\u503c\u65f6\u591a\u5c11\u3002 \\[ \\text{CO\\ AO\\ OO\\ OO\\ H}\\ \\rightarrow \\color{red}{1}\\ \\color{blue}{10000001}\\ \\color{green}{010 0000 0000 0000 0000} \\] \u6570\u7b26 = 1 \u2192 \u662f\u4e2a\u8d1f\u6570 \u5c3e\u6570\u90e8\u5206 = \\(\\color{green}.0100...\\) (\u9690\u542b\u6700\u9ad8\u4f4d1) \u2192\u5c3e\u6570\u771f\u503c \\(=(1.01)_{2}\\) \u79fb\u7801 \\(=\\color{blue}10000001, \u82e5\u770b\u4f5c\u65e0\u7b26\u53f7\u6570=129D\\) \u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b\u504f\u79fb\u91cf=127D \u9636\u7801\u771f\u503c= \u79fb\u7801 - \u504f\u79fb\u91cf \\(= 1000 0001 - 111 111 1 1 = ( 0 0 0 0 1 0 )_{2}=(2)_{10}\\) \u2192 \u6d6e\u70b9\u6570\u771f\u503c \\(=(-1.01)_{2}\\times2^{2}=-1.25\\times2^{2}=-5.0\\) \uff085\uff09\u975e\u89c4\u683c\u6570 \u00b6 \u9636\u7801E\u51680\uff0c\u5c3e\u6570M\u4e0d\u51680\u65f6\uff0c\u8868\u793a\u975e\u89c4\u683c\u5316\u5c0f\u6570 \\(\\pm(0.\\mathrm{xx}...x)_2\\times2^{-126}\\) \u5f53\u9636\u7801E\u5168\u4e3a0\uff0c\u5c3e\u6570M\u5168\u4e3a0\u65f6\uff0c\u8868\u793a\u771f\u503c \\(\\pm0\\) \u5f53\u9636\u7801E\u5168\u4e3a1\uff0c\u5c3e\u6570M\u5168\u4e3a0\u65f6\uff0c\u8868\u793a\u65e0\u7a77\u5927 \\(\\pm\\infty\\) \u5f53\u9636\u7801E\u5168\u4e3a1\uff0c\u5c3e\u6570M\u4e0d\u5168\u4e3a0\u65f6\uff0c\u8868\u793a\u975e\u6570\u503c\u201cNaN\u201d(Not a Number) 4.\u6d6e\u70b9\u6570\u7684\u52a0\u51cf\u8fd0\u7b97 \u00b6 \u4f8b\uff1a\u5df2\u77e5\u5341\u8fdb\u5236\u6570 \\(X=\u22125/256\u3001Y=+59/1024\\) \uff0c\u6309\u673a\u5668\u8865\u7801\u6d6e\u70b9\u8fd0\u7b97\u89c4\u5219\u8ba1\u7b97 \\(X\u2212Y\\) \uff0c\u7ed3\u679c\u7528\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u6d6e\u70b9\u6570\u683c\u5f0f\u5982\u4e0b\uff1a\u9636\u7b26\u53d6 \\(2\\) \u4f4d\uff0c\u9636\u7801\u53d6 \\(3\\) \u4f4d\uff0c\u6570\u7b26\u53d6 \\(2\\) \u4f4d\uff0c\u5c3e\u6570\u53d6 \\(9\\) \u4f4d\u7528 \u4f7f\u7528\u8865\u7801\u8868\u793a\u9636\u7801\u548c\u5c3e\u6570 $$ X = \\frac{\u22125}{256} \\ Y = \\frac{+59}{1024} $$ \\[ X = -5 = 1.101 =11.011 \\] \\[ Y = +59 = 0.111011 = 00.111011 \\] \u9636\u7b26 \u9636\u7801\u6570\u503c\u90e8\u5206 \u6570\u7b26 \u5c3e\u6570\u7684\u6570\u503c\u90e8\u5206 X 11 011 11 011000000 \\(\\begin{align}X &= -101\\times2^{-8} \\\\ &= -0.101\\times2^{-8+3} \\\\ &= -0.101\\times2^{-5} \\\\ &= -0.101\\times2^{-101} \\\\ &= 11.011\\times2^{11.011}\\end{align}\\) Y 11 100 00 111011000 \\(\\begin{align}Y &= +111011\\times2^{-10} \\\\ &= +0.111011\\times2^{-10+6} \\\\ &= +0.111011\\times2^{-4} \\\\ &= +0.111011\\times2^{-100} \\\\ &= 00.111011\\times2^{11.100}\\end{align}\\) \uff081\uff09\u5bf9\u9636 \u00b6 \u6c42\u9636\u5dee\u5c0f\u9636\u5411\u5927\u9636\u770b\u9f50\uff0c\u5c3e\u6570\u6bce\u53f3\u79fb\u4e00\u4f4d\uff0c\u9636\u7801\u52a01 \\[ \\begin{align}[\\Delta_j]_\u8865 &= [j_x]_\u8865 + [j_y]_\u8865 \\\\&= 11.011 + 00.100 \\\\&= 11.111 \\\\&=-1_D\\end{align} \\] \u4e0a\u8ff0\u8ba1\u7b97\u8868\u793a \\(X\\) \u7684\u9636\u6570\u5c0f\u4e8e \\(Y\\) \u7684\u9636\u6570\uff0c\u56e0\u6b64\u9700\u8981\u5c06 \\(X\\) \u7b97\u672f\u53f3\u79fb \u5bf9\u9636 \\[ \\begin{align}X =& 11.100,11.1011000 \\\\ = & -0.0101\\times2^{-100}\\end{align} \\] \uff082\uff09\u5c3e\u6570\u52a0\u51cf \u00b6 \\[ \\begin{equation} \\begin{array}{l}X-Y \\\\ =\\left(-0.0101 \\times 2^{-100}\\right)-\\left(+0.111011 \\times 2^{-100}\\right) \\\\ =(-0.0101-0.111011) \\times 2^{-100} \\\\ =-1.001111 \\times 2^{-100}\\end{array} \\end{equation} \\] \\[ \\begin{align}[Y]_\u8865 =& 11.100,00.111011000 \\\\ [-Y]_\u8865 =& 11.100,11.000101000 \\\\ [X]_\u8865 =& 11.100,11.101100000\\end{align} \\] \\[ X-Y:(\u5c3e\u6570\u52a0\u51cf)\\\\ \\begin{equation} \\begin{array}{r}11.101100000 \\\\ +\\quad 11.000101000 \\\\ \\hline 10.110001000\\end{array} \\end{equation} \\] \uff083\uff09\u89c4\u683c\u5316 \u00b6 \u53f3\u89c4 \u5f53\u7ed3\u679c\u5c3e\u6570\u7684\u4e24\u4e2a\u7b26\u53f7\u4f4d\u7684\u503c\u4e0d\u540c\u65f6\uff0c\u8868\u660e\u5c3e\u6570\u8fd0\u7b97\u7ed3\u679c\u6ea2\u51fa\u3002\u6b64\u65f6\u5e94\u4f7f\u7ed3\u679c\u5c3e\u6570\u53f3\u79fb\u4e00\u4f4d\uff0c\u5e76\u4f7f\u9636\u7801\u7684\u503c\u52a01\u3002 $$ \\begin{equation} X-Y: \\quad 11[100],[10].110001000 \\rightarrow 11[101],[11].011000100 \\end{equation} $$ \u5de6\u89c4 \u5f53\u5c3e\u6570\u7684\u8fd0\u7b97\u7ed3\u679c\u4e0d\u6ea2\u51fa\uff0c\u4f46\u6700\u9ad8\u6570\u503c\u4f4d\u4e0e\u7b26\u53f7\u4f4d\u540c\u503c\uff0c\u8868\u660e\u4e0d\u6ee1\u8db3\u89c4\u683c\u5316\u89c4\u5219\uff0c\u6b64\u65f6\u5e94\u91cd\u590d\u5730\u4f7f\u5c3e\u6570\u5de6\u79fb\u3001\u9636\u6570\u51cf1\uff0c\u76f4\u5230\u51fa\u73b0\u5728\u6700\u9ad8\u6570\u503c\u4f4d\u4e0a\u7684\u503c\u4e0e\u7b26\u53f7\u4f4d\u7684\u503c\u4e0d\u540c\u4e3a\u6b62\u3002 $$ \\begin{align}A =& 11.011,11.011000000\\ B =& 11.100,11.111011000\\end{align} $$ \\[ A-B:11[100],[11].110001000 \\rightarrow 11[010],[11].000100000 \\] \uff084\uff09\u820d\u5165 \u00b6 0\u820d1\u5165:\u88ab\u820d\u53bb\u7684\u672b\u5c3e\u662f0\u76f4\u63a5\u820d\u53bb\uff0c\u672b\u5c3e\u4e3a1\u518d \\(+1\\) \uff0c\u8fd9\u6837\u505a\u53ef\u80fd\u4f1a\u4f7f\u5c3e\u6570\u53c8\u6ea2\u51fa\uff0c\u6b64\u65f6\u9700\u518d\u505a\u4e00\u6b21\u53f3\u89c4\u3002 \\[ \\begin{equation} \\begin{aligned} 11100,10.110001011 & \\rightarrow 11101,11.011000101\\1 \\\\ & \\rightarrow 11101,11.011000110\\1\\end{aligned} \\end{equation} \\] \u6052\u7f6e \\(1\\) :\u5c3e\u6570\u53f3\u79fb\u65f6\uff0c\u4e0d\u8bba\u4e22\u6389\u7684\u6700\u9ad8\u6570\u503c\u4f4d\u662f\u201c1\u201d\u8fd8\u662f\u201c0\u201d\uff0c\u90fd\u4f7f\u53f3\u79fb\u540e\u7684\u5c3e\u6570\u672b\u4f4d\u6052\u7f6e\u201c1\u201d\u3002\u8fd9\u79cd\u65b9\u6cd5\u540c\u6837\u6709\u4f7f\u5c3e\u6570\u53d8\u5927\u548c\u53d8\u5c0f\u7684\u4e24\u79cd\u53ef\u80fd\u3002 \\[ \\begin{equation} \\begin{aligned} 11100,10.110001011 & \\rightarrow 11101,11.011000101\\1 \\\\ & \\rightarrow 11101,11.011000101\\1\\end{aligned} \\end{equation} \\] \uff085\uff09\u5224\u6ea2\u51fa \u00b6 \u9636\u7801 \\(+1\\) \u540e\u7b26\u53f7\u4f4d\u662f\u5426\u76f8\u540c \\[ 11.100+1 = 11.101 \\\\ \u7b26\u53f7\u4f4d11\u76f8\u540c\u672a\u6ea2\u51fa \\]","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u7840\u7b14\u8bb0"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#_1","text":"\\[ (DAY)^{-1} \\]","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u7840\u7b14\u8bb0"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#_2","text":"\u63a7\u5236\u5668\uff1a\u6307\u6325\u7a0b\u5e8f\u8fd0\u884c \u7279\u70b9\uff1a \u4e94\u5927\u4ef6 \u6307\u4ee4\u548c\u6570\u636e\u4ee5\u540c\u7b49\u5730\u4f4d\u5b58\u4e8e\u5b58\u50a8\u5668 \u6307\u4ee4\u548c\u6570\u636e\u4e3a\u4e8c\u8fdb\u5236 \u6307\u4ee4\u7531\u64cd\u4f5c\u7801\u548c\u5730\u5740\u7801\u7ec4\u6210 \u5b58\u50a8\u7a0b\u5e8f \u4ee5\u8fd0\u7b97\u5668\u4e3a\u4e3b","title":"\u4e00.\u65e9\u671f\u51af\u8bfa\u4f9d\u66fc\u673a"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#_3","text":"\u4ee5\u5b58\u50a8\u5668\u4e3a\u4e2d\u5fc3","title":"\u4e8c.\u73b0\u4ee3\u8ba1\u7b97\u673a\u7ed3\u6784"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#1cpu","text":"","title":"1.CPU\uff1a\u8fd0\u7b97\u5668+\u63a7\u5236\u5668"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#2","text":"MAR \u5b58\u50a8\u5730\u5740\u5bc4\u5b58\u5668 \u53cd\u6620\u5b58\u50a8\u5355\u5143\u7684\u4e2a\u6570 MDR \u5b58\u50a8\u6570\u636e\u5bc4\u5b58\u5668 \u53cd\u6620\u5b58\u50a8\u5b57\u957f","title":"2.\u4e3b\u5b58\u50a8\u5668"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#3","text":"\u5b58\u50a8\u5355\u5143 \u5b58\u653e\u4e00\u4e32\u4e8c\u8fdb\u5236\u4ee3\u7801 \u5b58\u50a8\u5b57 \u4e8c\u8fdb\u5236\u4ee3\u7801\u7ec4\u5408 \u5b58\u50a8\u5b57\u957f \u4e8c\u8fdb\u5236\u4f4d\u6570 \u5b58\u50a8\u5143 \u5b58\u50a8\u4e8c\u8fdb\u5236\u7535\u5b50\u5143\u4ef6\uff0c1bit","title":"3.\u5b58\u50a8\u4f53"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#4","text":"\u5b9e\u73b0\u7b97\u6570\u8fd0\u7b97 ACC \u7d2f\u52a0\u5668 MQ \u4e58\u5546\u8fd0\u7b97\u5668 X ALU","title":"4.\u8fd0\u7b97\u5668"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#5","text":"CU \u5206\u6790\u6307\u4ee4\uff0c\u53d1\u9001\u63a7\u5236\u4fe1\u53f7 IR \u6307\u4ee4\u5bc4\u5b58\u5668 \u5b58\u653e\u5f53\u524d\u6267\u884c\u6307\u4ee4 PC \u7a0b\u5e8f\u8ba1\u6570\u5668\uff0c\u5b58\u653e\u4e0b\u4e00\u6761\u6307\u4ee4","title":"5.\u63a7\u5236\u5668"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#_4","text":"","title":"\u4e09.\u8ba1\u7b97\u673a\u5de5\u4f5c\u8fc7\u7a0b"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#_5","text":"\\(\\text{n+1 bit}\\) \u5408\u6cd5\u8868\u793a\u8303\u56f4 \u6700\u5927\u6570 \u6700\u5c0f\u6570 \u771f\u503c0\u7684\u8868\u793a \u5e26\u7b26\u53f7\u6574\u6570\uff1a\u539f\u7801 \\(-(2^n-1)\\leq x\\leq2^n-1\\) \\(\\begin{array}{c}\\mathbf{0},111...111\\\\=2^n-1\\end{array}\\) \\(\\begin{array}{c}1,111...111\\\\=-(2^n-1)\\end{array}\\) \\(\\begin{array}{c} [+0]_{\\text{\u539f}} = 0 , 0 0 0 \\ldots 0 0 0 \\\\ [-0]_{\\text{\u539f}} = 1 , 0 0 0 \\ldots 0 0 0 \\end{array}\\) \u5e26\u7b26\u53f7\u6574\u6570\uff1a\u53cd\u7801 \\(-(2^n-1)\\leq x\\leq2^n-1\\) \\(\\begin{array}{c}\\mathbf{0},111...111\\\\=2^n-1\\end{array}\\) \\(\\begin{array}{c}1,111...111\\\\=-(2^n-1)\\end{array}\\) \\(\\begin{array}{c} [+0]_{\\text{\u539f}} = 0 , 0 0 0 \\ldots 0 0 0 \\\\ [-0]_{\\text{\u539f}} = 1 , 1 1 1 \\ldots 1 1 1 \\end{array}\\) \u5e26\u7b26\u53f7\u6574\u6570\uff1a\u8865\u7801 \\(-2^n\\leq x\\leq2^n-1\\) \\(\\begin{array}{c}\\mathbf{0},111...111\\\\=2^n-1\\end{array}\\) \\(\\begin{array}{c}1,111...111\\\\=-2^n\\end{array}\\) \\(\\begin{array}{c} [+0]_{\\text{\u8865}} = 0 , 0 0 0 \\ldots 0 0 0 \\\\ \\text{\u771f\u503c0\u53ea\u6709\u4e00\u79cd\u8865\u7801} \\end{array}\\) \u65e0\u7b26\u53f7\u6574\u6570 \\(0\\leq x\\leq2^{n+1}-1\\) \\(\\begin{array}{c}1111...111\\\\=2^{n+1}-1\\end{array}\\) \\(\\begin{array}{c}1,000...000\\\\=0\\end{array}\\) \\(0000...000\\)","title":"\u56db.\u5b9a\u70b9\u6570\u7f16\u7801"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#1","text":"","title":"1.\u53cd\u7801"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#2_1","text":"\u5f53\u8981\u5b8c\u6210\u8fd9\u4e2a\u8f6c\u6362 $$ [B] \\text{\u8865} \\rightarrow [-B] \\text{\u8865} $$ \u4ec5\u9700\u5c06 \\(\\ [B]_\\text{\u8865}\\) \u6309\u7167 \u6309\u4f4d\u53d6\u53cd\u52a0\u4e00\u7684\u65b9\u5f0f\u8f6c\u6362\u5373\u53ef \uff08\u5305\u62ec\u7b26\u53f7\u4f4d\uff09 \u5feb\u6377\u65b9\u5f0f\uff08\u8d1f\u6570\uff09\uff1a\u7b2c\u4e00\u4e2a1\u4e0d\u53d8\uff0c\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4f59\u53d6\u53cd \u6ce8\uff1a\u67092\u4e2a\u7279\u6b8a\u8865\u7801\uff1a 1111 \uff08-1\uff09 1000\uff08-8\uff09\uff1f","title":"2.\u8865\u7801"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#alu","text":"\u7ec4\u5408\u903b\u8f91\u7535\u8def\uff1a\u53ea\u4e0e\u8f93\u51fa\u548c\u8f93\u5165\u6709\u5173 \u65f6\u5e8f\u903b\u8f91\u7535\u8def\uff1a ALU\u7684\u6838\u5fc3\u662f\u52a0\u6cd5\u5668","title":"\u4e94. \u7b97\u672f\u903b\u8f91\u5355\u5143\uff08ALU\uff09\u7684\u4f5c\u7528"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#_6","text":"","title":"\u516d. \u52a0\u6cd5\u5668"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#_7","text":"","title":"\u4e03. \u5b9a\u70b9\u6570"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#1_1","text":"","title":"1.\u79fb\u4f4d\u8fd0\u7b97"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#2_2","text":"\u76f4\u63a5\u7528\u539f\u7801\u52a0\u51cf\u53ef\u80fd\u4f1a\u51fa\u9519 \u8ba1\u7b97\u7ed3\u679c\u6ea2\u51fa \u5728-127~127\u8303\u56f4\u5185\uff088\u4f4d\u673a\u5668\u6570\uff0c\u542b\u7b26\u53f7\u4f4d\uff09\u7684\u6570\u636e\u8fdb\u884c\u8ba1\u7b97 120+16=136\uff0c\u8ba1\u7b97\u7ed3\u679c\u4f1a\u6ea2\u51fa\u3002 0 111 1000 + 0 001 0000 = 1 000 1000 \uff08\u7b2c\u4e00\u4e2a\u4e3a\u7b26\u53f7\u4f4d\uff09","title":"2.\u52a0\u51cf\u6cd5"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#3_1","text":"\u6807\u5fd7\u4f4d \\(OF\uff08Overflow Flag)\\) \u6ea2\u51fa\u6807\u5fd7\uff0c\u7528\u4e8e\u5224\u65ad \u5e26\u7b26\u53f7\u6570 \u52a0\u51cf\u8fd0\u7b97\u662f\u5426\u6ea2\u51fa\u3002 \\(OF=1\\) \u6ea2\u51fa \\(OF=0\\) \u672a\u6ea2\u51fa OF : \u6b21\u9ad8\u4f4d\u8fdb\u4f4d\u548c\u6700\u9ad8\u4f4d\u8fdb\u4f4d\u5f02\u6216 0 b 1000 + 0 b 1000 -- > 0 b 0000 OF -- > 1 0 b 1011 + 0 b 0100 -- > 0 b 1111 OF -- > 0 \\(SF\uff08Sign Flag\uff09\\) \u7b26\u53f7\u6807\u5fd7\uff0c\u7528\u4e8e\u5224\u65ad \u5e26\u7b26\u53f7\u6570 \u52a0\u51cf\u8fd0\u7b97\u7ed3\u679c\u7684\u6b63\u8d1f\u6027 \u3002 \\(SF=1\\) \u7ed3\u679c\u4e3a\u8d1f \\(SF=0\\) \u7ed3\u679c\u4e3a\u6b63 \u6700\u9ad8\u4f4d\u672c\u4f4d \\(ZF\uff08Zero Flag)\\) \u96f6\u6807\u5fd7\uff0c\u7528\u4e8e\u5224\u65ad\u52a0\u51cf\u8fd0\u7b97\u7ed3\u679c\u662f\u5426\u4e3a0\u3002 $ZF=1 $\u8868\u793a\u7ed3\u679c\u4e3a0 \\(ZF=0\\) \u8868\u793a\u7ed3\u679c\u4e0d\u4e3a0 \\(CF\uff08Carry Flag)\\) \u8fdb\u4f4d/\u501f\u4f4d\u6807\u5fd7\uff0c\u7528\u4e8e\u5224\u65ad \u65e0\u7b26\u53f7\u6570 \u52a0\u51cf\u8fd0\u7b97\u662f\u5426\u6ea2\u51fa\u3002 \\(CF=1\\) \u6ea2\u51fa $CF=0 $\u672a\u6ea2\u51fa \u65e0\u7b26\u53f7\u6570\u7684\u6700\u9ad8\u4f4d\u8fdb\u4f4d\u4e3a 1 \u5f02\u6216sub\uff0cCF= 1 \uff0c\u5426\u5219CF= 0 0 b 1111 + 0 b 0001 -- > 0 b 0000 CF -- > 1 0 b 0111 + 0 b 0001 -- > 0 b 1000 CF -- > 0","title":"3.\u65e0\u7b26\u53f7\u548c\u6709\u7b26\u53f7\u6570\u8ba1\u7b97"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#3_2","text":"\u624b\u7b97\u5341\u8fdb\u5236 \\[\\begin{aligned}\\mathsf{r}&\\text{\u8fdb\u5236:}\\quad K_{\\mathbf{n}}K_{\\mathbf{n-1}}\\ldots K_{\\mathbf{2}}K_{\\mathbf{1}}K_{\\mathbf{0}}K_{-1}K_{-2}\\ldots K_{-m}\\\\&=K_{\\mathbf{n}}\\times r^{\\mathbf{n}}+K_{\\mathbf{n-1}}\\times r^{n-1}+\\cdots+K_{\\mathbf{2}}\\times r^{\\mathbf{2}}+K_{\\mathbf{1}}\\times r^{\\mathbf{1}}+K_{\\mathbf{0}}\\times r^{\\mathbf{0}}+K_{\\mathbf{-1}}\\times r^{-1}+K_{\\mathbf{-2}}\\times r^{-\\mathbf{2}}+\\ldots+K_{-m}\\times r^{-m}\\end{aligned}\\] \\[ \\begin{equation*} \\begin{array}{r} & 0.985 \\\\ \\times & 0.211 \\\\ \\hline & 985 \\\\ & 985\\phantom{0} \\\\ & 1970\\phantom{00} \\\\ \\hline & 0.207835 \\\\ \\end{array} \\quad \\rightarrow \\quad \\begin{array}{r} & 0.985 \\\\ \\times & 0.211 \\\\ \\hline & 0.000985 \\\\ & 0.00985\\phantom{0} \\\\ & 0.1970\\phantom{00} \\\\ \\hline & 0.207835 \\\\ \\end{array} \\end{equation*} \\] \\[ \\begin{array}{l}0.211=2\\times10^{-1}+1\\times10^{-2}+1\\times10^{-3}\\\\0.985=985\\times10^{-3}\\end{array} \\] \\[ 0.985\\times0.211=(985\\times1\\times10^{-6})+(985\\times1\\times10^{-5})+(985\\times2\\times10^{-4}) \\] \u624b\u7b97\u4e8c\u8fdb\u5236 \\[ \\begin{equation*} \\begin{array}{r} & 0.1101 \\\\ \\times & 0.1011 \\\\ \\hline & 1101 \\\\ & 1101\\phantom{0} \\\\ & 0000\\phantom{00} \\\\ & 1101\\phantom{000} \\\\ \\hline & 0.10001111 \\\\ \\end{array} \\quad \\rightarrow \\quad \\begin{array}{r} & 0.1101 \\\\ \\times & 0.1011 \\\\ \\hline & 0.00001101 \\\\ & 0.0001101\\phantom{0} \\\\ & 0.000000\\phantom{00} \\\\ & 0.01101\\phantom{000} \\\\ \\hline & 0.10001111 \\\\ \\end{array} \\end{equation*} \\] \\[ \\begin{align*} &\\text{\u4e58\u6570} : 0.1011 = 1\\times2^{-1} + 0\\times2^{-2} + 1\\times2^{-3} + 1\\times2^{-4} \\\\ &\\text{\u88ab\u4e58\u6570} : 0.1101 = 1101\\times2^{-4} \\\\ &0.1101\\times0.1011=(1101\\times1\\times2^{-8})+(1101\\times1\\times2^{-7})+(1101\\times0\\times2^{-6})+(1101\\times1\\times2^{-5}) \\end{align*} \\]","title":"3.\u539f\u7801\u4e58\u6cd5\u8fd0\u7b97"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#4_1","text":"","title":"4.\u8865\u7801\u4e58\u6cd5"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#5_1","text":"","title":"5.\u539f\u7801\u9664\u6cd5"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#_8","text":"","title":"\u516b. \u6d6e\u70b9\u6570"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#1_2","text":"\u9636\u7801\u3001\u5c3e\u6570\u5747\u7528\u8865\u7801\u8868\u793a \u4f8b\uff1a\u9636\u7801\u3001\u5c3e\u6570\u5747\u7528\u8865\u7801\u8868\u793a\uff0c\u6c42a\u3001b\u7684\u771f\u503c $$ a = 0,01;1.1001 $$ \\[ b = 0,10;0.01001 \\] a\uff1a \u9636\u7801 \\(0,01\\) \u5bf9\u5e94\u771f\u503c \\(+1\\) \u5c3e\u6570 \\(1.1001\\) \u5bf9\u5e94\u771f\u503c \\(-0.0111 = 2^{1}\\times(-\\left(2^{-2}+2^{-3}+2^{-4}\\right))\\) a \u7684\u771f\u503c \\(=2^{1} \\times(-0.0111)=-0.111\\) \u9636\u7b26 \u9636\u7801\u6570\u503c\u90e8\u5206 \u6570\u7b26 \u5c3e\u6570\u7684\u6570\u503c\u90e8\u5206 a 0 01 1 1001 \\(2^{1}\\times(-\\left(2^{-2}+2^{-3}+2^{-4}\\right)) =-0.111\\) b 0 10 0 01001 \\(2^{2}\\times(+\\left(2^{-2}+2^{-5}\\right)) = +1.001\\)","title":"1. \u6d6e\u70b9\u6570\u7684\u8868\u793a"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#2_3","text":"\u89c4\u683c\u5316\u6d6e\u70b9\u6570\uff1a\u89c4\u5b9a\u5c3e\u6570\u7684\u6700\u9ad8\u6570\u503c\u4f4d\u5fc5\u987b\u662f\u4e00\u4e2a\u6709\u6548\u503c \u3002 \u5de6\u89c4\uff1a\u5f53\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u7ed3\u679c\u4e3a\u975e\u89c4\u683c\u5316\u65f6\u8981\u8fdb\u884c\u89c4\u683c\u5316\u5904\u7406\uff0c\u5c06\u5c3e\u6570\u7b97\u6570\u5de6\u79fb\u4e00\u4f4d\uff0c\u9636\u7801\u51cf1\u3002 \u53f3\u89c4\uff1a\u5f53\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u7ed3\u679c\u5c3e\u6570\u51fa\u73b0\u6ea2\u51fa\uff08\u53cc\u7b26\u53f7\u4f4d\u4e3a01\u621610\uff09\u65f6\uff0c\u5c06\u5c3e\u6570\u7b97\u6570\u53f3\u79fb\u4e00\u4f4d\uff0c\u9636\u7801\u52a01\u3002 \u6c42a+b \\[ \\begin{align} &a=2^{2}\\times00.1100, \\\\ & b=2^{2}\\times00.1000, \\\\ a+b& =2^{2}\\times00.1100+2^2\\times00.1000, \\\\ &=2^{2}\\times(00.1100+00.1000), \\\\ &=2^{2}\\times01.0100, \\\\ &=2^{3}\\times00.1010 \\end{align} \\]","title":"2. \u89c4\u683c\u5316\u6d6e\u70b9\u6570"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#_9","text":"","title":"\u4f5c\u4e1a"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#3ieee-754","text":"","title":"3.IEEE 754\u6807\u51c6"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#1_3","text":"\u8865\u7801\u7684\u57fa\u7840\u4e0a\u7b26\u53f7\u4f4d\u53d6\u53cd\u3002 \u8865\u7801\u53ea\u80fd\u7528\u4e8e\u8868\u793a\u6574\u6570 \u79fb\u7801\u7684\u5b9a\u4e49\uff1a \u79fb\u7801=\u771f\u503c+\u504f\u7f6e\u503c \u6b64\u59048\u4f4d\u79fb\u7801\u7684\u504f\u7f6e\u503c \\(=127D=0111\\ 1111B\\) , \u5373 \\(2^{n-1}-1\\) \u771f\u503c -128 = -1000 0000 B \u79fb\u7801 = -1000 0000 + 011111111 = 11111 1111 \u771f\u503c -127 = -111 11118 \u79fb\u7801 = -111 1111 + 011111111 = 0000 0000 \u771f\u503c -126 = -111 1110 B \u79fb\u7801 = -1111110 + 011111111 = 0000 0001 \u771f\u503c + 0 = + 0 \u79fb\u7801 = + 0 + 01111111 = 01111111 \u771f\u503c + 127 = + 1111111 B \u79fb\u7801 = + 111111 + 0111111111 = 111111110 \u7279\u6b8a\u79fb\u7801 \u771f\u503c -128 = -1000 0000 B \u79fb\u7801 = -1000 0000 + 011111111 = 11111 1111 \u65e0\u7b26\u53f7\u6570\uff1a 255 \u771f\u503c -127 = -111 11118 \u79fb\u7801 = -111 1111 + 011111111 = 0000 0000 \u65e0\u7b26\u53f7\u6570\uff1a 255","title":"\uff081\uff09\u79fb\u7801"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#2ieee-754","text":"\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u6d6e\u70b9\u6570\u662f\u4e00\u79cd\u7528\u6765\u8fd1\u4f3c\u8868\u793a\u5b9e\u6570\u7684\u6570\u5b66\u5f62\u5f0f\uff0c\u7279\u522b\u662f\u5728\u975e\u5e38\u5927\u6216\u975e\u5e38\u5c0f\u7684\u8303\u56f4\u5185\u3002\u4e00\u4e2a\u6d6e\u70b9\u6570\u7531\u4e09\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a \u6570\u7b26\u3001\u9636\u7801\u3001\u5c3e\u6570 \u3002 \u6570\u7b26 \uff1a\u901a\u5e38\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u8868\u793a\uff0c0\u4ee3\u8868\u6b63\u6570\uff0c1\u4ee3\u8868\u8d1f\u6570\u3002 \u9636\u7801 \uff08Exponent\uff09\uff1a\u662f\u4e00\u4e2a\u8868\u793a\u6570\u7684\u4e8c\u8fdb\u5236\u6307\u6570\u7684\u5b57\u6bb5\u3002\u5728\u6807\u51c6\u6d6e\u70b9\u6570\u8868\u793a\u4e2d\uff08\u5982 IEEE 754\uff09\uff0c\u9636\u7801\u901a\u5e38\u4f1a\u7ecf\u8fc7\u504f\u79fb\uff08\u6216\u79f0\u4e3a\u201c\u6307\u6570\u504f\u79fb\u201d\uff09\uff0c\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u7279\u5b9a\u7684\u503c\uff08\u6bd4\u5982127\u5bf9\u4e8e32\u4f4d\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0c1023\u5bf9\u4e8e64\u4f4d\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff09\u4f1a\u88ab\u52a0\u5230\u5b9e\u9645\u7684\u6307\u6570\u4e0a\u4ee5\u5f97\u5230\u9636\u7801\u7684\u503c\u3002\u8fd9\u79cd\u504f\u79fb\u5141\u8bb8\u8868\u793a\u6b63\u6307\u6570\u548c\u8d1f\u6307\u6570\u3002 \u5c3e\u6570 \uff08Mantissa \u6216 Significand\uff09\uff1a\u8868\u793a\u6570\u7684\u6709\u6548\u6570\u5b57\uff08\u6216\u79f0\u4e3a\u201c\u5c3e\u6570\u201d\uff09\u3002\u5728\u89c4\u683c\u5316\u7684\u6d6e\u70b9\u6570\u8868\u793a\u4e2d\uff0c\u5c3e\u6570\u5305\u542b\u6240\u6709\u7684\u663e\u8457\u6570\u5b57\uff08\u9664\u4e86\u901a\u5e38 \u7701\u7565\u7684\u6700\u9ad8\u4f4d\u6570\u5b57 \uff0c\u8be5\u6570\u5b57\u5728\u89c4\u683c\u5316\u7684\u6570\u4e2d\u603b\u662f1\uff0c\u9664\u975e\u6570\u662f0\uff09\u3002\u5c3e\u6570\u4e0d\u5305\u62ec\u9636\u7801\u7684\u504f\u79fb\u3002 \u4f8b\u5982\uff0c\u5728 IEEE 754\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6807\u51c6\u4e2d\uff0c\u4e00\u4e2a32\u4f4d\u7684\u6d6e\u70b9\u6570\u7531\u4ee5\u4e0b\u4e09\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a \u6570\u7b26 \uff1a1\u4f4d \u9636\u7801 \uff1a8\u4f4d\uff08\u5e26\u6709127\u7684\u504f\u79fb\uff09 \u5c3e\u6570 \uff1a23\u4f4d\uff08 \u52a0\u4e0a\u9690\u542b\u7684\u6700\u9ad8\u4f4d\uff0c\u537324\u4f4d\u6709\u6548\u6570\u5b57 \uff09 \u5728\u8fd9\u79cd\u683c\u5f0f\u4e2d\uff0c\u4e00\u4e2a\u6d6e\u70b9\u6570\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a \\[ (-1)^{\u6570\u7b26}\\times 1.\u5c3e\u6570\\times 2^{\u9636\u7801 - \u504f\u79fb} \\] \u9636\u7801\u7684\u504f\u79fb\u5141\u8bb8\u6211\u4eec\u8868\u793a\u975e\u5e38\u5c0f\u548c\u975e\u5e38\u5927\u7684\u6570\u503c\uff0c\u800c\u5c3e\u6570\u5219\u63d0\u4f9b\u4e86\u8fd9\u4e9b\u6570\u503c\u7684\u7cbe\u786e\u5ea6\u3002\u5f53\u89e3\u91ca\u9636\u7801\u65f6\uff0c\u901a\u5e38\u9700\u8981\u4ece\u5b58\u50a8\u7684\u9636\u7801\u503c\u4e2d\u51cf\u53bb\u504f\u79fb\u91cf\u4ee5\u83b7\u5f97\u5b9e\u9645\u7684\u6307\u6570\u503c\u3002\u4f8b\u5982\uff0c\u5982\u679c\u9636\u7801\u5b58\u50a8\u7684\u503c\u662f 130 \uff08\u4e8c\u8fdb\u5236\u4e3a \\(1000\\ 0010\\) \uff09\uff0c\u5728\u5355\u7cbe\u5ea6\u6d6e\u70b9\u683c\u5f0f\u4e2d\uff0c\u5b9e\u9645\u7684\u6307\u6570\u662f130 - 127 = 3\u3002","title":"\uff082\uff09IEEE 754\u683c\u5f0f"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#3ieee-754_1","text":"\\((-0.75)_{10}=(-0.11)_{2}=(-1.1)_{2}\\times2^{-1}\\) \u6570\u7b26=1 \u5c3e\u6570\u90e8\u5206 = .100000.... (\u9690\u542b\u6700\u9ad8\u4f4d1) \u9636\u7801\u771f\u503c=-1 \u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b\u504f\u79fb\u91cf = 127D \u79fb\u7801 =\u9636\u7801\u771f\u503c+\u504f\u79fb\u91cf \\(= -1\\ +\\ 1111111=0111\\ 11110\\) (\u51d1\u8db38\u4f4d) \\[ \\color{black}{\\rightarrow}\\color{red}{1}\\ \\color{blue}{01111110}\\ \\color{green}{10000000000000000000000} \\]","title":"\uff083\uff09\u5341\u8fdb\u5236\u8f6cIEEE 754\u6d6e\u70b9\u6570\u793a\u4f8b"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#4ieee-754","text":"\u4f8b\uff1a IEEE 754 \u7684\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570 \\(CO\\ AO\\ OO\\ OO\\ H\\) \u7684\u503c\u65f6\u591a\u5c11\u3002 \\[ \\text{CO\\ AO\\ OO\\ OO\\ H}\\ \\rightarrow \\color{red}{1}\\ \\color{blue}{10000001}\\ \\color{green}{010 0000 0000 0000 0000} \\] \u6570\u7b26 = 1 \u2192 \u662f\u4e2a\u8d1f\u6570 \u5c3e\u6570\u90e8\u5206 = \\(\\color{green}.0100...\\) (\u9690\u542b\u6700\u9ad8\u4f4d1) \u2192\u5c3e\u6570\u771f\u503c \\(=(1.01)_{2}\\) \u79fb\u7801 \\(=\\color{blue}10000001, \u82e5\u770b\u4f5c\u65e0\u7b26\u53f7\u6570=129D\\) \u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b\u504f\u79fb\u91cf=127D \u9636\u7801\u771f\u503c= \u79fb\u7801 - \u504f\u79fb\u91cf \\(= 1000 0001 - 111 111 1 1 = ( 0 0 0 0 1 0 )_{2}=(2)_{10}\\) \u2192 \u6d6e\u70b9\u6570\u771f\u503c \\(=(-1.01)_{2}\\times2^{2}=-1.25\\times2^{2}=-5.0\\)","title":"\uff084\uff09IEEE 754\u6d6e\u70b9\u6570\u8f6c\u5341\u8fdb\u5236"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#5_2","text":"\u9636\u7801E\u51680\uff0c\u5c3e\u6570M\u4e0d\u51680\u65f6\uff0c\u8868\u793a\u975e\u89c4\u683c\u5316\u5c0f\u6570 \\(\\pm(0.\\mathrm{xx}...x)_2\\times2^{-126}\\) \u5f53\u9636\u7801E\u5168\u4e3a0\uff0c\u5c3e\u6570M\u5168\u4e3a0\u65f6\uff0c\u8868\u793a\u771f\u503c \\(\\pm0\\) \u5f53\u9636\u7801E\u5168\u4e3a1\uff0c\u5c3e\u6570M\u5168\u4e3a0\u65f6\uff0c\u8868\u793a\u65e0\u7a77\u5927 \\(\\pm\\infty\\) \u5f53\u9636\u7801E\u5168\u4e3a1\uff0c\u5c3e\u6570M\u4e0d\u5168\u4e3a0\u65f6\uff0c\u8868\u793a\u975e\u6570\u503c\u201cNaN\u201d(Not a Number)","title":"\uff085\uff09\u975e\u89c4\u683c\u6570"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#4_2","text":"\u4f8b\uff1a\u5df2\u77e5\u5341\u8fdb\u5236\u6570 \\(X=\u22125/256\u3001Y=+59/1024\\) \uff0c\u6309\u673a\u5668\u8865\u7801\u6d6e\u70b9\u8fd0\u7b97\u89c4\u5219\u8ba1\u7b97 \\(X\u2212Y\\) \uff0c\u7ed3\u679c\u7528\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u6d6e\u70b9\u6570\u683c\u5f0f\u5982\u4e0b\uff1a\u9636\u7b26\u53d6 \\(2\\) \u4f4d\uff0c\u9636\u7801\u53d6 \\(3\\) \u4f4d\uff0c\u6570\u7b26\u53d6 \\(2\\) \u4f4d\uff0c\u5c3e\u6570\u53d6 \\(9\\) \u4f4d\u7528 \u4f7f\u7528\u8865\u7801\u8868\u793a\u9636\u7801\u548c\u5c3e\u6570 $$ X = \\frac{\u22125}{256} \\ Y = \\frac{+59}{1024} $$ \\[ X = -5 = 1.101 =11.011 \\] \\[ Y = +59 = 0.111011 = 00.111011 \\] \u9636\u7b26 \u9636\u7801\u6570\u503c\u90e8\u5206 \u6570\u7b26 \u5c3e\u6570\u7684\u6570\u503c\u90e8\u5206 X 11 011 11 011000000 \\(\\begin{align}X &= -101\\times2^{-8} \\\\ &= -0.101\\times2^{-8+3} \\\\ &= -0.101\\times2^{-5} \\\\ &= -0.101\\times2^{-101} \\\\ &= 11.011\\times2^{11.011}\\end{align}\\) Y 11 100 00 111011000 \\(\\begin{align}Y &= +111011\\times2^{-10} \\\\ &= +0.111011\\times2^{-10+6} \\\\ &= +0.111011\\times2^{-4} \\\\ &= +0.111011\\times2^{-100} \\\\ &= 00.111011\\times2^{11.100}\\end{align}\\)","title":"4.\u6d6e\u70b9\u6570\u7684\u52a0\u51cf\u8fd0\u7b97"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#1_4","text":"\u6c42\u9636\u5dee\u5c0f\u9636\u5411\u5927\u9636\u770b\u9f50\uff0c\u5c3e\u6570\u6bce\u53f3\u79fb\u4e00\u4f4d\uff0c\u9636\u7801\u52a01 \\[ \\begin{align}[\\Delta_j]_\u8865 &= [j_x]_\u8865 + [j_y]_\u8865 \\\\&= 11.011 + 00.100 \\\\&= 11.111 \\\\&=-1_D\\end{align} \\] \u4e0a\u8ff0\u8ba1\u7b97\u8868\u793a \\(X\\) \u7684\u9636\u6570\u5c0f\u4e8e \\(Y\\) \u7684\u9636\u6570\uff0c\u56e0\u6b64\u9700\u8981\u5c06 \\(X\\) \u7b97\u672f\u53f3\u79fb \u5bf9\u9636 \\[ \\begin{align}X =& 11.100,11.1011000 \\\\ = & -0.0101\\times2^{-100}\\end{align} \\]","title":"\uff081\uff09\u5bf9\u9636"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#2_4","text":"\\[ \\begin{equation} \\begin{array}{l}X-Y \\\\ =\\left(-0.0101 \\times 2^{-100}\\right)-\\left(+0.111011 \\times 2^{-100}\\right) \\\\ =(-0.0101-0.111011) \\times 2^{-100} \\\\ =-1.001111 \\times 2^{-100}\\end{array} \\end{equation} \\] \\[ \\begin{align}[Y]_\u8865 =& 11.100,00.111011000 \\\\ [-Y]_\u8865 =& 11.100,11.000101000 \\\\ [X]_\u8865 =& 11.100,11.101100000\\end{align} \\] \\[ X-Y:(\u5c3e\u6570\u52a0\u51cf)\\\\ \\begin{equation} \\begin{array}{r}11.101100000 \\\\ +\\quad 11.000101000 \\\\ \\hline 10.110001000\\end{array} \\end{equation} \\]","title":"\uff082\uff09\u5c3e\u6570\u52a0\u51cf"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#3_3","text":"\u53f3\u89c4 \u5f53\u7ed3\u679c\u5c3e\u6570\u7684\u4e24\u4e2a\u7b26\u53f7\u4f4d\u7684\u503c\u4e0d\u540c\u65f6\uff0c\u8868\u660e\u5c3e\u6570\u8fd0\u7b97\u7ed3\u679c\u6ea2\u51fa\u3002\u6b64\u65f6\u5e94\u4f7f\u7ed3\u679c\u5c3e\u6570\u53f3\u79fb\u4e00\u4f4d\uff0c\u5e76\u4f7f\u9636\u7801\u7684\u503c\u52a01\u3002 $$ \\begin{equation} X-Y: \\quad 11[100],[10].110001000 \\rightarrow 11[101],[11].011000100 \\end{equation} $$ \u5de6\u89c4 \u5f53\u5c3e\u6570\u7684\u8fd0\u7b97\u7ed3\u679c\u4e0d\u6ea2\u51fa\uff0c\u4f46\u6700\u9ad8\u6570\u503c\u4f4d\u4e0e\u7b26\u53f7\u4f4d\u540c\u503c\uff0c\u8868\u660e\u4e0d\u6ee1\u8db3\u89c4\u683c\u5316\u89c4\u5219\uff0c\u6b64\u65f6\u5e94\u91cd\u590d\u5730\u4f7f\u5c3e\u6570\u5de6\u79fb\u3001\u9636\u6570\u51cf1\uff0c\u76f4\u5230\u51fa\u73b0\u5728\u6700\u9ad8\u6570\u503c\u4f4d\u4e0a\u7684\u503c\u4e0e\u7b26\u53f7\u4f4d\u7684\u503c\u4e0d\u540c\u4e3a\u6b62\u3002 $$ \\begin{align}A =& 11.011,11.011000000\\ B =& 11.100,11.111011000\\end{align} $$ \\[ A-B:11[100],[11].110001000 \\rightarrow 11[010],[11].000100000 \\]","title":"\uff083\uff09\u89c4\u683c\u5316"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#4_3","text":"0\u820d1\u5165:\u88ab\u820d\u53bb\u7684\u672b\u5c3e\u662f0\u76f4\u63a5\u820d\u53bb\uff0c\u672b\u5c3e\u4e3a1\u518d \\(+1\\) \uff0c\u8fd9\u6837\u505a\u53ef\u80fd\u4f1a\u4f7f\u5c3e\u6570\u53c8\u6ea2\u51fa\uff0c\u6b64\u65f6\u9700\u518d\u505a\u4e00\u6b21\u53f3\u89c4\u3002 \\[ \\begin{equation} \\begin{aligned} 11100,10.110001011 & \\rightarrow 11101,11.011000101\\1 \\\\ & \\rightarrow 11101,11.011000110\\1\\end{aligned} \\end{equation} \\] \u6052\u7f6e \\(1\\) :\u5c3e\u6570\u53f3\u79fb\u65f6\uff0c\u4e0d\u8bba\u4e22\u6389\u7684\u6700\u9ad8\u6570\u503c\u4f4d\u662f\u201c1\u201d\u8fd8\u662f\u201c0\u201d\uff0c\u90fd\u4f7f\u53f3\u79fb\u540e\u7684\u5c3e\u6570\u672b\u4f4d\u6052\u7f6e\u201c1\u201d\u3002\u8fd9\u79cd\u65b9\u6cd5\u540c\u6837\u6709\u4f7f\u5c3e\u6570\u53d8\u5927\u548c\u53d8\u5c0f\u7684\u4e24\u79cd\u53ef\u80fd\u3002 \\[ \\begin{equation} \\begin{aligned} 11100,10.110001011 & \\rightarrow 11101,11.011000101\\1 \\\\ & \\rightarrow 11101,11.011000101\\1\\end{aligned} \\end{equation} \\]","title":"\uff084\uff09\u820d\u5165"},{"location":"Documentation/study-notes/computer-system-basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/#5_3","text":"\u9636\u7801 \\(+1\\) \u540e\u7b26\u53f7\u4f4d\u662f\u5426\u76f8\u540c \\[ 11.100+1 = 11.101 \\\\ \u7b26\u53f7\u4f4d11\u76f8\u540c\u672a\u6ea2\u51fa \\]","title":"\uff085\uff09\u5224\u6ea2\u51fa"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","text":"faster-rcnn-\u5b66\u4e60\u7b14\u8bb0 \u00b6 \u8be5\u7b14\u8bb0\u57fa\u4e8e B\u7ad9up\u4e3b\uff1aBubbliiiing \u7684\u89c6\u9891\u8bb2\u89e3\u7f16\u5199 \u6e90\u7801\u5730\u5740\uff1ahttps://github.com/bubbliiiing/faster-rcnn-pytorch \u4f5c\u8005\u535a\u5ba2\u5730\u5740\uff1ahttps://blog.csdn.net/weixin_44791964/article/details/105739918 \u53c2\u8003\u8d44\u6599\uff1a \u4e00\u6587\u8bfb\u61c2Faster RCNN \u4e00\u3001faster-rcnn\u4ecb\u7ecd \u00b6 \u200b \u8ba1\u7b97\u673a\u5982\u4f55\u786e\u5b9a\u4e00\u5f20\u56fe\u7247\u7684\u76ee\u6807\u7684\u4f4d\u7f6e\u5462\uff1f\u53ea\u9700\u8981\u4f20\u5165\u56db\u4e2a\u53c2\u6570\u3002 \u200b \u5f53\u4e00\u5f20\u56fe\u7247\u4f20\u5165faster-rcnn\u4e2d\u4f1a\u88abresize\u5230\u6700\u5c0f\u8fb9\u662f600\u7684shape\u4e0a\uff0c\u957f\u5bbd\u6bd4\u4fdd\u6301\u4e0d\u53d8\uff0c\u7136\u540e\u5c06\u56fe\u7247\u4f20\u5165\u4e3b\u5e72\u7f51\u7edc(backbone),\u56fe\u7247\u88ab\u5206\u5272\u6210 \\(38\\times38\\) \u7684\u7279\u5f81\u5c42\uff08\u7f51\u683c\uff09\uff0c\u6bcf\u4e2a\u7f51\u683c\u5b58\u5728\u82e5\u5e72\u4e2a\u5148\u9a8c\u6846\u3002 1.\u4f7f\u7528RPN\u751f\u6210\u5efa\u8bae\u6846 \u00b6 RPN\u7f51\u7edc\u7ed3\u6784 RPN\u7ed3\u6784\uff0c\u6709\u4e24\u6761\u7ebf\u3002\u4e0a\u9762\u4e00\u6761\u901a\u8fc7softmax\u5206\u7c7banchors\u83b7\u5f97positive\u548cnegative\u5206\u7c7b\uff0c\u4e0b\u9762\u4e00\u6761\u7528\u4e8e\u8ba1\u7b97\u5bf9\u4e8eanchors\u7684bounding box regression\u504f\u79fb\u91cf\uff0c\u4ee5\u83b7\u5f97\u7cbe\u786e\u7684proposal\u3002 \u6700\u540e\u7684Proposal\u5c42\u5219\u8d1f\u8d23\u7efc\u5408positive anchors\u548c\u5bf9\u5e94bounding box regression\u504f\u79fb\u91cf\u83b7\u53d6\u4fee\u6b63\u540e\u7684proposals\uff0c\u540c\u65f6\u5254\u9664\u592a\u5c0f\u548c\u8d85\u51fa\u8fb9\u754c\u7684proposals\u3002\u5176\u5b9e\u6574\u4e2a\u7f51\u7edc\u5230\u4e86Proposal Layer\u8fd9\u91cc\uff0c\u5c31\u5b8c\u6210\u4e86\u76f8\u5f53\u4e8e\u76ee\u6807\u5b9a\u4f4d\u7684\u529f\u80fd\u3002 \u5728\u62ff\u5230feature map\u540e\uff0c\u5148\u7ecf\u8fc7\u4e00\u4e2a3x3\u5377\u79ef\u3002 \u751f\u6210\u5019\u9009\u6846\u7684\u8fc7\u7a0b\u5305\u62ec\u4e24\u4e2a\u5173\u952e\u6b65\u9aa4\uff1a \u951a\u6846\u751f\u6210\uff08Anchor Box Generation\uff09\uff1a\u5728\u6ed1\u52a8\u7a97\u53e3\u7684\u6bcf\u4e2a\u4f4d\u7f6e\uff0cRPN\u5728\u4e0d\u540c\u5c3a\u5ea6\u548c\u957f\u5bbd\u6bd4\u7684\u951a\u6846\u4e0a\u751f\u6210\u591a\u4e2a\u5019\u9009\u6846\u3002\u8fd9\u4e9b\u951a\u6846\u662f\u9884\u5b9a\u4e49\u7684\u4e00\u7ec4\u77e9\u5f62\u6846\uff0c\u56fa\u5b9a\u5927\u5c0f\u4f46\u5177\u6709\u4e0d\u540c\u5c3a\u5ea6\u548c\u957f\u5bbd\u6bd4\u3002 \u5019\u9009\u6846\u5206\u7c7b\u548c\u56de\u5f52\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u951a\u6846\uff0cRPN\u901a\u8fc7\u5377\u79ef\u64cd\u4f5c\u5c06\u5176\u6620\u5c04\u5230\u4e00\u4e2a\u4f4e\u7ef4\u7279\u5f81\u5411\u91cf\u3002\u7136\u540e\uff0c\u8fd9\u4e2a\u7279\u5f81\u5411\u91cf\u88ab\u7528\u4e8e\u9884\u6d4b\u951a\u6846\u4e2d\u662f\u5426\u5305\u542b\u76ee\u6807\u4ee5\u53ca\u5bf9\u5e94\u7684\u8fb9\u754c\u6846\u56de\u5f52\u53c2\u6570\u3002\u901a\u8fc7\u5206\u7c7b\u548c\u56de\u5f52\u7684\u64cd\u4f5c\uff0cRPN\u53ef\u4ee5\u7b5b\u9009\u51fa\u5177\u6709\u9ad8\u76ee\u6807\u53ef\u80fd\u6027\u7684\u5efa\u8bae\u6846\uff0c\u5e76\u6839\u636e\u9884\u6d4b\u7684\u8fb9\u754c\u6846\u56de\u5f52\u53c2\u6570\u8c03\u6574\u5efa\u8bae\u6846\u4f4d\u7f6e\u3002 \u7279\u5f81\u5c42\u622a\u53d6 \u901a\u8fc7\u5efa\u8bae\u6846\u5728\u7279\u5f81\u5c42\u4e0a\u8fdb\u884c\u622a\u53d6\uff0c\u622a\u53d6\u5230\u7684\u4e0d\u540c\u7279\u5f81\u5c42\u5c31\u80fd\u53cd\u6620\u539f\u56fe\u7684\u4e0d\u540c\u4f4d\u7f6e anchor \u6240\u8c13anchors\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u7ec4\u7531rpn/generate_anchors.py\u751f\u6210\u7684\u77e9\u5f62\u3002\u76f4\u63a5\u8fd0\u884c\u4f5c\u8005demo\u4e2d\u7684generate_anchors.py\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u8f93\u51fa\uff1a \u5176\u4e2d\u6bcf\u884c\u7684 4 \u4e2a\u503c(x 1 , y 1 , x 2 , y 2 )\u8868\u77e9\u5f62\u5de6\u4e0a\u548c\u53f3\u4e0b\u89d2\u70b9\u5750\u6807 , 9 \u4e2a\u77e9\u5f62\u5171\u6709 3 \u79cd\u5f62\u72b6\u3002\u8fd9 9 \u4e2aa n chor\u7684\u5927\u5c0f\u6309\u7167\u4e09\u79cd\u957f\u5bbd\u6bd4ra t io [ 1 : 1 \uff0c 1 : 2 \uff0c 2 : 1 ] \u8bbe\u7f6e\uff0c\u5177\u4f53\u5927\u5c0f\u6839\u636e\u8f93\u5165\u56fe\u50cf\u7684\u539f\u59cb\u76ee\u6807\u5927\u5c0f\u7075\u6d3b\u8bbe\u7f6e\u3002 [[ -84. -40. 99. 55. ] [ -176. -88. 191. 103. ] [ -360. -184. 375. 199. ] [ -56. -56. 71. 71. ] [ -120. -120. 135. 135. ] [ -248. -248. 263. 263. ] [ -36. -80. 51. 95. ] [ -80. -168. 95. 183. ] [ -168. -344. 183. 359. ]] \u5206\u7c7b \u5206\u7c7b\u4efb\u52a1\u662f\u6307\u5c06\u5019\u9009\u6846\u4e2d\u7684\u76ee\u6807\u8fdb\u884c\u5206\u7c7b\uff0c\u786e\u5b9a\u5176\u6240\u5c5e\u7684\u7c7b\u522b\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5206\u7c7b\u4efb\u52a1\u4f7f\u7528softmax\u51fd\u6570\u4f5c\u4e3a\u6fc0\u6d3b\u51fd\u6570\uff0c\u5c06\u5019\u9009\u6846\u5bf9\u5e94\u7684\u7279\u5f81\u6620\u5c04\u4e3a\u5404\u4e2a\u7c7b\u522b\u7684\u6982\u7387\u5206\u5e03\u3002\u901a\u8fc7\u6bd4\u8f83\u5404\u4e2a\u7c7b\u522b\u7684\u6982\u7387\u5206\u6570\uff0c\u53ef\u4ee5\u786e\u5b9a\u5019\u9009\u6846\u6700\u53ef\u80fd\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u3002 \u901a\u8fc71x1\u5377\u79ef\u5f97\u5230\u7684\u8f93\u51fa\uff0c\u8be51x1\u5377\u79ef\u7684caffe prototxt\u5b9a\u4e49\u5982\u4e0b\uff1a \u7ecf\u8fc7\u8be5\u5377\u79ef\u7684\u8f93\u51fa\u56fe\u50cf\u4e3aWxHx18\u5927\u5c0f,\u5bf9\u5e94\u4e86feature maps\u6bcf\u4e00\u4e2a\u70b9\u90fd\u67099\u4e2aanchors\uff0c\u540c\u65f6\u6bcf\u4e2aanchors\u53c8\u6709\u53ef\u80fd\u662fpositive\u548cnegative\uff0c\u6240\u6709\u8fd9\u4e9b\u4fe1\u606f\u90fd\u4fdd\u5b58WxHx(9*2)\u5927\u5c0f\u7684\u77e9\u9635 layer { name : \"rpn_cls_score\" type : \"Convolution\" bottom : \"rpn/output\" top : \"rpn_cls_score\" convolution_param { num_output : 18 # 2(positive/negative) * 9(anchors) kernel_size : 1 pad : 0 stride : 1 } } \u56e0\u4e3a\u8fd9\u91cc\u662f\u4e8c\u5206\u7c7b\u5224\u65adpositive\u548cnegative\uff0c\u6240\u4ee5\u8be5feature map\u4e0a\u6bcf\u4e2a\u70b9\u7684\u6bcf\u4e2aanchor\u5bf9\u5e942\u4e2a\u503c\uff0c\u8868\u793a\u76ee\u6807\u548c\u80cc\u666f\u7684\u6982\u7387 Reshape\u5c42\u662f\u6280\u672f\u7ec6\u8282\u95ee\u9898\uff0c\u5bf9feature map\u8fdb\u884c\u7ef4\u5ea6\u53d8\u6362\uff0c\u4f7f\u5f97\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u7ef4\u5ea6\u4e3a2\uff0c\u65b9\u4fbf\u5728\u8be5\u7ef4\u5ea6\u4e0a\u8fdb\u884csoftmax\u64cd\u4f5c\uff0c\u4e4b\u540e\u518dReshape\u6062\u590d\u539f\u72b6\u3002 \u540e\u9762\u63a5softmax\u5206\u7c7b\u83b7\u5f97positive anchors\uff0c\u4e5f\u5c31\u76f8\u5f53\u4e8e\u521d\u6b65\u63d0\u53d6\u4e86\u9009\u76ee\u6807\u6846\uff08bounding box\uff09 \u56de\u5f52 \u56de\u5f52\u4efb\u52a1\u662f\u6307\u5bf9\u5019\u9009\u6846\u7684\u7cbe\u786e\u4f4d\u7f6e\u8fdb\u884c\u8c03\u6574\uff0c\u4ee5\u66f4\u597d\u5730\u5339\u914d\u76ee\u6807\u7684\u771f\u5b9e\u4f4d\u7f6e\u3002\u56de\u5f52\u4efb\u52a1\u901a\u5e38\u4f7f\u7528\u56de\u5f52\u5668\u6765\u9884\u6d4b\u5019\u9009\u6846\u7684\u504f\u79fb\u91cf\uff0c\u5176\u4e2d\u5305\u62ec\u6c34\u5e73\u548c\u5782\u76f4\u65b9\u5411\u4e0a\u7684\u5e73\u79fb\u91cf\u4ee5\u53ca\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u7684\u7f29\u653e\u6bd4\u4f8b\u3002\u8fd9\u4e9b\u9884\u6d4b\u7684\u504f\u79fb\u91cf\u53ef\u4ee5\u5e94\u7528\u4e8e\u5019\u9009\u6846\u7684\u521d\u59cb\u4f4d\u7f6e\u548c\u5c3a\u5bf8\uff0c\u4ee5\u83b7\u5f97\u66f4\u7cbe\u786e\u7684\u76ee\u6807\u4f4d\u7f6e\u3002 \u5982\u56fe\u6240\u793a\u7eff\u8272\u6846\u4e3a\u98de\u673a\u7684Ground Truth(GT)\uff0c\u7ea2\u8272\u4e3a\u63d0\u53d6\u7684positive anchors\uff0c\u5373\u4fbf\u7ea2\u8272\u7684\u6846\u88ab\u5206\u7c7b\u5668\u8bc6\u522b\u4e3a\u98de\u673a\uff0c\u4f46\u662f\u7531\u4e8e\u7ea2\u8272\u7684\u6846\u5b9a\u4f4d\u4e0d\u51c6\uff0c\u8fd9\u5f20\u56fe\u76f8\u5f53\u4e8e\u6ca1\u6709\u6b63\u786e\u7684\u68c0\u6d4b\u51fa\u98de\u673a\u3002\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u91c7\u7528\u4e00\u79cd\u65b9\u6cd5\u5bf9\u7ea2\u8272\u7684\u6846\u8fdb\u884c\u5fae\u8c03\uff0c\u4f7f\u5f97positive anchors\u548cGT\u66f4\u52a0\u63a5\u8fd1\u3002 \u901a\u8fc71x1\u5377\u79ef\u5f97\u5230\u7684\u8f93\u51fa\uff0c\u8be51x1\u5377\u79ef\u7684caffe prototxt\u5b9a\u4e49\u5982\u4e0b\uff1a layer { name : \"rpn_bbox_pred\" type : \"Convolution\" bottom : \"rpn/output\" top : \"rpn_bbox_pred\" convolution_param { num_output : 36 # 4 * 9(anchors) kernel_size : 1 pad : 0 stride : 1 } } \u7ecf\u8fc7\u8be5\u5377\u79ef\u8f93\u51fa\u56fe\u50cf\u4e3aWxHx36\uff0c\u5728caffe blob\u5b58\u50a8\u4e3a[1, 4x9, H, W]\uff0c\u8fd9\u91cc\u76f8\u5f53\u4e8efeature maps\u6bcf\u4e2a\u70b9\u90fd\u67099\u4e2aanchors\uff0c\u6bcf\u4e2aanchors\u53c8\u90fd\u67094\u4e2a\u7528\u4e8e\u56de\u5f52\u7684\u53d8\u6362\u91cf\u3002 \u200b \u5176\u5b9eRPN\u6700\u7ec8\u5c31\u662f\u5728\u539f\u56fe\u5c3a\u5ea6\u4e0a\uff0c\u8bbe\u7f6e\u4e86\u5bc6\u5bc6\u9ebb\u9ebb\u7684\u5019\u9009Anchor\u3002\u7136\u540e\u7528cnn\u53bb\u5224\u65ad\u54ea\u4e9bAnchor\u662f\u91cc\u9762\u6709\u76ee\u6807\u7684positive anchor\uff0c\u54ea\u4e9b\u662f\u6ca1\u76ee\u6807\u7684negative anchor\u3002\u6240\u4ee5\uff0c\u4ec5\u4ec5\u662f\u4e2a\u4e8c\u5206\u7c7b\u800c\u5df2 2.ROI pooling\u5c42 \u00b6 \u200b ROI pooling\u5c42\u5c06\u622a\u53d6\u5230\u7684\u4e0d\u540c\u5927\u5c0f\u7684\u7279\u5f81\u5c42\u533a\u57dfresize\u5230\u540c\u6837\u5927\u5c0f\uff0c\u518d\u901a\u8fc7\u5206\u7c7b\u4e0e\u56de\u5f52\u7f51\u7edc\u6765\u5224\u65ad\u622a\u53d6\u7684\u533a\u57df\u662f\u5426\u6709\u76ee\u6807\uff0c\u5e76\u5bf9\u5efa\u8bae\u6846\u8fdb\u884c\u8c03\u6574\uff0c\u8fd9\u4e2a\u7ed3\u679c\u5c31\u662f\u6700\u7ec8\u7684\u7ed3\u679c\u3002 \u5f53feature map\u4f20\u5165ROI pooling\u5c42\u4e2d\uff0c\u5229\u7528\u5efa\u8bae\u6846\u5bf9feature map\u8fdb\u884c\u622a\u53d6 ROI pooling\u5c42\u4f1a\u5bf9\u6240\u6709\u7684feature map\u8fdb\u884c\u5206\u533a\u57df\u6c60\u5316\uff0c\u4f7f\u5f97\u6240\u6709\u7684shape\u76f8\u540c\u3002 \u63a5\u7740\u4f7f\u7528\u5f97\u5230\u7684feature map\u8fdb\u884c\u5206\u7c7b\u548c\u56de\u5f52 \u56de\u5f52\u9884\u6d4b\u4f1a\u5bf9\u5efa\u8bae\u6846\u8fdb\u884c\u8c03\u6574\uff0c\u800c\u5206\u7c7b\u9884\u6d4b\u4f1a\u5224\u65ad\u5efa\u8bae\u6846\u4e2d\u662f\u5426\u771f\u7684\u5b58\u5728\u76ee\u6807 \u3002 3.\u5c0f\u7ed3 \u00b6 \u200b faster-rcnn\u5c06\u9884\u6d4b\u8fc7\u7a0b\u5206\u4e3a\u4e24\u6b65 \u7c97\u7565\u7684\u7b5b\u9009\uff08\u5efa\u8bae\u6846\uff09 \u7cbe\u7ec6\u7684\u8c03\u6574\uff08\u56de\u5f52\uff0c\u9884\u6d4b\uff09 \u4e8c\u3001\u4e3b\u5e72\u7f51\u7edc\uff08backbone\uff09 \u00b6 \u200b \u672c\u6587\u6863\u4f7f\u7528ResNet50\u4f5c\u4e3a\u4e3b\u5e72\u7f51\u7edc\u3002 1.ResNet50\u57fa\u672c\u6a21\u5757 \u00b6 \u4e24\u8005\u5747\u4e3a\u6b8b\u5dee\u7f51\u7edc Conv Block \u8be5\u6a21\u5757\u8f93\u5165\u548c\u8f93\u51fa\u4e0d\u60f3\u540c\uff0c\u4e0d\u80fd\u8fdb\u884c\u8fde\u7eed\u4e32\u8054\uff0c\u4e3b\u8981\u7528\u4e8e\u6539\u53d8\u7f51\u7edc\u56f4\u7ef4\u5ea6 \u6b8b\u5dee\u8fb9\u6709\u5377\u79ef\uff08\u901a\u8fc7\u6539\u53d8\u5377\u79ef\u7684\u6b65\u957f\u548c\u901a\u9053\u6570\u6539\u53d8\u8f93\u51fa\u7279\u5f81\u5c42\u7684\u901a\u9053\u6570\uff09 \u7ed3\u6784\u5982\u4e0b: Identity Block \u8f93\u5165\u7ef4\u5ea6\u548c\u8f93\u51fa\u7ef4\u5ea6\u76f8\u540c\uff0c\u53ef\u4ee5\u4e32\u8054\uff0c\u7528\u4e8e\u52a0\u6df1\u7f51\u7edc\u3002 \u7ed3\u6784\u5982\u4e0b\uff1a 2.Bottleneck \u00b6 class Bottleneck ( nn . Module ): expansion = 4 def __init__ ( self , inplanes , planes , stride = 1 , downsample = None ): super ( Bottleneck , self ) . __init__ () self . conv1 = nn . Conv2d ( inplanes , planes , kernel_size = 1 , stride = stride , bias = False ) self . bn1 = nn . BatchNorm2d ( planes ) self . conv2 = nn . Conv2d ( planes , planes , kernel_size = 3 , stride = 1 , padding = 1 , bias = False ) self . bn2 = nn . BatchNorm2d ( planes ) self . conv3 = nn . Conv2d ( planes , planes * 4 , kernel_size = 1 , bias = False ) self . bn3 = nn . BatchNorm2d ( planes * 4 ) self . relu = nn . ReLU ( inplace = True ) self . downsample = downsample self . stride = stride def forward ( self , x ): residual = x out = self . conv1 ( x ) out = self . bn1 ( out ) out = self . relu ( out ) out = self . conv2 ( out ) out = self . bn2 ( out ) out = self . relu ( out ) out = self . conv3 ( out ) out = self . bn3 ( out ) if self . downsample is not None : residual = self . downsample ( x ) out += residual out = self . relu ( out ) return out \u200b \u8fd9\u6bb5\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2aBottleneck\u5757\uff0c\u5b83\u662fResNet\u4e2d\u7684\u57fa\u672c\u6a21\u5757\u4e4b\u4e00\u3002Bottleneck\u5757\u901a\u8fc7\u964d\u4f4e\u7279\u5f81\u56fe\u7684\u7ef4\u5ea6\uff0c\u51cf\u5c11\u8ba1\u7b97\u91cf\uff0c\u540c\u65f6\u901a\u8fc7\u8df3\u8dc3\u8fde\u63a5\u4fdd\u7559\u4f4e\u5c42\u7279\u5f81\uff0c\u63d0\u9ad8\u6a21\u578b\u7684\u6027\u80fd\u3002 \u4e0b\u9762\u662f\u5bf9\u8fd9\u6bb5\u4ee3\u7801\u7684\u89e3\u91ca\uff1a expansion = 4 \uff1a\u6269\u5c55\u7cfb\u6570\uff0c\u7528\u4e8e\u5c06\u8f93\u5165\u901a\u9053\u6570\u6269\u5c55\u5230\u8f93\u51fa\u901a\u9053\u6570\u7684\u500d\u6570\u3002 __init__ \u65b9\u6cd5\uff1a\u521d\u59cb\u5316\u51fd\u6570\uff0c\u5b9a\u4e49\u4e86Bottleneck\u5757\u7684\u7ed3\u6784\u3002\u5b83\u63a5\u53d7\u8f93\u5165\u901a\u9053\u6570 inplanes \u3001\u8f93\u51fa\u901a\u9053\u6570 planes \u3001\u6b65\u957f stride \u548c\u4e0b\u91c7\u6837\u64cd\u4f5c downsample \u4f5c\u4e3a\u53c2\u6570\u3002\u5728\u521d\u59cb\u5316\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e09\u4e2a\u5377\u79ef\u5c42\u548c\u4e09\u4e2a\u6279\u5f52\u4e00\u5316\u5c42\uff0c\u4ee5\u53ca\u6fc0\u6d3b\u51fd\u6570ReLU\u548c\u964d\u91c7\u6837\u64cd\u4f5c\u3002 forward \u65b9\u6cd5\uff1a\u524d\u5411\u4f20\u64ad\u51fd\u6570\uff0c\u5b9a\u4e49\u4e86Bottleneck\u5757\u7684\u8ba1\u7b97\u8fc7\u7a0b\u3002\u5728\u524d\u5411\u4f20\u64ad\u4e2d\uff0c\u9996\u5148\u5c06\u8f93\u5165 x \u4fdd\u5b58\u5230 residual \u4e2d\uff0c\u7136\u540e\u901a\u8fc7\u5377\u79ef\u3001\u6279\u5f52\u4e00\u5316\u548cReLU\u6fc0\u6d3b\u51fd\u6570\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\u3002\u63a5\u7740\uff0c\u901a\u8fc7\u7b2c\u4e09\u4e2a\u5377\u79ef\u5c42\u548c\u6279\u5f52\u4e00\u5316\u5c42\u5c06\u7279\u5f81\u56fe\u7684\u901a\u9053\u6570\u6269\u5c55\u5230\u8f93\u5165\u901a\u9053\u6570\u7684\u56db\u500d\u3002\u5982\u679c\u5b58\u5728\uff08\u6b8b\u5dee\u8fb9\u4e0a\u6709\u5377\u79ef\uff09\u4e0b\u91c7\u6837\u64cd\u4f5c\uff0c\u5219\u5bf9\u8f93\u5165 x \u8fdb\u884c\u4e0b\u91c7\u6837\u64cd\u4f5c\u3002\u6700\u540e\uff0c\u5c06\u4e0b\u91c7\u6837\u7ed3\u679c\u4e0e\u7279\u5f81\u56fe\u76f8\u52a0\uff0c\u5e76\u518d\u6b21\u7ecf\u8fc7ReLU\u6fc0\u6d3b\u51fd\u6570\u3002 \u200b Bottleneck\u5757\u7684\u8bbe\u8ba1\u53ef\u4ee5\u6709\u6548\u5730\u51cf\u5c11\u6a21\u578b\u7684\u53c2\u6570\u91cf\u548c\u8ba1\u7b97\u91cf\uff0c\u540c\u65f6\u901a\u8fc7\u8df3\u8dc3\u8fde\u63a5\u4f20\u9012\u4f4e\u5c42\u7279\u5f81\u4fe1\u606f\uff0c\u63d0\u9ad8\u6a21\u578b\u7684\u8868\u8fbe\u80fd\u529b\u548c\u6027\u80fd\u3002 \u200b \u9996\u5148\u901a\u8fc7 \\(1\\times1\\) \u7684\u5377\u79ef\u538b\u7f29\u901a\u9053\u6570\uff0c\u63a5\u7740\u4f7f\u7528 \\(3\\times3\\) \u5377\u79ef\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u518d\u5229\u7528 \\(1\\times 1\\) \u5377\u79ef\u6269\u5f20\u901a\u9053\u6570\uff0c\u8fd9\u6837\u7684\u4e00\u4e2a\u74f6\u9888\u7ed3\u6784\u53ef\u4ee5\u66f4\u597d\u7684\u63d0\u53d6\u7279\u5f81\u52a0\u6df1\u6574\u4e2a\u7f51\u7edc\uff0c\u51cf\u5c11\u53c2\u6570\u91cf\u3002 1x1\u5377\u79ef\u7684\u4f5c\u7528\u662f\u964d\u4f4e\u8f93\u5165\u901a\u9053\u7684\u7ef4\u5ea6\u3002\u5728Bottleneck\u5757\u4e2d\uff0c\u9996\u5148\u4f7f\u75281x1\u5377\u79ef\u5c06\u8f93\u5165\u901a\u9053\u6570\u4ece inplanes \u964d\u4f4e\u5230 planes \uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u540e\u7eed3x3\u5377\u79ef\u7684\u8ba1\u7b97\u91cf\u548c\u53c2\u6570\u91cf\u3002\u56e0\u4e3a1x1\u5377\u79ef\u7684\u53c2\u6570\u91cf\u53ea\u53d6\u51b3\u4e8e\u8f93\u5165\u901a\u9053\u6570\u548c\u8f93\u51fa\u901a\u9053\u6570\uff0c\u4e0e\u8f93\u5165\u7279\u5f81\u56fe\u7684\u5c3a\u5bf8\u5927\u5c0f\u65e0\u5173\u3002 3x3\u5377\u79ef\u7528\u4e8e\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\u3002\u901a\u8fc7\u4f7f\u7528\u8f83\u5c0f\u7684\u5377\u79ef\u6838\uff0c\u53ef\u4ee5\u5728\u4fdd\u6301\u63a5\u53d7\u91ce\uff08receptive field\uff09\u5927\u5c0f\u7684\u540c\u65f6\uff0c\u51cf\u5c11\u5377\u79ef\u64cd\u4f5c\u7684\u8ba1\u7b97\u91cf\u548c\u53c2\u6570\u91cf\u3002\u76f8\u6bd4\u4e8e\u4f7f\u7528\u8f83\u5927\u7684\u5377\u79ef\u6838\uff0c3x3\u5377\u79ef\u53ef\u4ee5\u5728\u66f4\u5c11\u7684\u53c2\u6570\u91cf\u4e0b\u5b9e\u73b0\u7c7b\u4f3c\u7684\u611f\u53d7\u91ce\u3002 3. ResNet \u00b6 class ResNet ( nn . Module ): def __init__ ( self , block , layers , num_classes = 1000 ): #-----------------------------------# # \u5047\u8bbe\u8f93\u5165\u8fdb\u6765\u7684\u56fe\u7247\u662f600,600,3 #-----------------------------------# self . inplanes = 64 super ( ResNet , self ) . __init__ () # 600,600,3 -> 300,300,64 self . conv1 = nn . Conv2d ( 3 , 64 , kernel_size = 7 , stride = 2 , padding = 3 , bias = False ) self . bn1 = nn . BatchNorm2d ( 64 ) self . relu = nn . ReLU ( inplace = True ) # 300,300,64 -> 150,150,64 self . maxpool = nn . MaxPool2d ( kernel_size = 3 , stride = 2 , padding = 0 , ceil_mode = True ) # 150,150,64 -> 150,150,256 self . layer1 = self . _make_layer ( block , 64 , layers [ 0 ]) # 150,150,256 -> 75,75,512 self . layer2 = self . _make_layer ( block , 128 , layers [ 1 ], stride = 2 ) # 75,75,512 -> 38,38,1024 \u5230\u8fd9\u91cc\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a38,38,1024\u7684\u5171\u4eab\u7279\u5f81\u5c42 self . layer3 = self . _make_layer ( block , 256 , layers [ 2 ], stride = 2 ) # self.layer4\u88ab\u7528\u5728classifier\u6a21\u578b\u4e2d self . layer4 = self . _make_layer ( block , 512 , layers [ 3 ], stride = 2 ) self . avgpool = nn . AvgPool2d ( 7 ) self . fc = nn . Linear ( 512 * block . expansion , num_classes ) for m in self . modules (): if isinstance ( m , nn . Conv2d ): n = m . kernel_size [ 0 ] * m . kernel_size [ 1 ] * m . out_channels m . weight . data . normal_ ( 0 , math . sqrt ( 2. / n )) elif isinstance ( m , nn . BatchNorm2d ): m . weight . data . fill_ ( 1 ) m . bias . data . zero_ () def _make_layer ( self , block , planes , blocks , stride = 1 ): downsample = None #-------------------------------------------------------------------# # \u5f53\u6a21\u578b\u9700\u8981\u8fdb\u884c\u9ad8\u548c\u5bbd\u7684\u538b\u7f29\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u7528\u5230\u6b8b\u5dee\u8fb9\u7684downsample #-------------------------------------------------------------------# if stride != 1 or self . inplanes != planes * block . expansion : downsample = nn . Sequential ( nn . Conv2d ( self . inplanes , planes * block . expansion , kernel_size = 1 , stride = stride , bias = False ), nn . BatchNorm2d ( planes * block . expansion ), ) layers = [] layers . append ( block ( self . inplanes , planes , stride , downsample )) self . inplanes = planes * block . expansion for i in range ( 1 , blocks ): layers . append ( block ( self . inplanes , planes )) return nn . Sequential ( * layers ) def forward ( self , x ): x = self . conv1 ( x ) x = self . bn1 ( x ) x = self . relu ( x ) x = self . maxpool ( x ) x = self . layer1 ( x ) x = self . layer2 ( x ) x = self . layer3 ( x ) x = self . layer4 ( x ) x = self . avgpool ( x ) x = x . view ( x . size ( 0 ), - 1 ) x = self . fc ( x ) return x \u200b ResNet \u7c7b\u901a\u8fc7\u8c03\u7528 _make_layer \u65b9\u6cd5\u6765\u6784\u5efa\u591a\u4e2a Bottleneck \u5757\uff0c\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u4e00\u4e2a\u5b8c\u6574\u7684ResNet\u6a21\u578b\u3002 ResNet \u7c7b\u662f\u6574\u4e2a\u6a21\u578b\u7684\u9aa8\u67b6\uff0c\u800c Bottleneck \u7c7b\u662f\u6a21\u578b\u4e2d\u7684\u57fa\u672c\u6a21\u5757\u3002\u901a\u8fc7\u4e0d\u540c\u7684\u5757\u7684\u5806\u53e0\uff0c\u53ef\u4ee5\u6784\u5efa\u4e0d\u540c\u6df1\u5ea6\u7684ResNet\u6a21\u578b\u3002 ResNet \u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6df1\u5ea6\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff0c\u800c Bottleneck \u662fResNet\u6a21\u578b\u4e2d\u7684\u4e00\u4e2a\u57fa\u672c\u6784\u5efa\u5757\u3002 \u200b Faster-RCNN\u7684\u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u90e8\u5206\u53ea\u5305\u542b\u4e86\u957f\u5bbd\u538b\u7f29\u4e86\u56db\u6b21\u7684\u5185\u5bb9\uff0c\u7b2c\u4e94\u6b21\u538b\u7f29\u540e\u7684\u5185\u5bb9\u5728ROI\u4e2d\u4f7f\u7528\u3002\u5373Faster-RCNN\u5728\u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u6240\u7528\u7684\u7f51\u7edc\u5c42\u5982\u56fe\u6240\u793a\u3002 \u4ee5\u8f93\u5165\u7684\u56fe\u7247\u4e3a600x600\u4e3a\u4f8b\uff0cshape\u53d8\u5316\u5982\u4e0b\uff1a \u4e09\u3001Proposal \u00b6 1.RegionProposalNetwork \u00b6 \u83b7\u5f97Proposal\u5efa\u8bae\u6846 \u200b \u4e3b\u5e72\u7f51\u7edc\u83b7\u5f97\u7684Feature Map\uff0c\u5176\u6709\u4e24\u4e2a\u5e94\u7528\uff0c\u4e00\u4e2a\u662f\u548cROIPooling\u7ed3\u5408\u4f7f\u7528\u3001\u53e6\u4e00\u4e2a\u662f\u8fdb\u884c\u4e00\u6b213x3\u7684\u5377\u79ef\u540e\uff0c\u8fdb\u884c\u4e00\u4e2a18\u901a\u9053\u76841x1\u5377\u79ef\uff0c\u8fd8\u6709\u4e00\u4e2a36\u901a\u9053\u76841x1\u5377\u79ef\u3002 \\(9\\times 4\\) \u5377\u79ef\uff1a \u7528\u4e8e\u9884\u6d4b feature map\u4e0a \u6bcf\u4e00\u4e2a\u7f51\u683c\u70b9\u4e0a \u6bcf\u4e00\u4e2a\u5148\u9a8c\u6846 \u7684\u53d8\u5316\u60c5\u51b5\u3002 \u56e0\u4e3aFaster-RCNN\u7684\u9884\u6d4b\u7ed3\u679c\u9700\u8981\u7ed3\u5408\u5148\u9a8c\u6846\u83b7\u5f97\u9884\u6d4b\u6846\uff0c\u9884\u6d4b\u7ed3\u679c\u5c31\u662f\u5148\u9a8c\u6846\u7684\u53d8\u5316\u60c5\u51b5\u3002 \\(9\\times2\\) \u5377\u79ef\uff1a \u7528\u4e8e\u9884\u6d4b feature map\u4e0a \u6bcf\u4e00\u4e2a\u7f51\u683c\u70b9\u4e0a \u6bcf\u4e00\u4e2a\u9884\u6d4b\u6846 \u5185\u90e8\u662f\u5426\u5305\u542b\u4e86\u7269\u4f53\uff0c \u5e8f\u53f7\u4e3a1\u7684\u5185\u5bb9\u4e3a\u5305\u542b\u7269\u4f53\u7684\u6982\u7387 \u3002 \u200b \u5f53\u6211\u4eec\u8f93\u5165\u7684\u56fe\u7247\u7684shape\u662f600x600x3\u7684\u65f6\u5019\uff0c\u516c\u7528\u7279\u5f81\u5c42\u7684shape\u5c31\u662f38x38x1024\uff0c\u76f8\u5f53\u4e8e\u628a\u8f93\u5165\u8fdb\u6765\u7684\u56fe\u50cf\u5206\u5272\u621038x38\u7684\u7f51\u683c\uff0c\u7136\u540e\u6bcf\u4e2a\u7f51\u683c\u5b58\u57289\u4e2a\u5148\u9a8c\u6846\uff0c\u8fd9\u4e9b\u5148\u9a8c\u6846\u6709\u4e0d\u540c\u7684\u5927\u5c0f\uff0c\u5728\u56fe\u50cf\u4e0a\u5bc6\u5bc6\u9ebb\u9ebb\u3002 \u200b \\(9\\times 4\\) \u7684\u5377\u79ef\u7684\u7ed3\u679c\u4f1a\u5bf9\u8fd9\u4e9b\u5148\u9a8c\u6846\u8fdb\u884c\u8c03\u6574\uff0c\u83b7\u5f97\u4e00\u4e2a\u65b0\u7684\u6846\u3002 \u200b \\(9 \\times 2\\) \u7684\u5377\u79ef\u4f1a\u5224\u65ad\u4e0a\u8ff0\u83b7\u5f97\u7684\u65b0\u6846\u662f\u5426\u5305\u542b\u7269\u4f53\u3002 \u200b \u5230\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u4e86\u4e00\u4e9b\u6709\u7528\u7684\u6846\uff0c\u8fd9\u4e9b\u6846\u4f1a\u5229\u75289 x 2\u7684\u5377\u79ef\u5224\u65ad\u662f\u5426\u5b58\u5728\u7269\u4f53\u3002\u5230\u6b64\u4e3a\u6b62\u8fd8\u53ea\u662f\u7c97\u7565\u7684\u4e00\u4e2a\u6846\u7684\u83b7\u53d6\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u5efa\u8bae\u6846\u3002\u7136\u540e\u6211\u4eec\u4f1a\u5728\u5efa\u8bae\u6846\u91cc\u9762\u7ee7\u7eed\u627e\u4e1c\u897f\u3002 \u6e90\u7801\uff1a class RegionProposalNetwork ( nn . Module ): def __init__ ( self , in_channels = 512 , mid_channels = 512 , ratios = [ 0.5 , 1 , 2 ], anchor_scales = [ 8 , 16 , 32 ], feat_stride = 16 , mode = \"training\" , ): super ( RegionProposalNetwork , self ) . __init__ () #-----------------------------------------# # \u751f\u6210\u57fa\u7840\u5148\u9a8c\u6846\uff0cshape\u4e3a[9, 4] #-----------------------------------------# self . anchor_base = generate_anchor_base ( anchor_scales = anchor_scales , ratios = ratios ) n_anchor = self . anchor_base . shape [ 0 ] #-----------------------------------------# # \u5148\u8fdb\u884c\u4e00\u4e2a3x3\u7684\u5377\u79ef\uff0c\u53ef\u7406\u89e3\u4e3a\u7279\u5f81\u6574\u5408 #-----------------------------------------# self . conv1 = nn . Conv2d ( in_channels , mid_channels , 3 , 1 , 1 ) #-----------------------------------------# # \u5206\u7c7b\u9884\u6d4b\u5148\u9a8c\u6846\u5185\u90e8\u662f\u5426\u5305\u542b\u7269\u4f53 #-----------------------------------------# self . score = nn . Conv2d ( mid_channels , n_anchor * 2 , 1 , 1 , 0 ) #-----------------------------------------# # \u56de\u5f52\u9884\u6d4b\u5bf9\u5148\u9a8c\u6846\u8fdb\u884c\u8c03\u6574 #-----------------------------------------# self . loc = nn . Conv2d ( mid_channels , n_anchor * 4 , 1 , 1 , 0 ) #-----------------------------------------# # \u7279\u5f81\u70b9\u95f4\u8ddd\u6b65\u957f #-----------------------------------------# self . feat_stride = feat_stride #-----------------------------------------# # \u7528\u4e8e\u5bf9\u5efa\u8bae\u6846\u89e3\u7801\u5e76\u8fdb\u884c\u975e\u6781\u5927\u6291\u5236 #-----------------------------------------# self . proposal_layer = ProposalCreator ( mode ) #--------------------------------------# # \u5bf9FPN\u7684\u7f51\u7edc\u90e8\u5206\u8fdb\u884c\u6743\u503c\u521d\u59cb\u5316 #--------------------------------------# normal_init ( self . conv1 , 0 , 0.01 ) normal_init ( self . score , 0 , 0.01 ) normal_init ( self . loc , 0 , 0.01 ) def forward ( self , x , img_size , scale = 1. ): n , _ , h , w = x . shape #-----------------------------------------# # \u5148\u8fdb\u884c\u4e00\u4e2a3x3\u7684\u5377\u79ef\uff0c\u53ef\u7406\u89e3\u4e3a\u7279\u5f81\u6574\u5408 #-----------------------------------------# x = F . relu ( self . conv1 ( x )) #-----------------------------------------# # \u56de\u5f52\u9884\u6d4b\u5bf9\u5148\u9a8c\u6846\u8fdb\u884c\u8c03\u6574 #-----------------------------------------# rpn_locs = self . loc ( x ) rpn_locs = rpn_locs . permute ( 0 , 2 , 3 , 1 ) . contiguous () . view ( n , - 1 , 4 ) #-----------------------------------------# # \u5206\u7c7b\u9884\u6d4b\u5148\u9a8c\u6846\u5185\u90e8\u662f\u5426\u5305\u542b\u7269\u4f53 #-----------------------------------------# rpn_scores = self . score ( x ) rpn_scores = rpn_scores . permute ( 0 , 2 , 3 , 1 ) . contiguous () . view ( n , - 1 , 2 ) #-------------------------------------------------------------------------------# # \u8fdb\u884csoftmax\u6982\u7387\u8ba1\u7b97\uff0c\u6bcf\u4e2a\u5148\u9a8c\u6846\u53ea\u6709\u4e24\u4e2a\u5224\u522b\u7ed3\u679c # \u5185\u90e8\u5305\u542b\u7269\u4f53\u6216\u8005\u5185\u90e8\u4e0d\u5305\u542b\u7269\u4f53\uff0crpn_softmax_scores[:, :, 1]\u7684\u5185\u5bb9\u4e3a\u5305\u542b\u7269\u4f53\u7684\u6982\u7387 #-------------------------------------------------------------------------------# rpn_softmax_scores = F . softmax ( rpn_scores , dim =- 1 ) rpn_fg_scores = rpn_softmax_scores [:, :, 1 ] . contiguous () rpn_fg_scores = rpn_fg_scores . view ( n , - 1 ) #-------------------------------------------------------------------------------# # \u751f\u6210\u5148\u9a8c\u6846\uff0c\u6b64\u65f6\u83b7\u5f97\u7684anchor\u662f\u5e03\u6ee1\u7f51\u683c\u70b9\u7684\uff0c\u5f53\u8f93\u5165\u56fe\u7247\u4e3a600,600,3\u7684\u65f6\u5019\uff0cshape\u4e3a(12996, 4) #-------------------------------------------------------------------------------# anchor = _enumerate_shifted_anchor ( np . array ( self . anchor_base ), self . feat_stride , h , w ) rois = list () roi_indices = list () for i in range ( n ): roi = self . proposal_layer ( rpn_locs [ i ], rpn_fg_scores [ i ], anchor , img_size , scale = scale ) batch_index = i * torch . ones (( len ( roi ),)) rois . append ( roi . unsqueeze ( 0 )) roi_indices . append ( batch_index . unsqueeze ( 0 )) rois = torch . cat ( rois , dim = 0 ) . type_as ( x ) roi_indices = torch . cat ( roi_indices , dim = 0 ) . type_as ( x ) anchor = torch . from_numpy ( anchor ) . unsqueeze ( 0 ) . float () . to ( x . device ) return rpn_locs , rpn_scores , rois , roi_indices , anchor \u6839\u636e\u8fd9\u6bb5\u4ee3\u7801\uff0c\u53ef\u4ee5\u751f\u6210\u4ee5\u4e0b\u601d\u7ef4\u5bfc\u56fe\u5927\u7eb2\uff1a RegionProposalNetwork\u7c7b \u521d\u59cb\u5316\u65b9\u6cd5\uff1a init (self, in_channels=512, mid_channels=512, ratios=[0.5, 1, 2], anchor_scales=[8, 16, 32], feat_stride=16, mode=\"training\") \u521b\u5efa\u57fa\u7840\u5148\u9a8c\u6846anchor_base\uff0c\u5f62\u72b6\u4e3a[9, 4] \u83b7\u53d6\u5148\u9a8c\u6846\u7684\u6570\u91cfn_anchor \u521b\u5efa\u5377\u79ef\u5c42conv1\uff0c\u8f93\u5165\u901a\u9053\u6570\u4e3ain_channels\uff0c\u8f93\u51fa\u901a\u9053\u6570\u4e3amid_channels\uff0c\u5377\u79ef\u6838\u5927\u5c0f\u4e3a3\uff0c\u6b65\u957f\u4e3a1\uff0c\u586b\u5145\u4e3a1 \u521b\u5efa\u5206\u7c7b\u9884\u6d4b\u5c42score\uff0c\u8f93\u5165\u901a\u9053\u6570\u4e3amid_channels\uff0c\u8f93\u51fa\u901a\u9053\u6570\u4e3an_anchor * 2\uff0c\u5377\u79ef\u6838\u5927\u5c0f\u4e3a1\uff0c\u6b65\u957f\u4e3a1\uff0c\u586b\u5145\u4e3a0 \u521b\u5efa\u56de\u5f52\u9884\u6d4b\u5c42loc\uff0c\u8f93\u5165\u901a\u9053\u6570\u4e3amid_channels\uff0c\u8f93\u51fa\u901a\u9053\u6570\u4e3an_anchor * 4\uff0c\u5377\u79ef\u6838\u5927\u5c0f\u4e3a1\uff0c\u6b65\u957f\u4e3a1\uff0c\u586b\u5145\u4e3a0 \u8bbe\u7f6e\u7279\u5f81\u70b9\u95f4\u8ddd\u6b65\u957ffeat_stride \u521b\u5efaProposalCreator\u5bf9\u8c61proposal_layer\uff0c\u7528\u4e8e\u5bf9\u5efa\u8bae\u6846\u8fdb\u884c\u89e3\u7801\u548c\u975e\u6781\u5927\u6291\u5236 \u5bf9conv1\u3001score\u3001loc\u7684\u6743\u503c\u8fdb\u884c\u521d\u59cb\u5316 \u524d\u5411\u4f20\u64ad\u65b9\u6cd5\uff1aforward(self, x, img_size, scale=1.) \u83b7\u53d6\u8f93\u5165\u7279\u5f81\u56fex\u7684\u5f62\u72b6 \u7ecf\u8fc7\u5377\u79ef\u5c42conv1\u5e76\u4f7f\u7528ReLU\u6fc0\u6d3b\u51fd\u6570 \u7ecf\u8fc7\u56de\u5f52\u9884\u6d4b\u5c42loc\uff0c\u5e76\u8c03\u6574\u5f62\u72b6 \u7ecf\u8fc7\u5206\u7c7b\u9884\u6d4b\u5c42score\uff0c\u5e76\u8c03\u6574\u5f62\u72b6 \u5bf9\u5206\u7c7b\u9884\u6d4b\u5f97\u5206\u8fdb\u884csoftmax\u6982\u7387\u8ba1\u7b97\uff0c\u5f97\u5230\u5305\u542b\u7269\u4f53\u7684\u6982\u7387rpn_fg_scores \u751f\u6210\u5148\u9a8c\u6846anchor\uff0c\u5e76\u8fdb\u884c\u504f\u79fb\u3001\u7f29\u653e\u7b49\u8c03\u6574 \u4f7f\u7528ProposalCreator\u5bf9\u5148\u9a8c\u6846\u8fdb\u884c\u89e3\u7801\u548c\u975e\u6781\u5927\u6291\u5236\uff0c\u5f97\u5230\u5efa\u8bae\u6846rois\u548c\u5bf9\u5e94\u7684\u56fe\u50cf\u7d22\u5f15roi_indices \u8fd4\u56derpn_locs\u3001rpn_scores\u3001rois\u3001roi_indices\u548canchor #-----------------------------------------# # \u5148\u8fdb\u884c\u4e00\u4e2a3x3\u7684\u5377\u79ef\uff0c\u53ef\u7406\u89e3\u4e3a\u7279\u5f81\u6574\u5408 #-----------------------------------------# self . conv1 = nn . Conv2d ( in_channels , mid_channels , 3 , 1 , 1 ) #-----------------------------------------# # \u5206\u7c7b\u9884\u6d4b\u5148\u9a8c\u6846\u5185\u90e8\u662f\u5426\u5305\u542b\u7269\u4f53 #-----------------------------------------# self . score = nn . Conv2d ( mid_channels , n_anchor * 2 , 1 , 1 , 0 ) #-----------------------------------------# # \u56de\u5f52\u9884\u6d4b\u5bf9\u5148\u9a8c\u6846\u8fdb\u884c\u8c03\u6574 #-----------------------------------------# self . loc = nn . Conv2d ( mid_channels , n_anchor * 4 , 1 , 1 , 0 ) n , _ , h , w = x . shape #-----------------------------------------# # \u5148\u8fdb\u884c\u4e00\u4e2a3x3\u7684\u5377\u79ef\uff0c\u53ef\u7406\u89e3\u4e3a\u7279\u5f81\u6574\u5408 #-----------------------------------------# x = F . relu ( self . conv1 ( x )) #-----------------------------------------# # \u56de\u5f52\u9884\u6d4b\u5bf9\u5148\u9a8c\u6846\u8fdb\u884c\u8c03\u6574 #-----------------------------------------# rpn_locs = self . loc ( x ) rpn_locs = rpn_locs . permute ( 0 , 2 , 3 , 1 ) . contiguous () . view ( n , - 1 , 4 ) ''' \u4ee5\u4e0b\u662f\u5bf9\u4ee3\u7801rpn_locs.permute(0, 2, 3, 1).contiguous().view(n, -1, 4)\u4e2d\u6bcf\u4e00\u6b65\u64cd\u4f5c\u7684\u89e3\u91ca\uff1a rpn_locs.permute(0, 2, 3, 1): \u8fd9\u4e00\u6b65\u901a\u8fc7\u8c03\u7528permute\u51fd\u6570\u5bf9rpn_locs\u8fdb\u884c\u7ef4\u5ea6\u7f6e\u6362\u64cd\u4f5c\u3002\u4f7f\u7528\u53c2\u6570(0, 2, 3, 1)\u5c06\u539f\u59cb\u7684\u7ef4\u5ea6\u987a\u5e8f(batch_size, channels, height, width)\u53d8\u6362\u4e3a(batch_size, height, width, channels)\u3002\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u540e\u7eed\u7684contiguous\u64cd\u4f5c\u505a\u51c6\u5907\u3002 contiguous(): \u8fd9\u4e00\u6b65\u8c03\u7528contiguous\u51fd\u6570\uff0c\u5c06\u91cd\u65b0\u6392\u5217\u7ef4\u5ea6\u540e\u7684rpn_locs\u5f20\u91cf\u53d8\u4e3a\u8fde\u7eed\u7684\u5185\u5b58\u5e03\u5c40\u3002\u56e0\u4e3a\u5728\u8fdb\u884cview\u64cd\u4f5c\u4e4b\u524d\uff0c\u9700\u8981\u4fdd\u8bc1\u5f20\u91cf\u662f\u8fde\u7eed\u7684\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u9519\u8bef\u3002 view(n, -1, 4): \u8fd9\u4e00\u6b65\u8c03\u7528view\u51fd\u6570\uff0c\u5c06rpn_locs\u5f20\u91cf\u8fdb\u884c\u5f62\u72b6\u53d8\u6362\u3002\u53c2\u6570(n, -1, 4)\u4e2d\uff0cn\u8868\u793abatch\u5927\u5c0f\uff0c-1\u8868\u793a\u81ea\u52a8\u8ba1\u7b97\u8be5\u7ef4\u5ea6\u7684\u5927\u5c0f\uff0c4\u8868\u793a\u6bcf\u4e2a\u5148\u9a8c\u6846\u7684\u56de\u5f52\u9884\u6d4b\u7ed3\u679c\u7684\u7ef4\u5ea6\u3002\u8fd9\u6837\u64cd\u4f5c\u7684\u76ee\u7684\u662f\u5c06rpn_locs\u4ece\u539f\u59cb\u7684\u5f62\u72b6(batch_size, height, width, channels)\u53d8\u6362\u4e3a\u5f62\u72b6\u4e3a(batch_size, -1, 4)\u7684\u5f20\u91cf\uff0c\u7b2c\u4e8c\u7ef4\u5ea6\u7684\u5185\u5bb9\u53d8\u4e3a\u4e86\u6bcf\u4e00\u4e2a\u5148\u9a8c\u6846\uff0c\u5176\u4e2d-1\u7684\u5927\u5c0f\u4f1a\u6839\u636e\u5176\u4ed6\u7ef4\u5ea6\u7684\u5927\u5c0f\u81ea\u52a8\u8ba1\u7b97\u3002 \u7efc\u5408\u8d77\u6765\uff0c\u4e0a\u8ff0\u4ee3\u7801\u7684\u4f5c\u7528\u662f\u5c06rpn_locs\u5f20\u91cf\u8fdb\u884c\u7ef4\u5ea6\u7f6e\u6362\u3001\u5185\u5b58\u8fde\u7eed\u5316\u548c\u5f62\u72b6\u53d8\u6362\u64cd\u4f5c\uff0c\u6700\u7ec8\u5f97\u5230\u5f62\u72b6\u4e3a(batch_size, -1, 4)\u7684\u5f20\u91cf\u3002\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u8868\u793a\u4e00\u4e2a\u5148\u9a8c\u6846\u7684\u56de\u5f52\u9884\u6d4b\u7ed3\u679c\uff0c\u5177\u67094\u4e2a\u503c\u7528\u4e8e\u8868\u793a\u5750\u6807\u504f\u79fb\u91cf\u3002 ''' #-------------------------------------------------------------------------------# # \u8fdb\u884csoftmax\u6982\u7387\u8ba1\u7b97\uff0c\u6bcf\u4e2a\u5148\u9a8c\u6846\u53ea\u6709\u4e24\u4e2a\u5224\u522b\u7ed3\u679c # \u5185\u90e8\u5305\u542b\u7269\u4f53\u6216\u8005\u5185\u90e8\u4e0d\u5305\u542b\u7269\u4f53\uff0crpn_softmax_scores[:, :, 1]\u7684\u5185\u5bb9\u4e3a\u5305\u542b\u7269\u4f53\u7684\u6982\u7387 #-------------------------------------------------------------------------------# rpn_softmax_scores = F . softmax ( rpn_scores , dim =- 1 ) rpn_fg_scores = rpn_softmax_scores [:, :, 1 ] . contiguous () rpn_fg_scores = rpn_fg_scores . view ( n , - 1 ) ''' \u4e0a\u8ff0\u4ee3\u7801\u7247\u6bb5\u7684\u4f5c\u7528\u662f\u5bf9\u5206\u7c7b\u9884\u6d4b\u7ed3\u679c\u8fdb\u884csoftmax\u6982\u7387\u8ba1\u7b97\uff0c\u4ee5\u53ca\u63d0\u53d6\u5305\u542b\u7269\u4f53\u7684\u6982\u7387\u3002 F.softmax(rpn_scores, dim=-1): \u8fd9\u4e00\u884c\u4ee3\u7801\u4f7f\u7528F.softmax\u51fd\u6570\u5bf9rpn_scores\u8fdb\u884csoftmax\u6982\u7387\u8ba1\u7b97\u3002rpn_scores\u662f\u5206\u7c7b\u9884\u6d4b\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u5b83\u7684\u5f62\u72b6\u4e3a(batch_size, num_anchors, 2)\uff0c\u5176\u4e2d2\u8868\u793a\u4e24\u4e2a\u5224\u522b\u7ed3\u679c\uff08\u5185\u90e8\u5305\u542b\u7269\u4f53\u6216\u8005\u5185\u90e8\u4e0d\u5305\u542b\u7269\u4f53\uff09\u3002softmax\u51fd\u6570\u5c06\u6bcf\u4e2a\u5148\u9a8c\u6846\u7684\u4e24\u4e2a\u5224\u522b\u7ed3\u679c\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6982\u7387\u5206\u5e03\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5224\u522b\u7ed3\u679c\u7684\u503c\u4ecb\u4e8e0\u548c1\u4e4b\u95f4\uff0c\u5e76\u4e14\u6240\u6709\u503c\u7684\u548c\u4e3a1\u3002 rpn_softmax_scores[:, :, 1].contiguous(): \u8fd9\u4e00\u884c\u4ee3\u7801\u63d0\u53d6\u4e86\u7ecf\u8fc7softmax\u6982\u7387\u8ba1\u7b97\u540e\u7684\u7ed3\u679c\u4e2d\uff0c\u8868\u793a\u5305\u542b\u7269\u4f53\u7684\u6982\u7387\u503c\u3002rpn_softmax_scores\u7684\u5f62\u72b6\u4e3a(batch_size, num_anchors, 2)\uff0c\u901a\u8fc7\u4f7f\u7528\u7d22\u5f15[:, :, 1]\u5c06\u5305\u542b\u7269\u4f53\u7684\u6982\u7387\u503c\u63d0\u53d6\u51fa\u6765\u3002\u7ed3\u679c\u662f\u4e00\u4e2a\u5f62\u72b6\u4e3a(batch_size, num_anchors)\u7684\u5f20\u91cf\u3002 rpn_fg_scores.view(n, -1): \u8fd9\u4e00\u884c\u4ee3\u7801\u5bf9\u63d0\u53d6\u51fa\u6765\u7684\u5305\u542b\u7269\u4f53\u7684\u6982\u7387\u503c\u8fdb\u884c\u5f62\u72b6\u53d8\u6362\u3002rpn_fg_scores\u7684\u5f62\u72b6\u4e3a(batch_size, num_anchors)\uff0c\u901a\u8fc7\u8c03\u7528view\u51fd\u6570\uff0c\u5c06\u5176\u53d8\u6362\u4e3a\u5f62\u72b6\u4e3a(n, -1)\u7684\u5f20\u91cf\uff0c\u5176\u4e2dn\u8868\u793abatch\u5927\u5c0f\uff0c-1\u8868\u793a\u81ea\u52a8\u8ba1\u7b97\u8be5\u7ef4\u5ea6\u7684\u5927\u5c0f\u3002\u8fd9\u6837\u64cd\u4f5c\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u65b9\u4fbf\u540e\u7eed\u5904\u7406\u3002 \u7efc\u5408\u8d77\u6765\uff0c\u4e0a\u8ff0\u4ee3\u7801\u7684\u4f5c\u7528\u662f\u5bf9\u5206\u7c7b\u9884\u6d4b\u7ed3\u679c\u8fdb\u884csoftmax\u6982\u7387\u8ba1\u7b97\uff0c\u63d0\u53d6\u51fa\u8868\u793a\u5305\u542b\u7269\u4f53\u7684\u6982\u7387\u503c\uff0c\u5e76\u5c06\u5176\u8fdb\u884c\u5f62\u72b6\u53d8\u6362\uff0c\u5f97\u5230\u5f62\u72b6\u4e3a(n, -1)\u7684\u5f20\u91cf\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u8868\u793a\u4e00\u4e2a\u5148\u9a8c\u6846\u5185\u90e8\u5305\u542b\u7269\u4f53\u7684\u6982\u7387\u503c\u3002 ''' 2.Proposal\u5efa\u8bae\u6846\u7684\u89e3\u7801 \u00b6 \u5148\u9a8c\u6846 \u8c03\u7528 anchors.py \u7ed3\u679c \u5efa\u8bae\u6846\u751f\u6210\u8fc7\u7a0b \u83b7\u5f97\u5efa\u8bae\u6846\u7f51\u7edc\u7684\u9884\u6d4b\u7ed3\u679c \\(rpn.py \\rightarrow RegionProposalNetwork \\rightarrow forward\\) n , _ , h , w = x . shape #-----------------------------------------# # \u5148\u8fdb\u884c\u4e00\u4e2a3x3\u7684\u5377\u79ef\uff0c\u53ef\u7406\u89e3\u4e3a\u7279\u5f81\u6574\u5408 #-----------------------------------------# x = F . relu ( self . conv1 ( x )) #-----------------------------------------# # \u56de\u5f52\u9884\u6d4b\u5bf9\u5148\u9a8c\u6846\u8fdb\u884c\u8c03\u6574 #-----------------------------------------# rpn_locs = self . loc ( x ) rpn_locs = rpn_locs . permute ( 0 , 2 , 3 , 1 ) . contiguous () . view ( n , - 1 , 4 ) #-----------------------------------------# # \u5206\u7c7b\u9884\u6d4b\u5148\u9a8c\u6846\u5185\u90e8\u662f\u5426\u5305\u542b\u7269\u4f53 #-----------------------------------------# rpn_scores = self . score ( x ) rpn_scores = rpn_scores . permute ( 0 , 2 , 3 , 1 ) . contiguous () . view ( n , - 1 , 2 ) #----------------------------------------------------------------------------# # \u8fdb\u884csoftmax\u6982\u7387\u8ba1\u7b97\uff0c\u6bcf\u4e2a\u5148\u9a8c\u6846\u53ea\u6709\u4e24\u4e2a\u5224\u522b\u7ed3\u679c # \u5185\u90e8\u5305\u542b\u7269\u4f53\u6216\u8005\u5185\u90e8\u4e0d\u5305\u542b\u7269\u4f53\uff0crpn_softmax_scores[:, :, 1]\u7684\u5185\u5bb9\u4e3a\u5305\u542b\u7269\u4f53\u7684\u6982\u7387 #----------------------------------------------------------------------------# rpn_softmax_scores = F . softmax ( rpn_scores , dim =- 1 ) rpn_fg_scores = rpn_softmax_scores [:, :, 1 ] . contiguous () rpn_fg_scores = rpn_fg_scores . view ( n , - 1 ) \u751f\u6210\u5148\u9a8c\u6846 #----------------------------------------------------------------------------# # \u751f\u6210\u5148\u9a8c\u6846\uff0c\u6b64\u65f6\u83b7\u5f97\u7684anchor\u662f\u5e03\u6ee1\u7f51\u683c\u70b9\u7684\uff0c\u5f53\u8f93\u5165\u56fe\u7247\u4e3a600,600,3\u7684\u65f6\u5019\uff0cshape\u4e3a(12996, 4) #----------------------------------------------------------------------------# anchor = _enumerate_shifted_anchor ( np . array ( self . anchor_base ), self . feat_stride , h , w ) \u5229\u7528\u5efa\u8bae\u6846\u7f51\u7edc\u5bf9\u5148\u9a8c\u6846\u8fdb\u884c\u8c03\u6574\uff0c\u518d\u8fdb\u884c\u7b5b\u9009\uff0c\u83b7\u5f97\u6700\u7ec8\u7684\u5efa\u8bae\u6846 \u901a\u8fc7\u7b2c\u4e8c\u6b65\u6211\u4eec\u83b7\u5f97\u4e8638x38x9\u4e2a\u5148\u9a8c\u6846\u7684\u9884\u6d4b\u7ed3\u679c\u3002\u9884\u6d4b\u7ed3\u679c\u5305\u542b\u4e24\u90e8\u5206\u3002 9 x 4\u7684\u5377\u79ef \u7528\u4e8e\u9884\u6d4b \u516c\u7528\u7279\u5f81\u5c42\u4e0a \u6bcf\u4e00\u4e2a\u7f51\u683c\u70b9\u4e0a \u6bcf\u4e00\u4e2a\u5148\u9a8c\u6846 \u7684\u53d8\u5316\u60c5\u51b5\u3002 9 x 2\u7684\u5377\u79ef \u7528\u4e8e\u9884\u6d4b \u516c\u7528\u7279\u5f81\u5c42\u4e0a \u6bcf\u4e00\u4e2a\u7f51\u683c\u70b9\u4e0a \u6bcf\u4e00\u4e2a\u9884\u6d4b\u6846 \u5185\u90e8\u662f\u5426\u5305\u542b\u4e86\u7269\u4f53\u3002 \u76f8\u5f53\u4e8e\u5c31\u662f\u5c06\u6574\u4e2a\u56fe\u50cf\u5206\u621038x38\u4e2a\u7f51\u683c\uff1b\u7136\u540e\u4ece\u6bcf\u4e2a\u7f51\u683c\u4e2d\u5fc3\u5efa\u7acb9\u4e2a\u5148\u9a8c\u6846\uff0c\u4e00\u517138x38x9\u4e2a\uff0c12996\u4e2a\u5148\u9a8c\u6846\u3002 \u5f53\u8f93\u5165\u56fe\u50cfshape\u4e0d\u540c\u65f6\uff0c\u5148\u9a8c\u6846\u7684\u6570\u91cf\u4e5f\u4f1a\u53d1\u751f\u6539\u53d8\u3002 \u5148\u9a8c\u6846\u867d\u7136\u53ef\u4ee5\u4ee3\u8868\u4e00\u5b9a\u7684 \u6846\u7684\u4f4d\u7f6e\u4fe1\u606f\u4e0e\u6846\u7684\u5927\u5c0f\u4fe1\u606f \uff0c\u4f46\u662f\u5176\u662f\u6709\u9650\u7684\uff0c\u65e0\u6cd5\u8868\u793a\u4efb\u610f\u60c5\u51b5\uff0c\u56e0\u6b64\u8fd8\u9700\u8981\u8c03\u6574\u3002 9 x 4\u4e2d\u76849\u8868\u793a\u4e86\u8fd9\u4e2a\u7f51\u683c\u70b9\u6240\u5305\u542b\u7684\u5148\u9a8c\u6846\u6570\u91cf\uff0c\u5176\u4e2d\u76844\u8868\u793a\u4e86\u6846\u7684\u4e2d\u5fc3\u4e0e\u957f\u5bbd\u7684\u8c03\u6574\u60c5\u51b5\u3002 \u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b\uff1a class ProposalCreator (): def __init__ ( self , mode , nms_iou = 0.7 , n_train_pre_nms = 12000 , n_train_post_nms = 600 , n_test_pre_nms = 3000 , n_test_post_nms = 300 , min_size = 16 ): #-----------------------------------# # \u8bbe\u7f6e\u9884\u6d4b\u8fd8\u662f\u8bad\u7ec3 #-----------------------------------# self . mode = mode #-----------------------------------# # \u5efa\u8bae\u6846\u975e\u6781\u5927\u6291\u5236\u7684iou\u5927\u5c0f #-----------------------------------# self . nms_iou = nms_iou #-----------------------------------# # \u8bad\u7ec3\u7528\u5230\u7684\u5efa\u8bae\u6846\u6570\u91cf #-----------------------------------# self . n_train_pre_nms = n_train_pre_nms self . n_train_post_nms = n_train_post_nms #-----------------------------------# # \u9884\u6d4b\u7528\u5230\u7684\u5efa\u8bae\u6846\u6570\u91cf #-----------------------------------# self . n_test_pre_nms = n_test_pre_nms self . n_test_post_nms = n_test_post_nms self . min_size = min_size def __call__ ( self , loc , score , anchor , img_size , scale = 1. ): if self . mode == \"training\" : n_pre_nms = self . n_train_pre_nms n_post_nms = self . n_train_post_nms else : n_pre_nms = self . n_test_pre_nms n_post_nms = self . n_test_post_nms #-----------------------------------# # \u5c06\u5148\u9a8c\u6846\u8f6c\u6362\u6210tensor #-----------------------------------# anchor = torch . from_numpy ( anchor ) if loc . is_cuda : anchor = anchor . cuda () #-----------------------------------# # \u5c06RPN\u7f51\u7edc\u9884\u6d4b\u7ed3\u679c\u8f6c\u5316\u6210\u5efa\u8bae\u6846 #-----------------------------------# roi = loc2bbox ( anchor , loc ) #-----------------------------------# # \u9632\u6b62\u5efa\u8bae\u6846\u8d85\u51fa\u56fe\u50cf\u8fb9\u7f18 #-----------------------------------# roi [:, [ 0 , 2 ]] = torch . clamp ( roi [:, [ 0 , 2 ]], min = 0 , max = img_size [ 1 ]) roi [:, [ 1 , 3 ]] = torch . clamp ( roi [:, [ 1 , 3 ]], min = 0 , max = img_size [ 0 ]) #-----------------------------------# # \u5efa\u8bae\u6846\u7684\u5bbd\u9ad8\u7684\u6700\u5c0f\u503c\u4e0d\u53ef\u4ee5\u5c0f\u4e8e16 #-----------------------------------# min_size = self . min_size * scale keep = torch . where ((( roi [:, 2 ] - roi [:, 0 ]) >= min_size ) & (( roi [:, 3 ] - roi [:, 1 ]) >= min_size ))[ 0 ] #-----------------------------------# # \u5c06\u5bf9\u5e94\u7684\u5efa\u8bae\u6846\u4fdd\u7559\u4e0b\u6765 #-----------------------------------# roi = roi [ keep , :] score = score [ keep ] #-----------------------------------# # \u6839\u636e\u5f97\u5206\u8fdb\u884c\u6392\u5e8f\uff0c\u53d6\u51fa\u5efa\u8bae\u6846 #-----------------------------------# order = torch . argsort ( score , descending = True ) if n_pre_nms > 0 : order = order [: n_pre_nms ] roi = roi [ order , :] score = score [ order ] #-----------------------------------# # \u5bf9\u5efa\u8bae\u6846\u8fdb\u884c\u975e\u6781\u5927\u6291\u5236 # \u4f7f\u7528\u5b98\u65b9\u7684\u975e\u6781\u5927\u6291\u5236\u4f1a\u5feb\u975e\u5e38\u591a #-----------------------------------# keep = nms ( roi , score , self . nms_iou ) keep = keep [: n_post_nms ] roi = roi [ keep ] return roi 3.\u5c0f\u7ed3 \u00b6 \u5efa\u8bae\u6846\u662f\u7528\u4e8e\u521d\u6b65\u7b5b\u9009\u56fe\u50cf\u4e2d\u54ea\u4e9b\u533a\u57df\u53ef\u80fd\u542b\u6709\u7269\u4f53\u7684\u4e00\u79cd\u6280\u672f\u3002 \u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u516c\u7528\u7279\u5f81\u5c42\uff0c\u5f53\u8f93\u5165\u56fe\u7247\u4e3a600x600x3\u65f6\uff0c\u5176\u5f62\u72b6\u4e3a38x38x1024\u3002 \u516c\u7528\u7279\u5f81\u5c42\u4e2d\u768438x38\u5bf9\u5e94\u7740\u56fe\u50cf\u4e2d\u768438x38\u4e2a\u533a\u57df\uff0c\u5176\u4e2d\u6bcf\u4e2a\u70b9\u76f8\u5f53\u4e8e\u8be5\u533a\u57df\u5185\u6240\u6709\u7279\u5f81\u7684\u6c47\u603b\u3002 \u5efa\u8bae\u6846\u5bf9\u8fd938x38\u4e2a\u533a\u57df\u8fdb\u884c\u622a\u53d6\uff0c\u5373\u8ba4\u4e3a\u8fd9\u4e9b\u533a\u57df\u53ef\u80fd\u5305\u542b\u76ee\u6807\uff0c\u5e76\u5c06\u622a\u53d6\u7684\u7ed3\u679c\u8fdb\u884cresize\uff0c\u8c03\u6574\u4e3a14x14x1024\u7684\u5927\u5c0f\u3002 \u5bf9\u6bcf\u4e2a\u5efa\u8bae\u6846\u518d\u6b21\u8fdb\u884cResNet\u539f\u6709\u7684\u7b2c\u4e94\u6b21\u538b\u7f29\u3002\u538b\u7f29\u5b8c\u6210\u540e\u8fdb\u884c\u5e73\u5747\u6c60\u5316\u548c\u5c55\u5e73\u64cd\u4f5c\uff0c\u6700\u540e\u5206\u522b\u8fdb\u884c\u4e00\u4e2anum_classes\u7684\u5168\u8fde\u63a5\u5c42\u548c(num_classes)x4\u7684\u5168\u8fde\u63a5\u5c42\u3002 num_classes\u7684\u5168\u8fde\u63a5\u5c42\u7528\u4e8e\u5bf9\u6700\u540e\u83b7\u5f97\u7684\u6846\u8fdb\u884c\u5206\u7c7b\uff0c\u800c(num_classes)x4\u7684\u5168\u8fde\u63a5\u5c42\u7528\u4e8e\u5bf9\u76f8\u5e94\u7684\u5efa\u8bae\u6846\u8fdb\u884c\u8c03\u6574\u3002 \u901a\u8fc7\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u53ef\u4ee5\u83b7\u5f97\u6240\u6709\u5efa\u8bae\u6846\u7684\u8c03\u6574\u60c5\u51b5\u4ee5\u53ca\u8fd9\u4e9b\u5efa\u8bae\u6846\u5185\u7269\u4f53\u7684\u7c7b\u522b\u3002 \u5b9e\u9645\u4e0a\uff0c\u4e0a\u4e00\u6b65\u5f97\u5230\u7684\u5efa\u8bae\u6846\u5c31\u662fROI\uff08\u611f\u5174\u8da3\u533a\u57df\uff09\u7684\u5148\u9a8c\u6846\u3002 \u56db\u3001RoiPooling \u00b6 \u200b \u5bf9Proposal\u5efa\u8bae\u6846\u52a0\u4ee5\u5229\u7528\u7684\u8fc7\u7a0b\u4e0eshape\u53d8\u5316\u5982\u56fe\u6240\u793a,\u5efa\u8bae\u6846\u8c03\u6574\u540e\u7684\u7ed3\u679c\u5c31\u662f\u6700\u7ec8\u7684\u9884\u6d4b\u7ed3\u679c\u4e86\uff0c\u53ef\u4ee5\u5728\u56fe\u4e0a\u8fdb\u884c\u7ed8\u753b\u4e86\u3002 RoiPooling\u5c42\u5de5\u4f5c \u00b6 \u200b \u5c06proposal feature map\u8fdb\u884c\u5206\u533a\u57df\uff0c\u7136\u540e\u5bf9\u6bcf\u4e00\u4e2a\u533a\u57df\u5404\u81ea\u8fdb\u884c\u6700\u5927\u6c60\u5316\u5f97\u5230 \\(2 \\times 2\\) \u7684\u7279\u5f81\u56fe2\u3002\u5728faster-rcnn\u4e2d\u662f\u5c06proposal feature map\u5206\u5272\u6210 \\(14 \\times 14\\) \u7684\u533a\u57df \u56fe\u7247\u6d4b\u8bd5\u4fe1\u606f\u6253\u5370 \u6e90\u7801 classifier.py class Resnet50RoIHead ( nn . Module ): def __init__ ( self , n_class , roi_size , spatial_scale , classifier ): super ( Resnet50RoIHead , self ) . __init__ () self . classifier = classifier #--------------------------------------# # \u5bf9ROIPooling\u540e\u7684\u7684\u7ed3\u679c\u8fdb\u884c\u56de\u5f52\u9884\u6d4b #--------------------------------------# self . cls_loc = nn . Linear ( 2048 , n_class * 4 ) #-----------------------------------# # \u5bf9ROIPooling\u540e\u7684\u7684\u7ed3\u679c\u8fdb\u884c\u5206\u7c7b #-----------------------------------# self . score = nn . Linear ( 2048 , n_class ) #-----------------------------------# # \u6743\u503c\u521d\u59cb\u5316 #-----------------------------------# normal_init ( self . cls_loc , 0 , 0.001 ) normal_init ( self . score , 0 , 0.01 ) self . roi = RoIPool (( roi_size , roi_size ), spatial_scale ) def forward ( self , x , rois , roi_indices , img_size ): n , _ , _ , _ = x . shape if x . is_cuda : roi_indices = roi_indices . cuda () rois = rois . cuda () print ( 'Base_layers:' , x . size ()) print ( 'roi_indices:' , roi_indices . size ()) print ( 'rois:' , rois . size ()) rois = torch . flatten ( rois , 0 , 1 ) roi_indices = torch . flatten ( roi_indices , 0 , 1 ) rois_feature_map = torch . zeros_like ( rois ) rois_feature_map [:, [ 0 , 2 ]] = rois [:, [ 0 , 2 ]] / img_size [ 1 ] * x . size ()[ 3 ] rois_feature_map [:, [ 1 , 3 ]] = rois [:, [ 1 , 3 ]] / img_size [ 0 ] * x . size ()[ 2 ] indices_and_rois = torch . cat ([ roi_indices [:, None ], rois_feature_map ], dim = 1 ) #-----------------------------------# # \u5229\u7528\u5efa\u8bae\u6846\u5bf9\u516c\u7528\u7279\u5f81\u5c42\u8fdb\u884c\u622a\u53d6 #-----------------------------------# pool = self . roi ( x , indices_and_rois ) #-----------------------------------# # \u5229\u7528classifier\u7f51\u7edc\u8fdb\u884c\u7279\u5f81\u63d0\u53d6 #-----------------------------------# fc7 = self . classifier ( pool ) #--------------------------------------------------------------# # \u5f53\u8f93\u5165\u4e3a\u4e00\u5f20\u56fe\u7247\u7684\u65f6\u5019\uff0c\u8fd9\u91cc\u83b7\u5f97\u7684f7\u7684shape\u4e3a[300, 2048] #--------------------------------------------------------------# fc7 = fc7 . view ( fc7 . size ( 0 ), - 1 ) roi_cls_locs = self . cls_loc ( fc7 ) roi_scores = self . score ( fc7 ) roi_cls_locs = roi_cls_locs . view ( n , - 1 , roi_cls_locs . size ( 1 )) roi_scores = roi_scores . view ( n , - 1 , roi_scores . size ( 1 )) return roi_cls_locs , roi_scores \u4e94\u3001\u5728\u539f\u56fe\u4e0a\u8fdb\u884c\u7ed8\u5236 \u00b6 \u200b \u5728\u7b2c\u56db\u6b65\u7684\u7ed3\u5c3e\uff0c\u6211\u4eec\u5bf9\u5efa\u8bae\u6846\u8fdb\u884c\u518d\u4e00\u6b21\u8fdb\u884c\u89e3\u7801\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u9884\u6d4b\u6846\u5728\u539f\u56fe\u4e0a\u7684\u4f4d\u7f6e\uff0c\u800c\u4e14\u8fd9\u4e9b\u9884\u6d4b\u6846\u90fd\u662f\u7ecf\u8fc7\u7b5b\u9009\u7684\u3002\u8fd9\u4e9b\u7b5b\u9009\u540e\u7684\u6846\u53ef\u4ee5\u76f4\u63a5\u7ed8\u5236\u5728\u56fe\u7247\u4e0a\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u7ed3\u679c\u4e86\u3002 \u516d\u3001\u6574\u4f53\u6d41\u7a0b \u00b6 \u4ee5\u4e0b\u662f\u5305\u62ec\u4e3b\u5e72\u7f51\u7edc\u5728\u5185\u7684\u66f4\u5b8c\u6574\u7684Faster R-CNN\u6d41\u7a0b\u793a\u56fe\uff1a \u8f93\u5165\u56fe\u7247 \u2193 \u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\uff08\u5982 ResNet \uff09 \u2193 \u5019\u9009\u6846\u63d0\u53d6\uff08 RPN \uff09 \u2193 \u5171\u4eab\u7279\u5f81\u63d0\u53d6 \u2193 RoI Pooling \u2193 \u6837\u672c\u6807\u7b7e\u5206\u914d\u548c\u91c7\u6837 \u2193 \u7279\u5f81\u63d0\u53d6\u548c\u5206\u7c7b \u2193 \u8fb9\u754c\u6846\u56de\u5f52 \u2193 \u6700\u7ec8\u68c0\u6d4b\u6846 \u8f93\u5165\u56fe\u7247\uff1a\u5c06\u9700\u8981\u8fdb\u884c\u76ee\u6807\u68c0\u6d4b\u7684\u56fe\u7247\u4f5c\u4e3a\u8f93\u5165\u3002 \u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\uff1a\u4f7f\u7528\u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\uff08\u5982ResNet\uff09\u5bf9\u8f93\u5165\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5f97\u5230\u4e00\u4e2a\u5171\u4eab\u7684\u7279\u5f81\u56fe\u3002 \u5019\u9009\u6846\u63d0\u53d6\uff08RPN\uff09\uff1a\u4f7f\u7528Region Proposal Network\uff08RPN\uff09\u4ece\u5171\u4eab\u7684\u7279\u5f81\u56fe\u4e2d\u63d0\u53d6\u5019\u9009\u6846\uff08Proposal\uff09\uff0c\u8fd9\u4e9b\u5019\u9009\u6846\u662f\u53ef\u80fd\u542b\u6709\u7269\u4f53\u7684\u533a\u57df\u3002 \u5171\u4eab\u7279\u5f81\u63d0\u53d6\uff1a\u5c06\u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u63d0\u53d6\u7684\u5171\u4eab\u7279\u5f81\u56fe\u7528\u4e8e\u540e\u7eed\u6b65\u9aa4\uff0c\u5982RoI Pooling\u548c\u5206\u7c7b\u56de\u5f52\u3002 RoI Pooling\uff1a\u5c06RPN\u63d0\u53d6\u7684\u5019\u9009\u6846\u533a\u57df\u6620\u5c04\u5230\u5171\u4eab\u7279\u5f81\u56fe\u4e0a\uff0c\u7136\u540e\u4f7f\u7528RoI Pooling\u64cd\u4f5c\u5c06\u533a\u57df\u6620\u5c04\u4e3a\u56fa\u5b9a\u5927\u5c0f\u7684\u7279\u5f81\u56fe\u3002 \u6837\u672c\u6807\u7b7e\u5206\u914d\u548c\u91c7\u6837\uff1a\u5bf9RoI Pooling\u540e\u7684\u7279\u5f81\u8fdb\u884c\u6837\u672c\u6807\u7b7e\u5206\u914d\u548c\u91c7\u6837\uff0c\u786e\u5b9a\u6b63\u8d1f\u6837\u672c\u3002 \u7279\u5f81\u63d0\u53d6\u548c\u5206\u7c7b\uff1a\u4f7f\u7528\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5bf9RoI Pooling\u540e\u7684\u7279\u5f81\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u4f7f\u7528\u5168\u8fde\u63a5\u5c42\u5bf9\u63d0\u53d6\u7684\u7279\u5f81\u8fdb\u884c\u76ee\u6807\u5206\u7c7b\u3002 \u8fb9\u754c\u6846\u56de\u5f52\uff1a\u4f7f\u7528\u53e6\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\u5bf9RoI Pooling\u540e\u7684\u7279\u5f81\u8fdb\u884c\u8fb9\u754c\u6846\u56de\u5f52\uff0c\u7cbe\u786e\u5b9a\u4f4d\u76ee\u6807\u7684\u4f4d\u7f6e\u3002 \u6700\u7ec8\u68c0\u6d4b\u6846\uff1a\u6839\u636e\u5206\u7c7b\u548c\u56de\u5f52\u7684\u7ed3\u679c\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u68c0\u6d4b\u6846\uff0c\u5e76\u8fdb\u884c\u975e\u6781\u5927\u503c\u6291\u5236\uff08NMS\uff09\u5904\u7406\uff0c\u6d88\u9664\u91cd\u53e0\u7684\u68c0\u6d4b\u6846\u3002 Faster R-CNN\u901a\u8fc7\u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u3001\u5019\u9009\u6846\u63d0\u53d6\u3001\u5171\u4eab\u7279\u5f81\u63d0\u53d6\u3001RoI Pooling\u548c\u540e\u7eed\u7684\u5206\u7c7b\u4e0e\u56de\u5f52\u64cd\u4f5c\uff0c\u5b9e\u73b0\u4e86\u5bf9\u8f93\u5165\u56fe\u7247\u4e2d\u76ee\u6807\u7684\u51c6\u786e\u68c0\u6d4b\u4e0e\u5b9a\u4f4d\u3002","title":"faster-rcnn"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#faster-rcnn-","text":"\u8be5\u7b14\u8bb0\u57fa\u4e8e B\u7ad9up\u4e3b\uff1aBubbliiiing \u7684\u89c6\u9891\u8bb2\u89e3\u7f16\u5199 \u6e90\u7801\u5730\u5740\uff1ahttps://github.com/bubbliiiing/faster-rcnn-pytorch \u4f5c\u8005\u535a\u5ba2\u5730\u5740\uff1ahttps://blog.csdn.net/weixin_44791964/article/details/105739918 \u53c2\u8003\u8d44\u6599\uff1a \u4e00\u6587\u8bfb\u61c2Faster RCNN","title":"faster-rcnn-\u5b66\u4e60\u7b14\u8bb0"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#faster-rcnn","text":"\u200b \u8ba1\u7b97\u673a\u5982\u4f55\u786e\u5b9a\u4e00\u5f20\u56fe\u7247\u7684\u76ee\u6807\u7684\u4f4d\u7f6e\u5462\uff1f\u53ea\u9700\u8981\u4f20\u5165\u56db\u4e2a\u53c2\u6570\u3002 \u200b \u5f53\u4e00\u5f20\u56fe\u7247\u4f20\u5165faster-rcnn\u4e2d\u4f1a\u88abresize\u5230\u6700\u5c0f\u8fb9\u662f600\u7684shape\u4e0a\uff0c\u957f\u5bbd\u6bd4\u4fdd\u6301\u4e0d\u53d8\uff0c\u7136\u540e\u5c06\u56fe\u7247\u4f20\u5165\u4e3b\u5e72\u7f51\u7edc(backbone),\u56fe\u7247\u88ab\u5206\u5272\u6210 \\(38\\times38\\) \u7684\u7279\u5f81\u5c42\uff08\u7f51\u683c\uff09\uff0c\u6bcf\u4e2a\u7f51\u683c\u5b58\u5728\u82e5\u5e72\u4e2a\u5148\u9a8c\u6846\u3002","title":"\u4e00\u3001faster-rcnn\u4ecb\u7ecd"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#1rpn","text":"RPN\u7f51\u7edc\u7ed3\u6784 RPN\u7ed3\u6784\uff0c\u6709\u4e24\u6761\u7ebf\u3002\u4e0a\u9762\u4e00\u6761\u901a\u8fc7softmax\u5206\u7c7banchors\u83b7\u5f97positive\u548cnegative\u5206\u7c7b\uff0c\u4e0b\u9762\u4e00\u6761\u7528\u4e8e\u8ba1\u7b97\u5bf9\u4e8eanchors\u7684bounding box regression\u504f\u79fb\u91cf\uff0c\u4ee5\u83b7\u5f97\u7cbe\u786e\u7684proposal\u3002 \u6700\u540e\u7684Proposal\u5c42\u5219\u8d1f\u8d23\u7efc\u5408positive anchors\u548c\u5bf9\u5e94bounding box regression\u504f\u79fb\u91cf\u83b7\u53d6\u4fee\u6b63\u540e\u7684proposals\uff0c\u540c\u65f6\u5254\u9664\u592a\u5c0f\u548c\u8d85\u51fa\u8fb9\u754c\u7684proposals\u3002\u5176\u5b9e\u6574\u4e2a\u7f51\u7edc\u5230\u4e86Proposal Layer\u8fd9\u91cc\uff0c\u5c31\u5b8c\u6210\u4e86\u76f8\u5f53\u4e8e\u76ee\u6807\u5b9a\u4f4d\u7684\u529f\u80fd\u3002 \u5728\u62ff\u5230feature map\u540e\uff0c\u5148\u7ecf\u8fc7\u4e00\u4e2a3x3\u5377\u79ef\u3002 \u751f\u6210\u5019\u9009\u6846\u7684\u8fc7\u7a0b\u5305\u62ec\u4e24\u4e2a\u5173\u952e\u6b65\u9aa4\uff1a \u951a\u6846\u751f\u6210\uff08Anchor Box Generation\uff09\uff1a\u5728\u6ed1\u52a8\u7a97\u53e3\u7684\u6bcf\u4e2a\u4f4d\u7f6e\uff0cRPN\u5728\u4e0d\u540c\u5c3a\u5ea6\u548c\u957f\u5bbd\u6bd4\u7684\u951a\u6846\u4e0a\u751f\u6210\u591a\u4e2a\u5019\u9009\u6846\u3002\u8fd9\u4e9b\u951a\u6846\u662f\u9884\u5b9a\u4e49\u7684\u4e00\u7ec4\u77e9\u5f62\u6846\uff0c\u56fa\u5b9a\u5927\u5c0f\u4f46\u5177\u6709\u4e0d\u540c\u5c3a\u5ea6\u548c\u957f\u5bbd\u6bd4\u3002 \u5019\u9009\u6846\u5206\u7c7b\u548c\u56de\u5f52\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u951a\u6846\uff0cRPN\u901a\u8fc7\u5377\u79ef\u64cd\u4f5c\u5c06\u5176\u6620\u5c04\u5230\u4e00\u4e2a\u4f4e\u7ef4\u7279\u5f81\u5411\u91cf\u3002\u7136\u540e\uff0c\u8fd9\u4e2a\u7279\u5f81\u5411\u91cf\u88ab\u7528\u4e8e\u9884\u6d4b\u951a\u6846\u4e2d\u662f\u5426\u5305\u542b\u76ee\u6807\u4ee5\u53ca\u5bf9\u5e94\u7684\u8fb9\u754c\u6846\u56de\u5f52\u53c2\u6570\u3002\u901a\u8fc7\u5206\u7c7b\u548c\u56de\u5f52\u7684\u64cd\u4f5c\uff0cRPN\u53ef\u4ee5\u7b5b\u9009\u51fa\u5177\u6709\u9ad8\u76ee\u6807\u53ef\u80fd\u6027\u7684\u5efa\u8bae\u6846\uff0c\u5e76\u6839\u636e\u9884\u6d4b\u7684\u8fb9\u754c\u6846\u56de\u5f52\u53c2\u6570\u8c03\u6574\u5efa\u8bae\u6846\u4f4d\u7f6e\u3002 \u7279\u5f81\u5c42\u622a\u53d6 \u901a\u8fc7\u5efa\u8bae\u6846\u5728\u7279\u5f81\u5c42\u4e0a\u8fdb\u884c\u622a\u53d6\uff0c\u622a\u53d6\u5230\u7684\u4e0d\u540c\u7279\u5f81\u5c42\u5c31\u80fd\u53cd\u6620\u539f\u56fe\u7684\u4e0d\u540c\u4f4d\u7f6e anchor \u6240\u8c13anchors\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u7ec4\u7531rpn/generate_anchors.py\u751f\u6210\u7684\u77e9\u5f62\u3002\u76f4\u63a5\u8fd0\u884c\u4f5c\u8005demo\u4e2d\u7684generate_anchors.py\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u8f93\u51fa\uff1a \u5176\u4e2d\u6bcf\u884c\u7684 4 \u4e2a\u503c(x 1 , y 1 , x 2 , y 2 )\u8868\u77e9\u5f62\u5de6\u4e0a\u548c\u53f3\u4e0b\u89d2\u70b9\u5750\u6807 , 9 \u4e2a\u77e9\u5f62\u5171\u6709 3 \u79cd\u5f62\u72b6\u3002\u8fd9 9 \u4e2aa n chor\u7684\u5927\u5c0f\u6309\u7167\u4e09\u79cd\u957f\u5bbd\u6bd4ra t io [ 1 : 1 \uff0c 1 : 2 \uff0c 2 : 1 ] \u8bbe\u7f6e\uff0c\u5177\u4f53\u5927\u5c0f\u6839\u636e\u8f93\u5165\u56fe\u50cf\u7684\u539f\u59cb\u76ee\u6807\u5927\u5c0f\u7075\u6d3b\u8bbe\u7f6e\u3002 [[ -84. -40. 99. 55. ] [ -176. -88. 191. 103. ] [ -360. -184. 375. 199. ] [ -56. -56. 71. 71. ] [ -120. -120. 135. 135. ] [ -248. -248. 263. 263. ] [ -36. -80. 51. 95. ] [ -80. -168. 95. 183. ] [ -168. -344. 183. 359. ]] \u5206\u7c7b \u5206\u7c7b\u4efb\u52a1\u662f\u6307\u5c06\u5019\u9009\u6846\u4e2d\u7684\u76ee\u6807\u8fdb\u884c\u5206\u7c7b\uff0c\u786e\u5b9a\u5176\u6240\u5c5e\u7684\u7c7b\u522b\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5206\u7c7b\u4efb\u52a1\u4f7f\u7528softmax\u51fd\u6570\u4f5c\u4e3a\u6fc0\u6d3b\u51fd\u6570\uff0c\u5c06\u5019\u9009\u6846\u5bf9\u5e94\u7684\u7279\u5f81\u6620\u5c04\u4e3a\u5404\u4e2a\u7c7b\u522b\u7684\u6982\u7387\u5206\u5e03\u3002\u901a\u8fc7\u6bd4\u8f83\u5404\u4e2a\u7c7b\u522b\u7684\u6982\u7387\u5206\u6570\uff0c\u53ef\u4ee5\u786e\u5b9a\u5019\u9009\u6846\u6700\u53ef\u80fd\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u3002 \u901a\u8fc71x1\u5377\u79ef\u5f97\u5230\u7684\u8f93\u51fa\uff0c\u8be51x1\u5377\u79ef\u7684caffe prototxt\u5b9a\u4e49\u5982\u4e0b\uff1a \u7ecf\u8fc7\u8be5\u5377\u79ef\u7684\u8f93\u51fa\u56fe\u50cf\u4e3aWxHx18\u5927\u5c0f,\u5bf9\u5e94\u4e86feature maps\u6bcf\u4e00\u4e2a\u70b9\u90fd\u67099\u4e2aanchors\uff0c\u540c\u65f6\u6bcf\u4e2aanchors\u53c8\u6709\u53ef\u80fd\u662fpositive\u548cnegative\uff0c\u6240\u6709\u8fd9\u4e9b\u4fe1\u606f\u90fd\u4fdd\u5b58WxHx(9*2)\u5927\u5c0f\u7684\u77e9\u9635 layer { name : \"rpn_cls_score\" type : \"Convolution\" bottom : \"rpn/output\" top : \"rpn_cls_score\" convolution_param { num_output : 18 # 2(positive/negative) * 9(anchors) kernel_size : 1 pad : 0 stride : 1 } } \u56e0\u4e3a\u8fd9\u91cc\u662f\u4e8c\u5206\u7c7b\u5224\u65adpositive\u548cnegative\uff0c\u6240\u4ee5\u8be5feature map\u4e0a\u6bcf\u4e2a\u70b9\u7684\u6bcf\u4e2aanchor\u5bf9\u5e942\u4e2a\u503c\uff0c\u8868\u793a\u76ee\u6807\u548c\u80cc\u666f\u7684\u6982\u7387 Reshape\u5c42\u662f\u6280\u672f\u7ec6\u8282\u95ee\u9898\uff0c\u5bf9feature map\u8fdb\u884c\u7ef4\u5ea6\u53d8\u6362\uff0c\u4f7f\u5f97\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u7ef4\u5ea6\u4e3a2\uff0c\u65b9\u4fbf\u5728\u8be5\u7ef4\u5ea6\u4e0a\u8fdb\u884csoftmax\u64cd\u4f5c\uff0c\u4e4b\u540e\u518dReshape\u6062\u590d\u539f\u72b6\u3002 \u540e\u9762\u63a5softmax\u5206\u7c7b\u83b7\u5f97positive anchors\uff0c\u4e5f\u5c31\u76f8\u5f53\u4e8e\u521d\u6b65\u63d0\u53d6\u4e86\u9009\u76ee\u6807\u6846\uff08bounding box\uff09 \u56de\u5f52 \u56de\u5f52\u4efb\u52a1\u662f\u6307\u5bf9\u5019\u9009\u6846\u7684\u7cbe\u786e\u4f4d\u7f6e\u8fdb\u884c\u8c03\u6574\uff0c\u4ee5\u66f4\u597d\u5730\u5339\u914d\u76ee\u6807\u7684\u771f\u5b9e\u4f4d\u7f6e\u3002\u56de\u5f52\u4efb\u52a1\u901a\u5e38\u4f7f\u7528\u56de\u5f52\u5668\u6765\u9884\u6d4b\u5019\u9009\u6846\u7684\u504f\u79fb\u91cf\uff0c\u5176\u4e2d\u5305\u62ec\u6c34\u5e73\u548c\u5782\u76f4\u65b9\u5411\u4e0a\u7684\u5e73\u79fb\u91cf\u4ee5\u53ca\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u7684\u7f29\u653e\u6bd4\u4f8b\u3002\u8fd9\u4e9b\u9884\u6d4b\u7684\u504f\u79fb\u91cf\u53ef\u4ee5\u5e94\u7528\u4e8e\u5019\u9009\u6846\u7684\u521d\u59cb\u4f4d\u7f6e\u548c\u5c3a\u5bf8\uff0c\u4ee5\u83b7\u5f97\u66f4\u7cbe\u786e\u7684\u76ee\u6807\u4f4d\u7f6e\u3002 \u5982\u56fe\u6240\u793a\u7eff\u8272\u6846\u4e3a\u98de\u673a\u7684Ground Truth(GT)\uff0c\u7ea2\u8272\u4e3a\u63d0\u53d6\u7684positive anchors\uff0c\u5373\u4fbf\u7ea2\u8272\u7684\u6846\u88ab\u5206\u7c7b\u5668\u8bc6\u522b\u4e3a\u98de\u673a\uff0c\u4f46\u662f\u7531\u4e8e\u7ea2\u8272\u7684\u6846\u5b9a\u4f4d\u4e0d\u51c6\uff0c\u8fd9\u5f20\u56fe\u76f8\u5f53\u4e8e\u6ca1\u6709\u6b63\u786e\u7684\u68c0\u6d4b\u51fa\u98de\u673a\u3002\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u91c7\u7528\u4e00\u79cd\u65b9\u6cd5\u5bf9\u7ea2\u8272\u7684\u6846\u8fdb\u884c\u5fae\u8c03\uff0c\u4f7f\u5f97positive anchors\u548cGT\u66f4\u52a0\u63a5\u8fd1\u3002 \u901a\u8fc71x1\u5377\u79ef\u5f97\u5230\u7684\u8f93\u51fa\uff0c\u8be51x1\u5377\u79ef\u7684caffe prototxt\u5b9a\u4e49\u5982\u4e0b\uff1a layer { name : \"rpn_bbox_pred\" type : \"Convolution\" bottom : \"rpn/output\" top : \"rpn_bbox_pred\" convolution_param { num_output : 36 # 4 * 9(anchors) kernel_size : 1 pad : 0 stride : 1 } } \u7ecf\u8fc7\u8be5\u5377\u79ef\u8f93\u51fa\u56fe\u50cf\u4e3aWxHx36\uff0c\u5728caffe blob\u5b58\u50a8\u4e3a[1, 4x9, H, W]\uff0c\u8fd9\u91cc\u76f8\u5f53\u4e8efeature maps\u6bcf\u4e2a\u70b9\u90fd\u67099\u4e2aanchors\uff0c\u6bcf\u4e2aanchors\u53c8\u90fd\u67094\u4e2a\u7528\u4e8e\u56de\u5f52\u7684\u53d8\u6362\u91cf\u3002 \u200b \u5176\u5b9eRPN\u6700\u7ec8\u5c31\u662f\u5728\u539f\u56fe\u5c3a\u5ea6\u4e0a\uff0c\u8bbe\u7f6e\u4e86\u5bc6\u5bc6\u9ebb\u9ebb\u7684\u5019\u9009Anchor\u3002\u7136\u540e\u7528cnn\u53bb\u5224\u65ad\u54ea\u4e9bAnchor\u662f\u91cc\u9762\u6709\u76ee\u6807\u7684positive anchor\uff0c\u54ea\u4e9b\u662f\u6ca1\u76ee\u6807\u7684negative anchor\u3002\u6240\u4ee5\uff0c\u4ec5\u4ec5\u662f\u4e2a\u4e8c\u5206\u7c7b\u800c\u5df2","title":"1.\u4f7f\u7528RPN\u751f\u6210\u5efa\u8bae\u6846"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#2roi-pooling","text":"\u200b ROI pooling\u5c42\u5c06\u622a\u53d6\u5230\u7684\u4e0d\u540c\u5927\u5c0f\u7684\u7279\u5f81\u5c42\u533a\u57dfresize\u5230\u540c\u6837\u5927\u5c0f\uff0c\u518d\u901a\u8fc7\u5206\u7c7b\u4e0e\u56de\u5f52\u7f51\u7edc\u6765\u5224\u65ad\u622a\u53d6\u7684\u533a\u57df\u662f\u5426\u6709\u76ee\u6807\uff0c\u5e76\u5bf9\u5efa\u8bae\u6846\u8fdb\u884c\u8c03\u6574\uff0c\u8fd9\u4e2a\u7ed3\u679c\u5c31\u662f\u6700\u7ec8\u7684\u7ed3\u679c\u3002 \u5f53feature map\u4f20\u5165ROI pooling\u5c42\u4e2d\uff0c\u5229\u7528\u5efa\u8bae\u6846\u5bf9feature map\u8fdb\u884c\u622a\u53d6 ROI pooling\u5c42\u4f1a\u5bf9\u6240\u6709\u7684feature map\u8fdb\u884c\u5206\u533a\u57df\u6c60\u5316\uff0c\u4f7f\u5f97\u6240\u6709\u7684shape\u76f8\u540c\u3002 \u63a5\u7740\u4f7f\u7528\u5f97\u5230\u7684feature map\u8fdb\u884c\u5206\u7c7b\u548c\u56de\u5f52 \u56de\u5f52\u9884\u6d4b\u4f1a\u5bf9\u5efa\u8bae\u6846\u8fdb\u884c\u8c03\u6574\uff0c\u800c\u5206\u7c7b\u9884\u6d4b\u4f1a\u5224\u65ad\u5efa\u8bae\u6846\u4e2d\u662f\u5426\u771f\u7684\u5b58\u5728\u76ee\u6807 \u3002","title":"2.ROI pooling\u5c42"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#3","text":"\u200b faster-rcnn\u5c06\u9884\u6d4b\u8fc7\u7a0b\u5206\u4e3a\u4e24\u6b65 \u7c97\u7565\u7684\u7b5b\u9009\uff08\u5efa\u8bae\u6846\uff09 \u7cbe\u7ec6\u7684\u8c03\u6574\uff08\u56de\u5f52\uff0c\u9884\u6d4b\uff09","title":"3.\u5c0f\u7ed3"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#backbone","text":"\u200b \u672c\u6587\u6863\u4f7f\u7528ResNet50\u4f5c\u4e3a\u4e3b\u5e72\u7f51\u7edc\u3002","title":"\u4e8c\u3001\u4e3b\u5e72\u7f51\u7edc\uff08backbone\uff09"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#1resnet50","text":"\u4e24\u8005\u5747\u4e3a\u6b8b\u5dee\u7f51\u7edc Conv Block \u8be5\u6a21\u5757\u8f93\u5165\u548c\u8f93\u51fa\u4e0d\u60f3\u540c\uff0c\u4e0d\u80fd\u8fdb\u884c\u8fde\u7eed\u4e32\u8054\uff0c\u4e3b\u8981\u7528\u4e8e\u6539\u53d8\u7f51\u7edc\u56f4\u7ef4\u5ea6 \u6b8b\u5dee\u8fb9\u6709\u5377\u79ef\uff08\u901a\u8fc7\u6539\u53d8\u5377\u79ef\u7684\u6b65\u957f\u548c\u901a\u9053\u6570\u6539\u53d8\u8f93\u51fa\u7279\u5f81\u5c42\u7684\u901a\u9053\u6570\uff09 \u7ed3\u6784\u5982\u4e0b: Identity Block \u8f93\u5165\u7ef4\u5ea6\u548c\u8f93\u51fa\u7ef4\u5ea6\u76f8\u540c\uff0c\u53ef\u4ee5\u4e32\u8054\uff0c\u7528\u4e8e\u52a0\u6df1\u7f51\u7edc\u3002 \u7ed3\u6784\u5982\u4e0b\uff1a","title":"1.ResNet50\u57fa\u672c\u6a21\u5757"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#2bottleneck","text":"class Bottleneck ( nn . Module ): expansion = 4 def __init__ ( self , inplanes , planes , stride = 1 , downsample = None ): super ( Bottleneck , self ) . __init__ () self . conv1 = nn . Conv2d ( inplanes , planes , kernel_size = 1 , stride = stride , bias = False ) self . bn1 = nn . BatchNorm2d ( planes ) self . conv2 = nn . Conv2d ( planes , planes , kernel_size = 3 , stride = 1 , padding = 1 , bias = False ) self . bn2 = nn . BatchNorm2d ( planes ) self . conv3 = nn . Conv2d ( planes , planes * 4 , kernel_size = 1 , bias = False ) self . bn3 = nn . BatchNorm2d ( planes * 4 ) self . relu = nn . ReLU ( inplace = True ) self . downsample = downsample self . stride = stride def forward ( self , x ): residual = x out = self . conv1 ( x ) out = self . bn1 ( out ) out = self . relu ( out ) out = self . conv2 ( out ) out = self . bn2 ( out ) out = self . relu ( out ) out = self . conv3 ( out ) out = self . bn3 ( out ) if self . downsample is not None : residual = self . downsample ( x ) out += residual out = self . relu ( out ) return out \u200b \u8fd9\u6bb5\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2aBottleneck\u5757\uff0c\u5b83\u662fResNet\u4e2d\u7684\u57fa\u672c\u6a21\u5757\u4e4b\u4e00\u3002Bottleneck\u5757\u901a\u8fc7\u964d\u4f4e\u7279\u5f81\u56fe\u7684\u7ef4\u5ea6\uff0c\u51cf\u5c11\u8ba1\u7b97\u91cf\uff0c\u540c\u65f6\u901a\u8fc7\u8df3\u8dc3\u8fde\u63a5\u4fdd\u7559\u4f4e\u5c42\u7279\u5f81\uff0c\u63d0\u9ad8\u6a21\u578b\u7684\u6027\u80fd\u3002 \u4e0b\u9762\u662f\u5bf9\u8fd9\u6bb5\u4ee3\u7801\u7684\u89e3\u91ca\uff1a expansion = 4 \uff1a\u6269\u5c55\u7cfb\u6570\uff0c\u7528\u4e8e\u5c06\u8f93\u5165\u901a\u9053\u6570\u6269\u5c55\u5230\u8f93\u51fa\u901a\u9053\u6570\u7684\u500d\u6570\u3002 __init__ \u65b9\u6cd5\uff1a\u521d\u59cb\u5316\u51fd\u6570\uff0c\u5b9a\u4e49\u4e86Bottleneck\u5757\u7684\u7ed3\u6784\u3002\u5b83\u63a5\u53d7\u8f93\u5165\u901a\u9053\u6570 inplanes \u3001\u8f93\u51fa\u901a\u9053\u6570 planes \u3001\u6b65\u957f stride \u548c\u4e0b\u91c7\u6837\u64cd\u4f5c downsample \u4f5c\u4e3a\u53c2\u6570\u3002\u5728\u521d\u59cb\u5316\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e09\u4e2a\u5377\u79ef\u5c42\u548c\u4e09\u4e2a\u6279\u5f52\u4e00\u5316\u5c42\uff0c\u4ee5\u53ca\u6fc0\u6d3b\u51fd\u6570ReLU\u548c\u964d\u91c7\u6837\u64cd\u4f5c\u3002 forward \u65b9\u6cd5\uff1a\u524d\u5411\u4f20\u64ad\u51fd\u6570\uff0c\u5b9a\u4e49\u4e86Bottleneck\u5757\u7684\u8ba1\u7b97\u8fc7\u7a0b\u3002\u5728\u524d\u5411\u4f20\u64ad\u4e2d\uff0c\u9996\u5148\u5c06\u8f93\u5165 x \u4fdd\u5b58\u5230 residual \u4e2d\uff0c\u7136\u540e\u901a\u8fc7\u5377\u79ef\u3001\u6279\u5f52\u4e00\u5316\u548cReLU\u6fc0\u6d3b\u51fd\u6570\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\u3002\u63a5\u7740\uff0c\u901a\u8fc7\u7b2c\u4e09\u4e2a\u5377\u79ef\u5c42\u548c\u6279\u5f52\u4e00\u5316\u5c42\u5c06\u7279\u5f81\u56fe\u7684\u901a\u9053\u6570\u6269\u5c55\u5230\u8f93\u5165\u901a\u9053\u6570\u7684\u56db\u500d\u3002\u5982\u679c\u5b58\u5728\uff08\u6b8b\u5dee\u8fb9\u4e0a\u6709\u5377\u79ef\uff09\u4e0b\u91c7\u6837\u64cd\u4f5c\uff0c\u5219\u5bf9\u8f93\u5165 x \u8fdb\u884c\u4e0b\u91c7\u6837\u64cd\u4f5c\u3002\u6700\u540e\uff0c\u5c06\u4e0b\u91c7\u6837\u7ed3\u679c\u4e0e\u7279\u5f81\u56fe\u76f8\u52a0\uff0c\u5e76\u518d\u6b21\u7ecf\u8fc7ReLU\u6fc0\u6d3b\u51fd\u6570\u3002 \u200b Bottleneck\u5757\u7684\u8bbe\u8ba1\u53ef\u4ee5\u6709\u6548\u5730\u51cf\u5c11\u6a21\u578b\u7684\u53c2\u6570\u91cf\u548c\u8ba1\u7b97\u91cf\uff0c\u540c\u65f6\u901a\u8fc7\u8df3\u8dc3\u8fde\u63a5\u4f20\u9012\u4f4e\u5c42\u7279\u5f81\u4fe1\u606f\uff0c\u63d0\u9ad8\u6a21\u578b\u7684\u8868\u8fbe\u80fd\u529b\u548c\u6027\u80fd\u3002 \u200b \u9996\u5148\u901a\u8fc7 \\(1\\times1\\) \u7684\u5377\u79ef\u538b\u7f29\u901a\u9053\u6570\uff0c\u63a5\u7740\u4f7f\u7528 \\(3\\times3\\) \u5377\u79ef\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u518d\u5229\u7528 \\(1\\times 1\\) \u5377\u79ef\u6269\u5f20\u901a\u9053\u6570\uff0c\u8fd9\u6837\u7684\u4e00\u4e2a\u74f6\u9888\u7ed3\u6784\u53ef\u4ee5\u66f4\u597d\u7684\u63d0\u53d6\u7279\u5f81\u52a0\u6df1\u6574\u4e2a\u7f51\u7edc\uff0c\u51cf\u5c11\u53c2\u6570\u91cf\u3002 1x1\u5377\u79ef\u7684\u4f5c\u7528\u662f\u964d\u4f4e\u8f93\u5165\u901a\u9053\u7684\u7ef4\u5ea6\u3002\u5728Bottleneck\u5757\u4e2d\uff0c\u9996\u5148\u4f7f\u75281x1\u5377\u79ef\u5c06\u8f93\u5165\u901a\u9053\u6570\u4ece inplanes \u964d\u4f4e\u5230 planes \uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u540e\u7eed3x3\u5377\u79ef\u7684\u8ba1\u7b97\u91cf\u548c\u53c2\u6570\u91cf\u3002\u56e0\u4e3a1x1\u5377\u79ef\u7684\u53c2\u6570\u91cf\u53ea\u53d6\u51b3\u4e8e\u8f93\u5165\u901a\u9053\u6570\u548c\u8f93\u51fa\u901a\u9053\u6570\uff0c\u4e0e\u8f93\u5165\u7279\u5f81\u56fe\u7684\u5c3a\u5bf8\u5927\u5c0f\u65e0\u5173\u3002 3x3\u5377\u79ef\u7528\u4e8e\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\u3002\u901a\u8fc7\u4f7f\u7528\u8f83\u5c0f\u7684\u5377\u79ef\u6838\uff0c\u53ef\u4ee5\u5728\u4fdd\u6301\u63a5\u53d7\u91ce\uff08receptive field\uff09\u5927\u5c0f\u7684\u540c\u65f6\uff0c\u51cf\u5c11\u5377\u79ef\u64cd\u4f5c\u7684\u8ba1\u7b97\u91cf\u548c\u53c2\u6570\u91cf\u3002\u76f8\u6bd4\u4e8e\u4f7f\u7528\u8f83\u5927\u7684\u5377\u79ef\u6838\uff0c3x3\u5377\u79ef\u53ef\u4ee5\u5728\u66f4\u5c11\u7684\u53c2\u6570\u91cf\u4e0b\u5b9e\u73b0\u7c7b\u4f3c\u7684\u611f\u53d7\u91ce\u3002","title":"2.Bottleneck"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#3-resnet","text":"class ResNet ( nn . Module ): def __init__ ( self , block , layers , num_classes = 1000 ): #-----------------------------------# # \u5047\u8bbe\u8f93\u5165\u8fdb\u6765\u7684\u56fe\u7247\u662f600,600,3 #-----------------------------------# self . inplanes = 64 super ( ResNet , self ) . __init__ () # 600,600,3 -> 300,300,64 self . conv1 = nn . Conv2d ( 3 , 64 , kernel_size = 7 , stride = 2 , padding = 3 , bias = False ) self . bn1 = nn . BatchNorm2d ( 64 ) self . relu = nn . ReLU ( inplace = True ) # 300,300,64 -> 150,150,64 self . maxpool = nn . MaxPool2d ( kernel_size = 3 , stride = 2 , padding = 0 , ceil_mode = True ) # 150,150,64 -> 150,150,256 self . layer1 = self . _make_layer ( block , 64 , layers [ 0 ]) # 150,150,256 -> 75,75,512 self . layer2 = self . _make_layer ( block , 128 , layers [ 1 ], stride = 2 ) # 75,75,512 -> 38,38,1024 \u5230\u8fd9\u91cc\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a38,38,1024\u7684\u5171\u4eab\u7279\u5f81\u5c42 self . layer3 = self . _make_layer ( block , 256 , layers [ 2 ], stride = 2 ) # self.layer4\u88ab\u7528\u5728classifier\u6a21\u578b\u4e2d self . layer4 = self . _make_layer ( block , 512 , layers [ 3 ], stride = 2 ) self . avgpool = nn . AvgPool2d ( 7 ) self . fc = nn . Linear ( 512 * block . expansion , num_classes ) for m in self . modules (): if isinstance ( m , nn . Conv2d ): n = m . kernel_size [ 0 ] * m . kernel_size [ 1 ] * m . out_channels m . weight . data . normal_ ( 0 , math . sqrt ( 2. / n )) elif isinstance ( m , nn . BatchNorm2d ): m . weight . data . fill_ ( 1 ) m . bias . data . zero_ () def _make_layer ( self , block , planes , blocks , stride = 1 ): downsample = None #-------------------------------------------------------------------# # \u5f53\u6a21\u578b\u9700\u8981\u8fdb\u884c\u9ad8\u548c\u5bbd\u7684\u538b\u7f29\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u7528\u5230\u6b8b\u5dee\u8fb9\u7684downsample #-------------------------------------------------------------------# if stride != 1 or self . inplanes != planes * block . expansion : downsample = nn . Sequential ( nn . Conv2d ( self . inplanes , planes * block . expansion , kernel_size = 1 , stride = stride , bias = False ), nn . BatchNorm2d ( planes * block . expansion ), ) layers = [] layers . append ( block ( self . inplanes , planes , stride , downsample )) self . inplanes = planes * block . expansion for i in range ( 1 , blocks ): layers . append ( block ( self . inplanes , planes )) return nn . Sequential ( * layers ) def forward ( self , x ): x = self . conv1 ( x ) x = self . bn1 ( x ) x = self . relu ( x ) x = self . maxpool ( x ) x = self . layer1 ( x ) x = self . layer2 ( x ) x = self . layer3 ( x ) x = self . layer4 ( x ) x = self . avgpool ( x ) x = x . view ( x . size ( 0 ), - 1 ) x = self . fc ( x ) return x \u200b ResNet \u7c7b\u901a\u8fc7\u8c03\u7528 _make_layer \u65b9\u6cd5\u6765\u6784\u5efa\u591a\u4e2a Bottleneck \u5757\uff0c\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u4e00\u4e2a\u5b8c\u6574\u7684ResNet\u6a21\u578b\u3002 ResNet \u7c7b\u662f\u6574\u4e2a\u6a21\u578b\u7684\u9aa8\u67b6\uff0c\u800c Bottleneck \u7c7b\u662f\u6a21\u578b\u4e2d\u7684\u57fa\u672c\u6a21\u5757\u3002\u901a\u8fc7\u4e0d\u540c\u7684\u5757\u7684\u5806\u53e0\uff0c\u53ef\u4ee5\u6784\u5efa\u4e0d\u540c\u6df1\u5ea6\u7684ResNet\u6a21\u578b\u3002 ResNet \u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6df1\u5ea6\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff0c\u800c Bottleneck \u662fResNet\u6a21\u578b\u4e2d\u7684\u4e00\u4e2a\u57fa\u672c\u6784\u5efa\u5757\u3002 \u200b Faster-RCNN\u7684\u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u90e8\u5206\u53ea\u5305\u542b\u4e86\u957f\u5bbd\u538b\u7f29\u4e86\u56db\u6b21\u7684\u5185\u5bb9\uff0c\u7b2c\u4e94\u6b21\u538b\u7f29\u540e\u7684\u5185\u5bb9\u5728ROI\u4e2d\u4f7f\u7528\u3002\u5373Faster-RCNN\u5728\u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u6240\u7528\u7684\u7f51\u7edc\u5c42\u5982\u56fe\u6240\u793a\u3002 \u4ee5\u8f93\u5165\u7684\u56fe\u7247\u4e3a600x600\u4e3a\u4f8b\uff0cshape\u53d8\u5316\u5982\u4e0b\uff1a","title":"3. ResNet"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#proposal","text":"","title":"\u4e09\u3001Proposal"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#1regionproposalnetwork","text":"\u83b7\u5f97Proposal\u5efa\u8bae\u6846 \u200b \u4e3b\u5e72\u7f51\u7edc\u83b7\u5f97\u7684Feature Map\uff0c\u5176\u6709\u4e24\u4e2a\u5e94\u7528\uff0c\u4e00\u4e2a\u662f\u548cROIPooling\u7ed3\u5408\u4f7f\u7528\u3001\u53e6\u4e00\u4e2a\u662f\u8fdb\u884c\u4e00\u6b213x3\u7684\u5377\u79ef\u540e\uff0c\u8fdb\u884c\u4e00\u4e2a18\u901a\u9053\u76841x1\u5377\u79ef\uff0c\u8fd8\u6709\u4e00\u4e2a36\u901a\u9053\u76841x1\u5377\u79ef\u3002 \\(9\\times 4\\) \u5377\u79ef\uff1a \u7528\u4e8e\u9884\u6d4b feature map\u4e0a \u6bcf\u4e00\u4e2a\u7f51\u683c\u70b9\u4e0a \u6bcf\u4e00\u4e2a\u5148\u9a8c\u6846 \u7684\u53d8\u5316\u60c5\u51b5\u3002 \u56e0\u4e3aFaster-RCNN\u7684\u9884\u6d4b\u7ed3\u679c\u9700\u8981\u7ed3\u5408\u5148\u9a8c\u6846\u83b7\u5f97\u9884\u6d4b\u6846\uff0c\u9884\u6d4b\u7ed3\u679c\u5c31\u662f\u5148\u9a8c\u6846\u7684\u53d8\u5316\u60c5\u51b5\u3002 \\(9\\times2\\) \u5377\u79ef\uff1a \u7528\u4e8e\u9884\u6d4b feature map\u4e0a \u6bcf\u4e00\u4e2a\u7f51\u683c\u70b9\u4e0a \u6bcf\u4e00\u4e2a\u9884\u6d4b\u6846 \u5185\u90e8\u662f\u5426\u5305\u542b\u4e86\u7269\u4f53\uff0c \u5e8f\u53f7\u4e3a1\u7684\u5185\u5bb9\u4e3a\u5305\u542b\u7269\u4f53\u7684\u6982\u7387 \u3002 \u200b \u5f53\u6211\u4eec\u8f93\u5165\u7684\u56fe\u7247\u7684shape\u662f600x600x3\u7684\u65f6\u5019\uff0c\u516c\u7528\u7279\u5f81\u5c42\u7684shape\u5c31\u662f38x38x1024\uff0c\u76f8\u5f53\u4e8e\u628a\u8f93\u5165\u8fdb\u6765\u7684\u56fe\u50cf\u5206\u5272\u621038x38\u7684\u7f51\u683c\uff0c\u7136\u540e\u6bcf\u4e2a\u7f51\u683c\u5b58\u57289\u4e2a\u5148\u9a8c\u6846\uff0c\u8fd9\u4e9b\u5148\u9a8c\u6846\u6709\u4e0d\u540c\u7684\u5927\u5c0f\uff0c\u5728\u56fe\u50cf\u4e0a\u5bc6\u5bc6\u9ebb\u9ebb\u3002 \u200b \\(9\\times 4\\) \u7684\u5377\u79ef\u7684\u7ed3\u679c\u4f1a\u5bf9\u8fd9\u4e9b\u5148\u9a8c\u6846\u8fdb\u884c\u8c03\u6574\uff0c\u83b7\u5f97\u4e00\u4e2a\u65b0\u7684\u6846\u3002 \u200b \\(9 \\times 2\\) \u7684\u5377\u79ef\u4f1a\u5224\u65ad\u4e0a\u8ff0\u83b7\u5f97\u7684\u65b0\u6846\u662f\u5426\u5305\u542b\u7269\u4f53\u3002 \u200b \u5230\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u4e86\u4e00\u4e9b\u6709\u7528\u7684\u6846\uff0c\u8fd9\u4e9b\u6846\u4f1a\u5229\u75289 x 2\u7684\u5377\u79ef\u5224\u65ad\u662f\u5426\u5b58\u5728\u7269\u4f53\u3002\u5230\u6b64\u4e3a\u6b62\u8fd8\u53ea\u662f\u7c97\u7565\u7684\u4e00\u4e2a\u6846\u7684\u83b7\u53d6\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u5efa\u8bae\u6846\u3002\u7136\u540e\u6211\u4eec\u4f1a\u5728\u5efa\u8bae\u6846\u91cc\u9762\u7ee7\u7eed\u627e\u4e1c\u897f\u3002 \u6e90\u7801\uff1a class RegionProposalNetwork ( nn . Module ): def __init__ ( self , in_channels = 512 , mid_channels = 512 , ratios = [ 0.5 , 1 , 2 ], anchor_scales = [ 8 , 16 , 32 ], feat_stride = 16 , mode = \"training\" , ): super ( RegionProposalNetwork , self ) . __init__ () #-----------------------------------------# # \u751f\u6210\u57fa\u7840\u5148\u9a8c\u6846\uff0cshape\u4e3a[9, 4] #-----------------------------------------# self . anchor_base = generate_anchor_base ( anchor_scales = anchor_scales , ratios = ratios ) n_anchor = self . anchor_base . shape [ 0 ] #-----------------------------------------# # \u5148\u8fdb\u884c\u4e00\u4e2a3x3\u7684\u5377\u79ef\uff0c\u53ef\u7406\u89e3\u4e3a\u7279\u5f81\u6574\u5408 #-----------------------------------------# self . conv1 = nn . Conv2d ( in_channels , mid_channels , 3 , 1 , 1 ) #-----------------------------------------# # \u5206\u7c7b\u9884\u6d4b\u5148\u9a8c\u6846\u5185\u90e8\u662f\u5426\u5305\u542b\u7269\u4f53 #-----------------------------------------# self . score = nn . Conv2d ( mid_channels , n_anchor * 2 , 1 , 1 , 0 ) #-----------------------------------------# # \u56de\u5f52\u9884\u6d4b\u5bf9\u5148\u9a8c\u6846\u8fdb\u884c\u8c03\u6574 #-----------------------------------------# self . loc = nn . Conv2d ( mid_channels , n_anchor * 4 , 1 , 1 , 0 ) #-----------------------------------------# # \u7279\u5f81\u70b9\u95f4\u8ddd\u6b65\u957f #-----------------------------------------# self . feat_stride = feat_stride #-----------------------------------------# # \u7528\u4e8e\u5bf9\u5efa\u8bae\u6846\u89e3\u7801\u5e76\u8fdb\u884c\u975e\u6781\u5927\u6291\u5236 #-----------------------------------------# self . proposal_layer = ProposalCreator ( mode ) #--------------------------------------# # \u5bf9FPN\u7684\u7f51\u7edc\u90e8\u5206\u8fdb\u884c\u6743\u503c\u521d\u59cb\u5316 #--------------------------------------# normal_init ( self . conv1 , 0 , 0.01 ) normal_init ( self . score , 0 , 0.01 ) normal_init ( self . loc , 0 , 0.01 ) def forward ( self , x , img_size , scale = 1. ): n , _ , h , w = x . shape #-----------------------------------------# # \u5148\u8fdb\u884c\u4e00\u4e2a3x3\u7684\u5377\u79ef\uff0c\u53ef\u7406\u89e3\u4e3a\u7279\u5f81\u6574\u5408 #-----------------------------------------# x = F . relu ( self . conv1 ( x )) #-----------------------------------------# # \u56de\u5f52\u9884\u6d4b\u5bf9\u5148\u9a8c\u6846\u8fdb\u884c\u8c03\u6574 #-----------------------------------------# rpn_locs = self . loc ( x ) rpn_locs = rpn_locs . permute ( 0 , 2 , 3 , 1 ) . contiguous () . view ( n , - 1 , 4 ) #-----------------------------------------# # \u5206\u7c7b\u9884\u6d4b\u5148\u9a8c\u6846\u5185\u90e8\u662f\u5426\u5305\u542b\u7269\u4f53 #-----------------------------------------# rpn_scores = self . score ( x ) rpn_scores = rpn_scores . permute ( 0 , 2 , 3 , 1 ) . contiguous () . view ( n , - 1 , 2 ) #-------------------------------------------------------------------------------# # \u8fdb\u884csoftmax\u6982\u7387\u8ba1\u7b97\uff0c\u6bcf\u4e2a\u5148\u9a8c\u6846\u53ea\u6709\u4e24\u4e2a\u5224\u522b\u7ed3\u679c # \u5185\u90e8\u5305\u542b\u7269\u4f53\u6216\u8005\u5185\u90e8\u4e0d\u5305\u542b\u7269\u4f53\uff0crpn_softmax_scores[:, :, 1]\u7684\u5185\u5bb9\u4e3a\u5305\u542b\u7269\u4f53\u7684\u6982\u7387 #-------------------------------------------------------------------------------# rpn_softmax_scores = F . softmax ( rpn_scores , dim =- 1 ) rpn_fg_scores = rpn_softmax_scores [:, :, 1 ] . contiguous () rpn_fg_scores = rpn_fg_scores . view ( n , - 1 ) #-------------------------------------------------------------------------------# # \u751f\u6210\u5148\u9a8c\u6846\uff0c\u6b64\u65f6\u83b7\u5f97\u7684anchor\u662f\u5e03\u6ee1\u7f51\u683c\u70b9\u7684\uff0c\u5f53\u8f93\u5165\u56fe\u7247\u4e3a600,600,3\u7684\u65f6\u5019\uff0cshape\u4e3a(12996, 4) #-------------------------------------------------------------------------------# anchor = _enumerate_shifted_anchor ( np . array ( self . anchor_base ), self . feat_stride , h , w ) rois = list () roi_indices = list () for i in range ( n ): roi = self . proposal_layer ( rpn_locs [ i ], rpn_fg_scores [ i ], anchor , img_size , scale = scale ) batch_index = i * torch . ones (( len ( roi ),)) rois . append ( roi . unsqueeze ( 0 )) roi_indices . append ( batch_index . unsqueeze ( 0 )) rois = torch . cat ( rois , dim = 0 ) . type_as ( x ) roi_indices = torch . cat ( roi_indices , dim = 0 ) . type_as ( x ) anchor = torch . from_numpy ( anchor ) . unsqueeze ( 0 ) . float () . to ( x . device ) return rpn_locs , rpn_scores , rois , roi_indices , anchor \u6839\u636e\u8fd9\u6bb5\u4ee3\u7801\uff0c\u53ef\u4ee5\u751f\u6210\u4ee5\u4e0b\u601d\u7ef4\u5bfc\u56fe\u5927\u7eb2\uff1a RegionProposalNetwork\u7c7b \u521d\u59cb\u5316\u65b9\u6cd5\uff1a init (self, in_channels=512, mid_channels=512, ratios=[0.5, 1, 2], anchor_scales=[8, 16, 32], feat_stride=16, mode=\"training\") \u521b\u5efa\u57fa\u7840\u5148\u9a8c\u6846anchor_base\uff0c\u5f62\u72b6\u4e3a[9, 4] \u83b7\u53d6\u5148\u9a8c\u6846\u7684\u6570\u91cfn_anchor \u521b\u5efa\u5377\u79ef\u5c42conv1\uff0c\u8f93\u5165\u901a\u9053\u6570\u4e3ain_channels\uff0c\u8f93\u51fa\u901a\u9053\u6570\u4e3amid_channels\uff0c\u5377\u79ef\u6838\u5927\u5c0f\u4e3a3\uff0c\u6b65\u957f\u4e3a1\uff0c\u586b\u5145\u4e3a1 \u521b\u5efa\u5206\u7c7b\u9884\u6d4b\u5c42score\uff0c\u8f93\u5165\u901a\u9053\u6570\u4e3amid_channels\uff0c\u8f93\u51fa\u901a\u9053\u6570\u4e3an_anchor * 2\uff0c\u5377\u79ef\u6838\u5927\u5c0f\u4e3a1\uff0c\u6b65\u957f\u4e3a1\uff0c\u586b\u5145\u4e3a0 \u521b\u5efa\u56de\u5f52\u9884\u6d4b\u5c42loc\uff0c\u8f93\u5165\u901a\u9053\u6570\u4e3amid_channels\uff0c\u8f93\u51fa\u901a\u9053\u6570\u4e3an_anchor * 4\uff0c\u5377\u79ef\u6838\u5927\u5c0f\u4e3a1\uff0c\u6b65\u957f\u4e3a1\uff0c\u586b\u5145\u4e3a0 \u8bbe\u7f6e\u7279\u5f81\u70b9\u95f4\u8ddd\u6b65\u957ffeat_stride \u521b\u5efaProposalCreator\u5bf9\u8c61proposal_layer\uff0c\u7528\u4e8e\u5bf9\u5efa\u8bae\u6846\u8fdb\u884c\u89e3\u7801\u548c\u975e\u6781\u5927\u6291\u5236 \u5bf9conv1\u3001score\u3001loc\u7684\u6743\u503c\u8fdb\u884c\u521d\u59cb\u5316 \u524d\u5411\u4f20\u64ad\u65b9\u6cd5\uff1aforward(self, x, img_size, scale=1.) \u83b7\u53d6\u8f93\u5165\u7279\u5f81\u56fex\u7684\u5f62\u72b6 \u7ecf\u8fc7\u5377\u79ef\u5c42conv1\u5e76\u4f7f\u7528ReLU\u6fc0\u6d3b\u51fd\u6570 \u7ecf\u8fc7\u56de\u5f52\u9884\u6d4b\u5c42loc\uff0c\u5e76\u8c03\u6574\u5f62\u72b6 \u7ecf\u8fc7\u5206\u7c7b\u9884\u6d4b\u5c42score\uff0c\u5e76\u8c03\u6574\u5f62\u72b6 \u5bf9\u5206\u7c7b\u9884\u6d4b\u5f97\u5206\u8fdb\u884csoftmax\u6982\u7387\u8ba1\u7b97\uff0c\u5f97\u5230\u5305\u542b\u7269\u4f53\u7684\u6982\u7387rpn_fg_scores \u751f\u6210\u5148\u9a8c\u6846anchor\uff0c\u5e76\u8fdb\u884c\u504f\u79fb\u3001\u7f29\u653e\u7b49\u8c03\u6574 \u4f7f\u7528ProposalCreator\u5bf9\u5148\u9a8c\u6846\u8fdb\u884c\u89e3\u7801\u548c\u975e\u6781\u5927\u6291\u5236\uff0c\u5f97\u5230\u5efa\u8bae\u6846rois\u548c\u5bf9\u5e94\u7684\u56fe\u50cf\u7d22\u5f15roi_indices \u8fd4\u56derpn_locs\u3001rpn_scores\u3001rois\u3001roi_indices\u548canchor #-----------------------------------------# # \u5148\u8fdb\u884c\u4e00\u4e2a3x3\u7684\u5377\u79ef\uff0c\u53ef\u7406\u89e3\u4e3a\u7279\u5f81\u6574\u5408 #-----------------------------------------# self . conv1 = nn . Conv2d ( in_channels , mid_channels , 3 , 1 , 1 ) #-----------------------------------------# # \u5206\u7c7b\u9884\u6d4b\u5148\u9a8c\u6846\u5185\u90e8\u662f\u5426\u5305\u542b\u7269\u4f53 #-----------------------------------------# self . score = nn . Conv2d ( mid_channels , n_anchor * 2 , 1 , 1 , 0 ) #-----------------------------------------# # \u56de\u5f52\u9884\u6d4b\u5bf9\u5148\u9a8c\u6846\u8fdb\u884c\u8c03\u6574 #-----------------------------------------# self . loc = nn . Conv2d ( mid_channels , n_anchor * 4 , 1 , 1 , 0 ) n , _ , h , w = x . shape #-----------------------------------------# # \u5148\u8fdb\u884c\u4e00\u4e2a3x3\u7684\u5377\u79ef\uff0c\u53ef\u7406\u89e3\u4e3a\u7279\u5f81\u6574\u5408 #-----------------------------------------# x = F . relu ( self . conv1 ( x )) #-----------------------------------------# # \u56de\u5f52\u9884\u6d4b\u5bf9\u5148\u9a8c\u6846\u8fdb\u884c\u8c03\u6574 #-----------------------------------------# rpn_locs = self . loc ( x ) rpn_locs = rpn_locs . permute ( 0 , 2 , 3 , 1 ) . contiguous () . view ( n , - 1 , 4 ) ''' \u4ee5\u4e0b\u662f\u5bf9\u4ee3\u7801rpn_locs.permute(0, 2, 3, 1).contiguous().view(n, -1, 4)\u4e2d\u6bcf\u4e00\u6b65\u64cd\u4f5c\u7684\u89e3\u91ca\uff1a rpn_locs.permute(0, 2, 3, 1): \u8fd9\u4e00\u6b65\u901a\u8fc7\u8c03\u7528permute\u51fd\u6570\u5bf9rpn_locs\u8fdb\u884c\u7ef4\u5ea6\u7f6e\u6362\u64cd\u4f5c\u3002\u4f7f\u7528\u53c2\u6570(0, 2, 3, 1)\u5c06\u539f\u59cb\u7684\u7ef4\u5ea6\u987a\u5e8f(batch_size, channels, height, width)\u53d8\u6362\u4e3a(batch_size, height, width, channels)\u3002\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u540e\u7eed\u7684contiguous\u64cd\u4f5c\u505a\u51c6\u5907\u3002 contiguous(): \u8fd9\u4e00\u6b65\u8c03\u7528contiguous\u51fd\u6570\uff0c\u5c06\u91cd\u65b0\u6392\u5217\u7ef4\u5ea6\u540e\u7684rpn_locs\u5f20\u91cf\u53d8\u4e3a\u8fde\u7eed\u7684\u5185\u5b58\u5e03\u5c40\u3002\u56e0\u4e3a\u5728\u8fdb\u884cview\u64cd\u4f5c\u4e4b\u524d\uff0c\u9700\u8981\u4fdd\u8bc1\u5f20\u91cf\u662f\u8fde\u7eed\u7684\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u9519\u8bef\u3002 view(n, -1, 4): \u8fd9\u4e00\u6b65\u8c03\u7528view\u51fd\u6570\uff0c\u5c06rpn_locs\u5f20\u91cf\u8fdb\u884c\u5f62\u72b6\u53d8\u6362\u3002\u53c2\u6570(n, -1, 4)\u4e2d\uff0cn\u8868\u793abatch\u5927\u5c0f\uff0c-1\u8868\u793a\u81ea\u52a8\u8ba1\u7b97\u8be5\u7ef4\u5ea6\u7684\u5927\u5c0f\uff0c4\u8868\u793a\u6bcf\u4e2a\u5148\u9a8c\u6846\u7684\u56de\u5f52\u9884\u6d4b\u7ed3\u679c\u7684\u7ef4\u5ea6\u3002\u8fd9\u6837\u64cd\u4f5c\u7684\u76ee\u7684\u662f\u5c06rpn_locs\u4ece\u539f\u59cb\u7684\u5f62\u72b6(batch_size, height, width, channels)\u53d8\u6362\u4e3a\u5f62\u72b6\u4e3a(batch_size, -1, 4)\u7684\u5f20\u91cf\uff0c\u7b2c\u4e8c\u7ef4\u5ea6\u7684\u5185\u5bb9\u53d8\u4e3a\u4e86\u6bcf\u4e00\u4e2a\u5148\u9a8c\u6846\uff0c\u5176\u4e2d-1\u7684\u5927\u5c0f\u4f1a\u6839\u636e\u5176\u4ed6\u7ef4\u5ea6\u7684\u5927\u5c0f\u81ea\u52a8\u8ba1\u7b97\u3002 \u7efc\u5408\u8d77\u6765\uff0c\u4e0a\u8ff0\u4ee3\u7801\u7684\u4f5c\u7528\u662f\u5c06rpn_locs\u5f20\u91cf\u8fdb\u884c\u7ef4\u5ea6\u7f6e\u6362\u3001\u5185\u5b58\u8fde\u7eed\u5316\u548c\u5f62\u72b6\u53d8\u6362\u64cd\u4f5c\uff0c\u6700\u7ec8\u5f97\u5230\u5f62\u72b6\u4e3a(batch_size, -1, 4)\u7684\u5f20\u91cf\u3002\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u8868\u793a\u4e00\u4e2a\u5148\u9a8c\u6846\u7684\u56de\u5f52\u9884\u6d4b\u7ed3\u679c\uff0c\u5177\u67094\u4e2a\u503c\u7528\u4e8e\u8868\u793a\u5750\u6807\u504f\u79fb\u91cf\u3002 ''' #-------------------------------------------------------------------------------# # \u8fdb\u884csoftmax\u6982\u7387\u8ba1\u7b97\uff0c\u6bcf\u4e2a\u5148\u9a8c\u6846\u53ea\u6709\u4e24\u4e2a\u5224\u522b\u7ed3\u679c # \u5185\u90e8\u5305\u542b\u7269\u4f53\u6216\u8005\u5185\u90e8\u4e0d\u5305\u542b\u7269\u4f53\uff0crpn_softmax_scores[:, :, 1]\u7684\u5185\u5bb9\u4e3a\u5305\u542b\u7269\u4f53\u7684\u6982\u7387 #-------------------------------------------------------------------------------# rpn_softmax_scores = F . softmax ( rpn_scores , dim =- 1 ) rpn_fg_scores = rpn_softmax_scores [:, :, 1 ] . contiguous () rpn_fg_scores = rpn_fg_scores . view ( n , - 1 ) ''' \u4e0a\u8ff0\u4ee3\u7801\u7247\u6bb5\u7684\u4f5c\u7528\u662f\u5bf9\u5206\u7c7b\u9884\u6d4b\u7ed3\u679c\u8fdb\u884csoftmax\u6982\u7387\u8ba1\u7b97\uff0c\u4ee5\u53ca\u63d0\u53d6\u5305\u542b\u7269\u4f53\u7684\u6982\u7387\u3002 F.softmax(rpn_scores, dim=-1): \u8fd9\u4e00\u884c\u4ee3\u7801\u4f7f\u7528F.softmax\u51fd\u6570\u5bf9rpn_scores\u8fdb\u884csoftmax\u6982\u7387\u8ba1\u7b97\u3002rpn_scores\u662f\u5206\u7c7b\u9884\u6d4b\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u5b83\u7684\u5f62\u72b6\u4e3a(batch_size, num_anchors, 2)\uff0c\u5176\u4e2d2\u8868\u793a\u4e24\u4e2a\u5224\u522b\u7ed3\u679c\uff08\u5185\u90e8\u5305\u542b\u7269\u4f53\u6216\u8005\u5185\u90e8\u4e0d\u5305\u542b\u7269\u4f53\uff09\u3002softmax\u51fd\u6570\u5c06\u6bcf\u4e2a\u5148\u9a8c\u6846\u7684\u4e24\u4e2a\u5224\u522b\u7ed3\u679c\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6982\u7387\u5206\u5e03\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5224\u522b\u7ed3\u679c\u7684\u503c\u4ecb\u4e8e0\u548c1\u4e4b\u95f4\uff0c\u5e76\u4e14\u6240\u6709\u503c\u7684\u548c\u4e3a1\u3002 rpn_softmax_scores[:, :, 1].contiguous(): \u8fd9\u4e00\u884c\u4ee3\u7801\u63d0\u53d6\u4e86\u7ecf\u8fc7softmax\u6982\u7387\u8ba1\u7b97\u540e\u7684\u7ed3\u679c\u4e2d\uff0c\u8868\u793a\u5305\u542b\u7269\u4f53\u7684\u6982\u7387\u503c\u3002rpn_softmax_scores\u7684\u5f62\u72b6\u4e3a(batch_size, num_anchors, 2)\uff0c\u901a\u8fc7\u4f7f\u7528\u7d22\u5f15[:, :, 1]\u5c06\u5305\u542b\u7269\u4f53\u7684\u6982\u7387\u503c\u63d0\u53d6\u51fa\u6765\u3002\u7ed3\u679c\u662f\u4e00\u4e2a\u5f62\u72b6\u4e3a(batch_size, num_anchors)\u7684\u5f20\u91cf\u3002 rpn_fg_scores.view(n, -1): \u8fd9\u4e00\u884c\u4ee3\u7801\u5bf9\u63d0\u53d6\u51fa\u6765\u7684\u5305\u542b\u7269\u4f53\u7684\u6982\u7387\u503c\u8fdb\u884c\u5f62\u72b6\u53d8\u6362\u3002rpn_fg_scores\u7684\u5f62\u72b6\u4e3a(batch_size, num_anchors)\uff0c\u901a\u8fc7\u8c03\u7528view\u51fd\u6570\uff0c\u5c06\u5176\u53d8\u6362\u4e3a\u5f62\u72b6\u4e3a(n, -1)\u7684\u5f20\u91cf\uff0c\u5176\u4e2dn\u8868\u793abatch\u5927\u5c0f\uff0c-1\u8868\u793a\u81ea\u52a8\u8ba1\u7b97\u8be5\u7ef4\u5ea6\u7684\u5927\u5c0f\u3002\u8fd9\u6837\u64cd\u4f5c\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u65b9\u4fbf\u540e\u7eed\u5904\u7406\u3002 \u7efc\u5408\u8d77\u6765\uff0c\u4e0a\u8ff0\u4ee3\u7801\u7684\u4f5c\u7528\u662f\u5bf9\u5206\u7c7b\u9884\u6d4b\u7ed3\u679c\u8fdb\u884csoftmax\u6982\u7387\u8ba1\u7b97\uff0c\u63d0\u53d6\u51fa\u8868\u793a\u5305\u542b\u7269\u4f53\u7684\u6982\u7387\u503c\uff0c\u5e76\u5c06\u5176\u8fdb\u884c\u5f62\u72b6\u53d8\u6362\uff0c\u5f97\u5230\u5f62\u72b6\u4e3a(n, -1)\u7684\u5f20\u91cf\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u8868\u793a\u4e00\u4e2a\u5148\u9a8c\u6846\u5185\u90e8\u5305\u542b\u7269\u4f53\u7684\u6982\u7387\u503c\u3002 '''","title":"1.RegionProposalNetwork"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#2proposal","text":"\u5148\u9a8c\u6846 \u8c03\u7528 anchors.py \u7ed3\u679c \u5efa\u8bae\u6846\u751f\u6210\u8fc7\u7a0b \u83b7\u5f97\u5efa\u8bae\u6846\u7f51\u7edc\u7684\u9884\u6d4b\u7ed3\u679c \\(rpn.py \\rightarrow RegionProposalNetwork \\rightarrow forward\\) n , _ , h , w = x . shape #-----------------------------------------# # \u5148\u8fdb\u884c\u4e00\u4e2a3x3\u7684\u5377\u79ef\uff0c\u53ef\u7406\u89e3\u4e3a\u7279\u5f81\u6574\u5408 #-----------------------------------------# x = F . relu ( self . conv1 ( x )) #-----------------------------------------# # \u56de\u5f52\u9884\u6d4b\u5bf9\u5148\u9a8c\u6846\u8fdb\u884c\u8c03\u6574 #-----------------------------------------# rpn_locs = self . loc ( x ) rpn_locs = rpn_locs . permute ( 0 , 2 , 3 , 1 ) . contiguous () . view ( n , - 1 , 4 ) #-----------------------------------------# # \u5206\u7c7b\u9884\u6d4b\u5148\u9a8c\u6846\u5185\u90e8\u662f\u5426\u5305\u542b\u7269\u4f53 #-----------------------------------------# rpn_scores = self . score ( x ) rpn_scores = rpn_scores . permute ( 0 , 2 , 3 , 1 ) . contiguous () . view ( n , - 1 , 2 ) #----------------------------------------------------------------------------# # \u8fdb\u884csoftmax\u6982\u7387\u8ba1\u7b97\uff0c\u6bcf\u4e2a\u5148\u9a8c\u6846\u53ea\u6709\u4e24\u4e2a\u5224\u522b\u7ed3\u679c # \u5185\u90e8\u5305\u542b\u7269\u4f53\u6216\u8005\u5185\u90e8\u4e0d\u5305\u542b\u7269\u4f53\uff0crpn_softmax_scores[:, :, 1]\u7684\u5185\u5bb9\u4e3a\u5305\u542b\u7269\u4f53\u7684\u6982\u7387 #----------------------------------------------------------------------------# rpn_softmax_scores = F . softmax ( rpn_scores , dim =- 1 ) rpn_fg_scores = rpn_softmax_scores [:, :, 1 ] . contiguous () rpn_fg_scores = rpn_fg_scores . view ( n , - 1 ) \u751f\u6210\u5148\u9a8c\u6846 #----------------------------------------------------------------------------# # \u751f\u6210\u5148\u9a8c\u6846\uff0c\u6b64\u65f6\u83b7\u5f97\u7684anchor\u662f\u5e03\u6ee1\u7f51\u683c\u70b9\u7684\uff0c\u5f53\u8f93\u5165\u56fe\u7247\u4e3a600,600,3\u7684\u65f6\u5019\uff0cshape\u4e3a(12996, 4) #----------------------------------------------------------------------------# anchor = _enumerate_shifted_anchor ( np . array ( self . anchor_base ), self . feat_stride , h , w ) \u5229\u7528\u5efa\u8bae\u6846\u7f51\u7edc\u5bf9\u5148\u9a8c\u6846\u8fdb\u884c\u8c03\u6574\uff0c\u518d\u8fdb\u884c\u7b5b\u9009\uff0c\u83b7\u5f97\u6700\u7ec8\u7684\u5efa\u8bae\u6846 \u901a\u8fc7\u7b2c\u4e8c\u6b65\u6211\u4eec\u83b7\u5f97\u4e8638x38x9\u4e2a\u5148\u9a8c\u6846\u7684\u9884\u6d4b\u7ed3\u679c\u3002\u9884\u6d4b\u7ed3\u679c\u5305\u542b\u4e24\u90e8\u5206\u3002 9 x 4\u7684\u5377\u79ef \u7528\u4e8e\u9884\u6d4b \u516c\u7528\u7279\u5f81\u5c42\u4e0a \u6bcf\u4e00\u4e2a\u7f51\u683c\u70b9\u4e0a \u6bcf\u4e00\u4e2a\u5148\u9a8c\u6846 \u7684\u53d8\u5316\u60c5\u51b5\u3002 9 x 2\u7684\u5377\u79ef \u7528\u4e8e\u9884\u6d4b \u516c\u7528\u7279\u5f81\u5c42\u4e0a \u6bcf\u4e00\u4e2a\u7f51\u683c\u70b9\u4e0a \u6bcf\u4e00\u4e2a\u9884\u6d4b\u6846 \u5185\u90e8\u662f\u5426\u5305\u542b\u4e86\u7269\u4f53\u3002 \u76f8\u5f53\u4e8e\u5c31\u662f\u5c06\u6574\u4e2a\u56fe\u50cf\u5206\u621038x38\u4e2a\u7f51\u683c\uff1b\u7136\u540e\u4ece\u6bcf\u4e2a\u7f51\u683c\u4e2d\u5fc3\u5efa\u7acb9\u4e2a\u5148\u9a8c\u6846\uff0c\u4e00\u517138x38x9\u4e2a\uff0c12996\u4e2a\u5148\u9a8c\u6846\u3002 \u5f53\u8f93\u5165\u56fe\u50cfshape\u4e0d\u540c\u65f6\uff0c\u5148\u9a8c\u6846\u7684\u6570\u91cf\u4e5f\u4f1a\u53d1\u751f\u6539\u53d8\u3002 \u5148\u9a8c\u6846\u867d\u7136\u53ef\u4ee5\u4ee3\u8868\u4e00\u5b9a\u7684 \u6846\u7684\u4f4d\u7f6e\u4fe1\u606f\u4e0e\u6846\u7684\u5927\u5c0f\u4fe1\u606f \uff0c\u4f46\u662f\u5176\u662f\u6709\u9650\u7684\uff0c\u65e0\u6cd5\u8868\u793a\u4efb\u610f\u60c5\u51b5\uff0c\u56e0\u6b64\u8fd8\u9700\u8981\u8c03\u6574\u3002 9 x 4\u4e2d\u76849\u8868\u793a\u4e86\u8fd9\u4e2a\u7f51\u683c\u70b9\u6240\u5305\u542b\u7684\u5148\u9a8c\u6846\u6570\u91cf\uff0c\u5176\u4e2d\u76844\u8868\u793a\u4e86\u6846\u7684\u4e2d\u5fc3\u4e0e\u957f\u5bbd\u7684\u8c03\u6574\u60c5\u51b5\u3002 \u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b\uff1a class ProposalCreator (): def __init__ ( self , mode , nms_iou = 0.7 , n_train_pre_nms = 12000 , n_train_post_nms = 600 , n_test_pre_nms = 3000 , n_test_post_nms = 300 , min_size = 16 ): #-----------------------------------# # \u8bbe\u7f6e\u9884\u6d4b\u8fd8\u662f\u8bad\u7ec3 #-----------------------------------# self . mode = mode #-----------------------------------# # \u5efa\u8bae\u6846\u975e\u6781\u5927\u6291\u5236\u7684iou\u5927\u5c0f #-----------------------------------# self . nms_iou = nms_iou #-----------------------------------# # \u8bad\u7ec3\u7528\u5230\u7684\u5efa\u8bae\u6846\u6570\u91cf #-----------------------------------# self . n_train_pre_nms = n_train_pre_nms self . n_train_post_nms = n_train_post_nms #-----------------------------------# # \u9884\u6d4b\u7528\u5230\u7684\u5efa\u8bae\u6846\u6570\u91cf #-----------------------------------# self . n_test_pre_nms = n_test_pre_nms self . n_test_post_nms = n_test_post_nms self . min_size = min_size def __call__ ( self , loc , score , anchor , img_size , scale = 1. ): if self . mode == \"training\" : n_pre_nms = self . n_train_pre_nms n_post_nms = self . n_train_post_nms else : n_pre_nms = self . n_test_pre_nms n_post_nms = self . n_test_post_nms #-----------------------------------# # \u5c06\u5148\u9a8c\u6846\u8f6c\u6362\u6210tensor #-----------------------------------# anchor = torch . from_numpy ( anchor ) if loc . is_cuda : anchor = anchor . cuda () #-----------------------------------# # \u5c06RPN\u7f51\u7edc\u9884\u6d4b\u7ed3\u679c\u8f6c\u5316\u6210\u5efa\u8bae\u6846 #-----------------------------------# roi = loc2bbox ( anchor , loc ) #-----------------------------------# # \u9632\u6b62\u5efa\u8bae\u6846\u8d85\u51fa\u56fe\u50cf\u8fb9\u7f18 #-----------------------------------# roi [:, [ 0 , 2 ]] = torch . clamp ( roi [:, [ 0 , 2 ]], min = 0 , max = img_size [ 1 ]) roi [:, [ 1 , 3 ]] = torch . clamp ( roi [:, [ 1 , 3 ]], min = 0 , max = img_size [ 0 ]) #-----------------------------------# # \u5efa\u8bae\u6846\u7684\u5bbd\u9ad8\u7684\u6700\u5c0f\u503c\u4e0d\u53ef\u4ee5\u5c0f\u4e8e16 #-----------------------------------# min_size = self . min_size * scale keep = torch . where ((( roi [:, 2 ] - roi [:, 0 ]) >= min_size ) & (( roi [:, 3 ] - roi [:, 1 ]) >= min_size ))[ 0 ] #-----------------------------------# # \u5c06\u5bf9\u5e94\u7684\u5efa\u8bae\u6846\u4fdd\u7559\u4e0b\u6765 #-----------------------------------# roi = roi [ keep , :] score = score [ keep ] #-----------------------------------# # \u6839\u636e\u5f97\u5206\u8fdb\u884c\u6392\u5e8f\uff0c\u53d6\u51fa\u5efa\u8bae\u6846 #-----------------------------------# order = torch . argsort ( score , descending = True ) if n_pre_nms > 0 : order = order [: n_pre_nms ] roi = roi [ order , :] score = score [ order ] #-----------------------------------# # \u5bf9\u5efa\u8bae\u6846\u8fdb\u884c\u975e\u6781\u5927\u6291\u5236 # \u4f7f\u7528\u5b98\u65b9\u7684\u975e\u6781\u5927\u6291\u5236\u4f1a\u5feb\u975e\u5e38\u591a #-----------------------------------# keep = nms ( roi , score , self . nms_iou ) keep = keep [: n_post_nms ] roi = roi [ keep ] return roi","title":"2.Proposal\u5efa\u8bae\u6846\u7684\u89e3\u7801"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#3_1","text":"\u5efa\u8bae\u6846\u662f\u7528\u4e8e\u521d\u6b65\u7b5b\u9009\u56fe\u50cf\u4e2d\u54ea\u4e9b\u533a\u57df\u53ef\u80fd\u542b\u6709\u7269\u4f53\u7684\u4e00\u79cd\u6280\u672f\u3002 \u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u516c\u7528\u7279\u5f81\u5c42\uff0c\u5f53\u8f93\u5165\u56fe\u7247\u4e3a600x600x3\u65f6\uff0c\u5176\u5f62\u72b6\u4e3a38x38x1024\u3002 \u516c\u7528\u7279\u5f81\u5c42\u4e2d\u768438x38\u5bf9\u5e94\u7740\u56fe\u50cf\u4e2d\u768438x38\u4e2a\u533a\u57df\uff0c\u5176\u4e2d\u6bcf\u4e2a\u70b9\u76f8\u5f53\u4e8e\u8be5\u533a\u57df\u5185\u6240\u6709\u7279\u5f81\u7684\u6c47\u603b\u3002 \u5efa\u8bae\u6846\u5bf9\u8fd938x38\u4e2a\u533a\u57df\u8fdb\u884c\u622a\u53d6\uff0c\u5373\u8ba4\u4e3a\u8fd9\u4e9b\u533a\u57df\u53ef\u80fd\u5305\u542b\u76ee\u6807\uff0c\u5e76\u5c06\u622a\u53d6\u7684\u7ed3\u679c\u8fdb\u884cresize\uff0c\u8c03\u6574\u4e3a14x14x1024\u7684\u5927\u5c0f\u3002 \u5bf9\u6bcf\u4e2a\u5efa\u8bae\u6846\u518d\u6b21\u8fdb\u884cResNet\u539f\u6709\u7684\u7b2c\u4e94\u6b21\u538b\u7f29\u3002\u538b\u7f29\u5b8c\u6210\u540e\u8fdb\u884c\u5e73\u5747\u6c60\u5316\u548c\u5c55\u5e73\u64cd\u4f5c\uff0c\u6700\u540e\u5206\u522b\u8fdb\u884c\u4e00\u4e2anum_classes\u7684\u5168\u8fde\u63a5\u5c42\u548c(num_classes)x4\u7684\u5168\u8fde\u63a5\u5c42\u3002 num_classes\u7684\u5168\u8fde\u63a5\u5c42\u7528\u4e8e\u5bf9\u6700\u540e\u83b7\u5f97\u7684\u6846\u8fdb\u884c\u5206\u7c7b\uff0c\u800c(num_classes)x4\u7684\u5168\u8fde\u63a5\u5c42\u7528\u4e8e\u5bf9\u76f8\u5e94\u7684\u5efa\u8bae\u6846\u8fdb\u884c\u8c03\u6574\u3002 \u901a\u8fc7\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u53ef\u4ee5\u83b7\u5f97\u6240\u6709\u5efa\u8bae\u6846\u7684\u8c03\u6574\u60c5\u51b5\u4ee5\u53ca\u8fd9\u4e9b\u5efa\u8bae\u6846\u5185\u7269\u4f53\u7684\u7c7b\u522b\u3002 \u5b9e\u9645\u4e0a\uff0c\u4e0a\u4e00\u6b65\u5f97\u5230\u7684\u5efa\u8bae\u6846\u5c31\u662fROI\uff08\u611f\u5174\u8da3\u533a\u57df\uff09\u7684\u5148\u9a8c\u6846\u3002","title":"3.\u5c0f\u7ed3"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#roipooling","text":"\u200b \u5bf9Proposal\u5efa\u8bae\u6846\u52a0\u4ee5\u5229\u7528\u7684\u8fc7\u7a0b\u4e0eshape\u53d8\u5316\u5982\u56fe\u6240\u793a,\u5efa\u8bae\u6846\u8c03\u6574\u540e\u7684\u7ed3\u679c\u5c31\u662f\u6700\u7ec8\u7684\u9884\u6d4b\u7ed3\u679c\u4e86\uff0c\u53ef\u4ee5\u5728\u56fe\u4e0a\u8fdb\u884c\u7ed8\u753b\u4e86\u3002","title":"\u56db\u3001RoiPooling"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#roipooling_1","text":"\u200b \u5c06proposal feature map\u8fdb\u884c\u5206\u533a\u57df\uff0c\u7136\u540e\u5bf9\u6bcf\u4e00\u4e2a\u533a\u57df\u5404\u81ea\u8fdb\u884c\u6700\u5927\u6c60\u5316\u5f97\u5230 \\(2 \\times 2\\) \u7684\u7279\u5f81\u56fe2\u3002\u5728faster-rcnn\u4e2d\u662f\u5c06proposal feature map\u5206\u5272\u6210 \\(14 \\times 14\\) \u7684\u533a\u57df \u56fe\u7247\u6d4b\u8bd5\u4fe1\u606f\u6253\u5370 \u6e90\u7801 classifier.py class Resnet50RoIHead ( nn . Module ): def __init__ ( self , n_class , roi_size , spatial_scale , classifier ): super ( Resnet50RoIHead , self ) . __init__ () self . classifier = classifier #--------------------------------------# # \u5bf9ROIPooling\u540e\u7684\u7684\u7ed3\u679c\u8fdb\u884c\u56de\u5f52\u9884\u6d4b #--------------------------------------# self . cls_loc = nn . Linear ( 2048 , n_class * 4 ) #-----------------------------------# # \u5bf9ROIPooling\u540e\u7684\u7684\u7ed3\u679c\u8fdb\u884c\u5206\u7c7b #-----------------------------------# self . score = nn . Linear ( 2048 , n_class ) #-----------------------------------# # \u6743\u503c\u521d\u59cb\u5316 #-----------------------------------# normal_init ( self . cls_loc , 0 , 0.001 ) normal_init ( self . score , 0 , 0.01 ) self . roi = RoIPool (( roi_size , roi_size ), spatial_scale ) def forward ( self , x , rois , roi_indices , img_size ): n , _ , _ , _ = x . shape if x . is_cuda : roi_indices = roi_indices . cuda () rois = rois . cuda () print ( 'Base_layers:' , x . size ()) print ( 'roi_indices:' , roi_indices . size ()) print ( 'rois:' , rois . size ()) rois = torch . flatten ( rois , 0 , 1 ) roi_indices = torch . flatten ( roi_indices , 0 , 1 ) rois_feature_map = torch . zeros_like ( rois ) rois_feature_map [:, [ 0 , 2 ]] = rois [:, [ 0 , 2 ]] / img_size [ 1 ] * x . size ()[ 3 ] rois_feature_map [:, [ 1 , 3 ]] = rois [:, [ 1 , 3 ]] / img_size [ 0 ] * x . size ()[ 2 ] indices_and_rois = torch . cat ([ roi_indices [:, None ], rois_feature_map ], dim = 1 ) #-----------------------------------# # \u5229\u7528\u5efa\u8bae\u6846\u5bf9\u516c\u7528\u7279\u5f81\u5c42\u8fdb\u884c\u622a\u53d6 #-----------------------------------# pool = self . roi ( x , indices_and_rois ) #-----------------------------------# # \u5229\u7528classifier\u7f51\u7edc\u8fdb\u884c\u7279\u5f81\u63d0\u53d6 #-----------------------------------# fc7 = self . classifier ( pool ) #--------------------------------------------------------------# # \u5f53\u8f93\u5165\u4e3a\u4e00\u5f20\u56fe\u7247\u7684\u65f6\u5019\uff0c\u8fd9\u91cc\u83b7\u5f97\u7684f7\u7684shape\u4e3a[300, 2048] #--------------------------------------------------------------# fc7 = fc7 . view ( fc7 . size ( 0 ), - 1 ) roi_cls_locs = self . cls_loc ( fc7 ) roi_scores = self . score ( fc7 ) roi_cls_locs = roi_cls_locs . view ( n , - 1 , roi_cls_locs . size ( 1 )) roi_scores = roi_scores . view ( n , - 1 , roi_scores . size ( 1 )) return roi_cls_locs , roi_scores","title":"RoiPooling\u5c42\u5de5\u4f5c"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_1","text":"\u200b \u5728\u7b2c\u56db\u6b65\u7684\u7ed3\u5c3e\uff0c\u6211\u4eec\u5bf9\u5efa\u8bae\u6846\u8fdb\u884c\u518d\u4e00\u6b21\u8fdb\u884c\u89e3\u7801\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u9884\u6d4b\u6846\u5728\u539f\u56fe\u4e0a\u7684\u4f4d\u7f6e\uff0c\u800c\u4e14\u8fd9\u4e9b\u9884\u6d4b\u6846\u90fd\u662f\u7ecf\u8fc7\u7b5b\u9009\u7684\u3002\u8fd9\u4e9b\u7b5b\u9009\u540e\u7684\u6846\u53ef\u4ee5\u76f4\u63a5\u7ed8\u5236\u5728\u56fe\u7247\u4e0a\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u7ed3\u679c\u4e86\u3002","title":"\u4e94\u3001\u5728\u539f\u56fe\u4e0a\u8fdb\u884c\u7ed8\u5236"},{"location":"Documentation/study-notes/faster-rcnn/faster-rcnn-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_2","text":"\u4ee5\u4e0b\u662f\u5305\u62ec\u4e3b\u5e72\u7f51\u7edc\u5728\u5185\u7684\u66f4\u5b8c\u6574\u7684Faster R-CNN\u6d41\u7a0b\u793a\u56fe\uff1a \u8f93\u5165\u56fe\u7247 \u2193 \u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\uff08\u5982 ResNet \uff09 \u2193 \u5019\u9009\u6846\u63d0\u53d6\uff08 RPN \uff09 \u2193 \u5171\u4eab\u7279\u5f81\u63d0\u53d6 \u2193 RoI Pooling \u2193 \u6837\u672c\u6807\u7b7e\u5206\u914d\u548c\u91c7\u6837 \u2193 \u7279\u5f81\u63d0\u53d6\u548c\u5206\u7c7b \u2193 \u8fb9\u754c\u6846\u56de\u5f52 \u2193 \u6700\u7ec8\u68c0\u6d4b\u6846 \u8f93\u5165\u56fe\u7247\uff1a\u5c06\u9700\u8981\u8fdb\u884c\u76ee\u6807\u68c0\u6d4b\u7684\u56fe\u7247\u4f5c\u4e3a\u8f93\u5165\u3002 \u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\uff1a\u4f7f\u7528\u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\uff08\u5982ResNet\uff09\u5bf9\u8f93\u5165\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5f97\u5230\u4e00\u4e2a\u5171\u4eab\u7684\u7279\u5f81\u56fe\u3002 \u5019\u9009\u6846\u63d0\u53d6\uff08RPN\uff09\uff1a\u4f7f\u7528Region Proposal Network\uff08RPN\uff09\u4ece\u5171\u4eab\u7684\u7279\u5f81\u56fe\u4e2d\u63d0\u53d6\u5019\u9009\u6846\uff08Proposal\uff09\uff0c\u8fd9\u4e9b\u5019\u9009\u6846\u662f\u53ef\u80fd\u542b\u6709\u7269\u4f53\u7684\u533a\u57df\u3002 \u5171\u4eab\u7279\u5f81\u63d0\u53d6\uff1a\u5c06\u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u63d0\u53d6\u7684\u5171\u4eab\u7279\u5f81\u56fe\u7528\u4e8e\u540e\u7eed\u6b65\u9aa4\uff0c\u5982RoI Pooling\u548c\u5206\u7c7b\u56de\u5f52\u3002 RoI Pooling\uff1a\u5c06RPN\u63d0\u53d6\u7684\u5019\u9009\u6846\u533a\u57df\u6620\u5c04\u5230\u5171\u4eab\u7279\u5f81\u56fe\u4e0a\uff0c\u7136\u540e\u4f7f\u7528RoI Pooling\u64cd\u4f5c\u5c06\u533a\u57df\u6620\u5c04\u4e3a\u56fa\u5b9a\u5927\u5c0f\u7684\u7279\u5f81\u56fe\u3002 \u6837\u672c\u6807\u7b7e\u5206\u914d\u548c\u91c7\u6837\uff1a\u5bf9RoI Pooling\u540e\u7684\u7279\u5f81\u8fdb\u884c\u6837\u672c\u6807\u7b7e\u5206\u914d\u548c\u91c7\u6837\uff0c\u786e\u5b9a\u6b63\u8d1f\u6837\u672c\u3002 \u7279\u5f81\u63d0\u53d6\u548c\u5206\u7c7b\uff1a\u4f7f\u7528\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5bf9RoI Pooling\u540e\u7684\u7279\u5f81\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u4f7f\u7528\u5168\u8fde\u63a5\u5c42\u5bf9\u63d0\u53d6\u7684\u7279\u5f81\u8fdb\u884c\u76ee\u6807\u5206\u7c7b\u3002 \u8fb9\u754c\u6846\u56de\u5f52\uff1a\u4f7f\u7528\u53e6\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\u5bf9RoI Pooling\u540e\u7684\u7279\u5f81\u8fdb\u884c\u8fb9\u754c\u6846\u56de\u5f52\uff0c\u7cbe\u786e\u5b9a\u4f4d\u76ee\u6807\u7684\u4f4d\u7f6e\u3002 \u6700\u7ec8\u68c0\u6d4b\u6846\uff1a\u6839\u636e\u5206\u7c7b\u548c\u56de\u5f52\u7684\u7ed3\u679c\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u68c0\u6d4b\u6846\uff0c\u5e76\u8fdb\u884c\u975e\u6781\u5927\u503c\u6291\u5236\uff08NMS\uff09\u5904\u7406\uff0c\u6d88\u9664\u91cd\u53e0\u7684\u68c0\u6d4b\u6846\u3002 Faster R-CNN\u901a\u8fc7\u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u3001\u5019\u9009\u6846\u63d0\u53d6\u3001\u5171\u4eab\u7279\u5f81\u63d0\u53d6\u3001RoI Pooling\u548c\u540e\u7eed\u7684\u5206\u7c7b\u4e0e\u56de\u5f52\u64cd\u4f5c\uff0c\u5b9e\u73b0\u4e86\u5bf9\u8f93\u5165\u56fe\u7247\u4e2d\u76ee\u6807\u7684\u51c6\u786e\u68c0\u6d4b\u4e0e\u5b9a\u4f4d\u3002","title":"\u516d\u3001\u6574\u4f53\u6d41\u7a0b"},{"location":"Documentation/study-notes/mkdocs/mkdocs-%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/","text":"mkdocs-\u6dfb\u52a0\u8bc4\u8bba\u529f\u80fd \u00b6 \u53c2\u8003\u8d44\u6599Material for MkDocs Adding a comment system 1.yml\u6587\u4ef6\u914d\u7f6e \u00b6 markdown_extensions: pymdownx.critic\uff1a\u7528\u4e8e\u6dfb\u52a0\u6279\u6ce8\u548c\u8bc4\u8bba\u529f\u80fd\u3002 theme\uff1a custom_dir: overrides 2.\u6240\u9700\u4f9d\u8d56 \u00b6 \u4f7f\u7528pip\u5b89\u88c5\u4ee5\u4e0b\u4f9d\u8d56 Markdown pymdown-extensions 3.\u65b0\u5efaoverrides\u6587\u4ef6\u5939 \u00b6 overrides \u6587\u4ef6\u5939\u5b58\u653e\u4e00\u4e2a main.html \u6587\u4ef6\uff0c\u6b64\u6587\u4ef6\u7528\u4e8e\u914d\u7f6e\u8bc4\u8bba\u7cfb\u7edf giscus \u7684\u914d\u7f6e\u6587\u4ef6 \u5728\u4f7f\u7528 Giscus \u4e4b\u524d\uff0c\u60a8\u9700\u8981\u5b8c\u6210\u4ee5\u4e0b\u6b65\u9aa4\uff1a (1) \u5b89\u88c5 Giscus GitHub \u5e94\u7528\u7a0b\u5e8f \u00b6 \u6388\u4e88\u5bf9\u5e94\u5c06\u8bc4\u8bba\u4f5c\u4e3a GitHub \u8ba8\u8bba\u6258\u7ba1\u7684\u5b58\u50a8\u5e93\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u8bf7\u6ce8\u610f\uff0c\u8fd9\u53ef\u80fd\u662f\u4e0e\u60a8\u7684\u6587\u6863\u4e0d\u540c\u7684\u5b58\u50a8\u5e93\u3002 \u70b9\u51fb Giscus GitHub \u5e94\u7528\u7a0b\u5e8f \u6839\u636e\u9700\u6c42\u9009\u62e9\u5bf9\u5e94\u65b9\u6848 \u8bbf\u95ee Giscus \u5e76\u901a\u8fc7\u5176\u914d\u7f6e\u5de5\u5177\u751f\u6210\u7247\u6bb5 \u4ee5\u52a0\u8f7d\u8bc4\u8bba\u7cfb\u7edf\u3002 \u9009\u62e9\u81ea\u5df1\u7684\u4ed3\u5e93 \u6839\u636e\u559c\u597d\u81ea\u884c\u9009\u62e9\u53c2\u6570 \u590d\u5236\u4e0b\u65b9\u4ee3\u7801 \u586b\u5145 main.html \u6587\u4ef6\u5185\u5bb9 \u4f7f\u7528\u4e0a\u6b65\u590d\u5236\u5185\u5bb9\u66ff\u6362\u4e0b\u9762\u5bf9\u5e94\u90e8\u5206 {% extends \"base.html\" %} {% block disqus %} < script src = \"\" data-repo = \"\" data-repo-id = \"\" data-category = \"\" data-category-id = \"\" data-mapping = \"\" data-strict = \"\" data-reactions-enabled = \"\" data-emit-metadata = \"\" data-input-position = \"\" data-theme = \"\" data-lang = \"\" data-loading = \"\" crossorigin = \"\" async > </ script > < script > var palette = __get ( \"__palette\" ) if ( palette && typeof palette . color === \"object\" ) { if ( palette . color . scheme === \"slate\" ) { const giscus = document . querySelector ( \"script[src*=giscus]\" ) giscus . setAttribute ( \"data-theme\" , \"dark_protanopia\" ) } } document . addEventListener ( \"DOMContentLoaded\" , function () { const ref = document . querySelector ( \"[data-md-component=palette]\" ) ref . addEventListener ( \"change\" , function () { var palette = __get ( \"__palette\" ) if ( palette && typeof palette . color === \"object\" ) { const theme = palette . color . scheme === \"slate\" ? \"dark_protanopia\" : \"light_protanopia\" const frame = document . querySelector ( \".giscus-frame\" ) frame . contentWindow . postMessage ({ giscus : { setConfig : { theme } } }, \"https://giscus.app\" ) } }) }) </ script > {% endblock %}","title":"\u6dfb\u52a0\u8bc4\u8bba\u529f\u80fd"},{"location":"Documentation/study-notes/mkdocs/mkdocs-%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/#mkdocs-","text":"\u53c2\u8003\u8d44\u6599Material for MkDocs Adding a comment system","title":"mkdocs-\u6dfb\u52a0\u8bc4\u8bba\u529f\u80fd"},{"location":"Documentation/study-notes/mkdocs/mkdocs-%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/#1yml","text":"markdown_extensions: pymdownx.critic\uff1a\u7528\u4e8e\u6dfb\u52a0\u6279\u6ce8\u548c\u8bc4\u8bba\u529f\u80fd\u3002 theme\uff1a custom_dir: overrides","title":"1.yml\u6587\u4ef6\u914d\u7f6e"},{"location":"Documentation/study-notes/mkdocs/mkdocs-%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/#2","text":"\u4f7f\u7528pip\u5b89\u88c5\u4ee5\u4e0b\u4f9d\u8d56 Markdown pymdown-extensions","title":"2.\u6240\u9700\u4f9d\u8d56"},{"location":"Documentation/study-notes/mkdocs/mkdocs-%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/#3overrides","text":"overrides \u6587\u4ef6\u5939\u5b58\u653e\u4e00\u4e2a main.html \u6587\u4ef6\uff0c\u6b64\u6587\u4ef6\u7528\u4e8e\u914d\u7f6e\u8bc4\u8bba\u7cfb\u7edf giscus \u7684\u914d\u7f6e\u6587\u4ef6 \u5728\u4f7f\u7528 Giscus \u4e4b\u524d\uff0c\u60a8\u9700\u8981\u5b8c\u6210\u4ee5\u4e0b\u6b65\u9aa4\uff1a","title":"3.\u65b0\u5efaoverrides\u6587\u4ef6\u5939"},{"location":"Documentation/study-notes/mkdocs/mkdocs-%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/#1-giscus-github","text":"\u6388\u4e88\u5bf9\u5e94\u5c06\u8bc4\u8bba\u4f5c\u4e3a GitHub \u8ba8\u8bba\u6258\u7ba1\u7684\u5b58\u50a8\u5e93\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u8bf7\u6ce8\u610f\uff0c\u8fd9\u53ef\u80fd\u662f\u4e0e\u60a8\u7684\u6587\u6863\u4e0d\u540c\u7684\u5b58\u50a8\u5e93\u3002 \u70b9\u51fb Giscus GitHub \u5e94\u7528\u7a0b\u5e8f \u6839\u636e\u9700\u6c42\u9009\u62e9\u5bf9\u5e94\u65b9\u6848 \u8bbf\u95ee Giscus \u5e76\u901a\u8fc7\u5176\u914d\u7f6e\u5de5\u5177\u751f\u6210\u7247\u6bb5 \u4ee5\u52a0\u8f7d\u8bc4\u8bba\u7cfb\u7edf\u3002 \u9009\u62e9\u81ea\u5df1\u7684\u4ed3\u5e93 \u6839\u636e\u559c\u597d\u81ea\u884c\u9009\u62e9\u53c2\u6570 \u590d\u5236\u4e0b\u65b9\u4ee3\u7801 \u586b\u5145 main.html \u6587\u4ef6\u5185\u5bb9 \u4f7f\u7528\u4e0a\u6b65\u590d\u5236\u5185\u5bb9\u66ff\u6362\u4e0b\u9762\u5bf9\u5e94\u90e8\u5206 {% extends \"base.html\" %} {% block disqus %} < script src = \"\" data-repo = \"\" data-repo-id = \"\" data-category = \"\" data-category-id = \"\" data-mapping = \"\" data-strict = \"\" data-reactions-enabled = \"\" data-emit-metadata = \"\" data-input-position = \"\" data-theme = \"\" data-lang = \"\" data-loading = \"\" crossorigin = \"\" async > </ script > < script > var palette = __get ( \"__palette\" ) if ( palette && typeof palette . color === \"object\" ) { if ( palette . color . scheme === \"slate\" ) { const giscus = document . querySelector ( \"script[src*=giscus]\" ) giscus . setAttribute ( \"data-theme\" , \"dark_protanopia\" ) } } document . addEventListener ( \"DOMContentLoaded\" , function () { const ref = document . querySelector ( \"[data-md-component=palette]\" ) ref . addEventListener ( \"change\" , function () { var palette = __get ( \"__palette\" ) if ( palette && typeof palette . color === \"object\" ) { const theme = palette . color . scheme === \"slate\" ? \"dark_protanopia\" : \"light_protanopia\" const frame = document . querySelector ( \".giscus-frame\" ) frame . contentWindow . postMessage ({ giscus : { setConfig : { theme } } }, \"https://giscus.app\" ) } }) }) </ script > {% endblock %}","title":"(1)\u5b89\u88c5 Giscus GitHub \u5e94\u7528\u7a0b\u5e8f"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/","text":"C/C++\u73af\u5883\u914d\u7f6e \u00b6 \u524d\u8a00 \u00b6 \u53c2\u8003\u94fe\u63a5\uff1a bilibili up\u4e3b _\u91cd\u88c5\u5c0f\u515419C \u5b8c\u7f8e\u914d\u7f6evscode\u8fd0\u884cc/c++\u73af\u5883\uff0c2022\u6700\u65b0\u6559\u7a0b \u73af\u5883\uff1aWindows 10 \uff0cvscode\uff0c mingw64 \u5728\u5b66\u4f1a\u5b89\u88c5\u914d\u7f6e\u524d\uff0c\u9996\u5148\u8981\u5b66\u4f1a\u5378\u8f7d\uff01\uff01\uff01\uff01 \u4e00. \u5b8c\u5168\u5378\u8f7dvscode \u00b6 1.\u5378\u8f7dvscode \u00b6 \\[ \u8bbe\u7f6e \\rightarrow \u5e94\u7528 \\rightarrow Microsoft\\ Visual\\ Studio\\ Code (User) \\] 2.\u5220\u9664 .vscode \u914d\u7f6e\u6587\u4ef6 \u00b6 \u200b \u8be5\u8def\u5f84\u4e0b\u4fdd\u5b58\u7684\u662f Visual Studio Code \u7684\u9879\u76ee\u7279\u5b9a\u914d\u7f6e\u6587\u4ef6\u7684\u76ee\u5f55\u3002\u5176\u4e2d\u53ef\u4ee5\u5305\u542b\u4e00\u4e9b\u914d\u7f6e\u6587\u4ef6\uff0c\u4f8b\u5982 settings.json \u548c launch.json \u7528\u4e8e\u914d\u7f6e\u5de5\u4f5c\u7a7a\u95f4\u7684\u8bbe\u7f6e\u548c\u8c03\u8bd5\u5668\u7684\u542f\u52a8\u914d\u7f6e\uff0c\u8fd8\u5305\u62ec\u4e86 tasks.json \u7528\u4e8e\u914d\u7f6e\u4efb\u52a1\u8fd0\u884c\u5668\uff0c\u8def\u5f84\u5982\u4e0b\u3002 $$ C:\\Users\\yhl $$ 3.\u5220\u9664 Code \u6587\u4ef6\u5939 \u00b6 \u200b Visual Studio Code \u7684\u7528\u6237\u914d\u7f6e\u548c\u6269\u5c55\u6587\u4ef6\u5b58\u50a8\u7684\u9ed8\u8ba4\u8def\u5f84\u3002\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\uff0c\u4f60\u4f1a\u627e\u5230\u7528\u6237\u8bbe\u7f6e\u3001\u5df2\u5b89\u88c5\u7684\u6269\u5c55\u3001\u4ee3\u7801\u7247\u6bb5\u548c\u5176\u4ed6\u7528\u6237\u76f8\u5173\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u8fd9\u4e2a\u6587\u4ef6\u5939\u5b58\u50a8\u4e86\u4f60\u5728\u4f7f\u7528 Visual Studio Code \u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u4e00\u4e9b\u4e2a\u6027\u5316\u8bbe\u7f6e\u548c\u6570\u636e,\u8def\u5f84\u5982\u4e0b\u3002 $$ C:\\Users\\yhl\\AppData\\Roaming $$ \u6ce8\u610f \uff1aAppData\u6587\u4ef6\u5939\u627e\u4e0d\u5230\u65f6\uff0c\u8bf7\u5c06 \u9690\u85cf\u9879\u76ee \u52fe\u9009 \u5b8c\u6210\u4e0a\u8ff0\u64cd\u4f5c\u540e\uff0cvscode\u5df2\u7ecf\u5728\u7535\u8111\u4e0a\u5f7b\u5e95\u5220\u9664\u4e86\u3002 \u4e8c. \u5b89\u88c5vscode \u00b6 \u200b vscode\u4e0b\u8f7d\u5730\u5740 \u672c\u6587\u4e0d\u8fc7\u591a\u8d58\u8ff0\uff0c\u8bf7\u81ea\u884c\u4e0b\u8f7d\uff0c\u5e76\u5b89\u88c5\u81f3\u9002\u5f53\u4f4d\u7f6e\u3002 \u4e09.\u5b89\u88c5mingw6 \u00b6 1.\u4e0b\u8f7dmingw6 \u00b6 \u200b mingw6\u4e0b\u8f7d\u5730\u5740 \u200b mingw6 \u662f\u6307 \u201cMinimalist GNU for Windows 6\u201d \uff0c\u662f\u4e00\u4e2a\u7528\u4e8e\u5728 Windows \u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fdb\u884c\u5f00\u53d1\u7684\u5f00\u6e90\u5de5\u5177\u96c6\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u7ec4 GNU \u5de5\u5177\uff0c\u4f8b\u5982 GCC \u7f16\u8bd1\u5668\u3001 GNU Make \u7b49\uff0c\u4f7f\u5f00\u53d1\u8005\u80fd\u591f\u5728 Windows \u5e73\u53f0\u4e0a\u8fdb\u884c\u7c7b Unix \u73af\u5883\u4e0b\u7684\u5f00\u53d1\u5de5\u4f5c\u3002\u8fd9\u4e9b\u5de5\u5177\u5305\u62ec\u4e86 C\u3001C++\u3001Objective-C\u3001Fortran \u7b49\u8bed\u8a00\u7684\u7f16\u8bd1\u5668\u548c\u76f8\u5173\u5de5\u5177\uff0c\u4f7f\u5f97\u5f00\u53d1\u8005\u53ef\u4ee5\u5728 Windows \u4e0a\u8fdb\u884c\u8de8\u5e73\u53f0\u7684\u5f00\u53d1\u5de5\u4f5c\u3002mingw6 \u662f\u5728 mingw-w64 \u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4e86\u4e00\u4e9b\u6539\u8fdb\uff0c\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u529f\u80fd\u548c\u6027\u80fd\u6539\u8fdb\u3002 2.\u5b89\u88c5mingw6 \u00b6 \u8bf7\u6ce8\u610f\uff0c\u8def\u5f84\u4e0d\u8981\u5b58\u5728\u7a7a\u683c\u548c\u4e2d\u6587 3.\u914d\u7f6emingw6\u73af\u5883\u53d8\u91cf \u00b6 \u6253\u5f00mingw6\u5b89\u88c5\u7684\u8def\u5f84\uff0c\u8fdb\u5165 bin \u76ee\u5f55\uff0c\u590d\u5236\u8be5\u8def\u5f84\uff0c\u4ee5\u4e0b\u662f\u4f5c\u8005\u5b89\u88c5\u8def\u5f84\uff0c\u8bfb\u8005\u6839\u636e\u81ea\u5df1\u7684\u8def\u5f84\u8fdb\u884c\u66f4\u6362\u3002 $$ D:\\MinGW\\bin $$ 4.\u8fdb\u5165\u7cfb\u7edf\u73af\u5883\u53d8\u91cf \u00b6 \u4f9d\u6b21\u70b9\u51fb\uff1a \u4f5c\u8005\u4e00\u822c\u9009\u62e9\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\uff0c\u8bfb\u8005\u53ef\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u9009\u62e9 $$ \u9ad8\u7ea7 \\rightarrow \u73af\u5883\u53d8\u91cf \\rightarrow \u7528\u6237\u73af\u5883\u53d8\u91cf/\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\uff08\u524d\u8005\u4e3a\u5f53\u524d\u7528\u6237\uff0c\u540e\u8005\u4e3a\u6240\u6709\u7528\u6237\uff09\\rightarrow Path \\rightarrow \u65b0\u5efa $$ \u5c06\u4e0a\u4e00\u6b65\u590d\u5236\u7684\u8def\u5f84\u586b\u5165\uff0c\u7136\u540e\u70b9\u51fb 3\u6b21\u786e\u5b9a 5.\u67e5\u770b\u73af\u5883\u53d8\u91cf\u662f\u5426\u8bbe\u7f6e\u6210\u529f \u00b6 win + r \u6253\u5f00cmd\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4 gcc -v g++ -v \u7ed3\u679c\u5c55\u793a \u56db.\u914d\u7f6evscode \u00b6 1.\u5b89\u88c5\u6269\u5c55 \u00b6 coderu nner C/C++ \u53ef\u9009\u63d2\u4ef6\uff1aChi nese (Simpli f ied) (\u7b80\u4f53\u4e2d\u6587) La n guage Pack \u5b89\u88c5\u540e\u4f1a\u63d0\u793a\u91cd\u542f\u751f\u6548 2.\u914d\u7f6eCode Runner\u6269\u5c55 \u00b6 \u200b \u70b9\u51fb coderunner \u6269\u5c55\uff0c\u6309\u56fe\u793a\u6307\u5f15\u64cd\u4f5c \u200b \u627e\u5230run in terminal \u548csave file before run\uff08\u5728\u8fd0\u884c\u4e4b\u524d\u4fdd\u5b58\uff09\uff0c\u5c06\u5176\u52fe\u9009 3.\u914d\u7f6eC/C++\u6269\u5c55 \u00b6 \u627e\u5230compiler path\u586b\u5165\u4ee5\u4e0b\u5185\u5bb9 \u6ce8\u610f : D:\\MinGW\\bin\\g++.exe \u4fee\u6539\u4e3a\u4f60\u7535\u8111\u4e0a\u7684\u5b9e\u9645\u8def\u5f84 { \"code-runner.runInTerminal\" : true , \"code-runner.saveFileBeforeRun\" : true , \"C_Cpp.default.compilerPath\" : \"D:\\\\MinGW\\\\bin\\\\g++.exe\" } \u9009\u62e9Cpp Standard\u548cC Standard\u7248\u672c\uff0c\u9009\u62e9C11/C14 \u5747\u53ef \u6dfb\u52a0 Include Path \u9009\u62e9Intelli Sense Mode\uff0c \u9009\u62e9gcc-x64 \u68c0\u67e5\u5b8c\u6bd5\u540e\u5173\u95ed\u6b64\u6269\u5c55 \u4e94.\u6d4b\u8bd5\u4ee3\u7801 \u00b6 $$ \u6587\u4ef6 \\rightarrow \u6253\u5f00\u6587\u4ef6\u5939 \\rightarrow \u8fd9\u91cc\u9009\u62e9\u4e00\u4e2a\u4f60\u5b58\u653e\u4ee3\u7801\u7684\u6587\u4ef6\u5939 $$ 1.\u66f4\u6362C/C++\u6269\u5c55\u7248\u672c \u00b6 \u200b \u4f5c\u8005\u4f7f\u7528 1.15.4 , \u8bfb\u8005\u53ef\u6839\u636e\u5177\u4f53\u9700\u6c42\u9009\u62e9\u7248\u672c\u3002 2.\u4f7f\u7528cmd\u7ec8\u7aef \u00b6 \u200b \u6309\u56fe\u793a\u64cd\u4f5c\uff0c\u5c06 lanuch.json \u5185\u7684 externalConsole \u503c\u6539\u4e3a true \u6ce8\u610f \uff1a\u5c3d\u91cf\u9009\u62e9 g++ \uff0c\u9009\u62e9 gcc \u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\u3002 3.\u6548\u679c\u5c55\u793a \u00b6 \u6ce8\u610f \uff1a \u5f53\u7a97\u53e3\u51fa\u73b0\u95ea\u9000\u65f6\uff0c\u4ec5\u9700\u5728 return 0 \u524d\u52a0\u5165 s ystem(\"pause\"); \u5373\u53ef\u3002 \u4f8b\u5982\u4e0b\u65b9\u793a\u4f8b\u4ee3\u7801 int main () { char binary [ 100 ]; int n ; printf ( \"\u8f93\u5165\u4e8c\u8fdb\u5236\u6570\u4f4d\u6570: \\n \" ); scanf_s ( \"%d\" , & n , sizeof ( n )); getchar (); // \u6e05\u7a7a\u8f93\u5165\u7f13\u51b2\u533a printf ( \"\u8f93\u5165\u4e8c\u8fdb\u5236\u6570: \\n \" ); scanf_s ( \"%[^ \\n ]\" , binary , sizeof ( binary )); printf ( \"\u5e26\u7b26\u53f7\u6574\u6570:%d \\n \" , intToValue ( binary , n )); printf ( \"\u65e0\u7b26\u53f7\u6574\u6570:%u \\n \" , unsignedToValue ( binary , n )); system ( \"pause\" ); return 0 ; } \u516d.\u7ed3\u8bed \u00b6 \u200b \u5728\u5b8c\u6210\u4ee5\u4e0a\u914d\u7f6e\u540e\uff0c\u4f60\u5df2\u7ecf\u6210\u529f\u642d\u5efa\u4e86C/C++\u5f00\u53d1\u73af\u5883\uff0c\u5e76\u53ef\u4ee5\u5728vscode\u4e2d\u8fdb\u884c\u4ee3\u7801\u7f16\u5199\u3001\u7f16\u8bd1\u548c\u8fd0\u884c\u3002\u901a\u8fc7\u8fd9\u6837\u7684\u73af\u5883\u914d\u7f6e\uff0c\u4f60\u53ef\u4ee5\u66f4\u4fbf\u6377\u5730\u8fdb\u884cC/C++\u8bed\u8a00\u7684\u5b66\u4e60\u548c\u5f00\u53d1\u5de5\u4f5c\u3002\u795d\u4f60\u5728\u7f16\u7a0b\u5b66\u4e60\u548c\u9879\u76ee\u5f00\u53d1\u4e2d\u53d6\u5f97\u6210\u529f\uff01","title":"C/C++\u73af\u5883\u914d\u7f6e"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#cc","text":"","title":"C/C++\u73af\u5883\u914d\u7f6e"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#_1","text":"\u53c2\u8003\u94fe\u63a5\uff1a bilibili up\u4e3b _\u91cd\u88c5\u5c0f\u515419C \u5b8c\u7f8e\u914d\u7f6evscode\u8fd0\u884cc/c++\u73af\u5883\uff0c2022\u6700\u65b0\u6559\u7a0b \u73af\u5883\uff1aWindows 10 \uff0cvscode\uff0c mingw64 \u5728\u5b66\u4f1a\u5b89\u88c5\u914d\u7f6e\u524d\uff0c\u9996\u5148\u8981\u5b66\u4f1a\u5378\u8f7d\uff01\uff01\uff01\uff01","title":"\u524d\u8a00"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#vscode","text":"","title":"\u4e00. \u5b8c\u5168\u5378\u8f7dvscode"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#1vscode","text":"\\[ \u8bbe\u7f6e \\rightarrow \u5e94\u7528 \\rightarrow Microsoft\\ Visual\\ Studio\\ Code (User) \\]","title":"1.\u5378\u8f7dvscode"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#2-vscode","text":"\u200b \u8be5\u8def\u5f84\u4e0b\u4fdd\u5b58\u7684\u662f Visual Studio Code \u7684\u9879\u76ee\u7279\u5b9a\u914d\u7f6e\u6587\u4ef6\u7684\u76ee\u5f55\u3002\u5176\u4e2d\u53ef\u4ee5\u5305\u542b\u4e00\u4e9b\u914d\u7f6e\u6587\u4ef6\uff0c\u4f8b\u5982 settings.json \u548c launch.json \u7528\u4e8e\u914d\u7f6e\u5de5\u4f5c\u7a7a\u95f4\u7684\u8bbe\u7f6e\u548c\u8c03\u8bd5\u5668\u7684\u542f\u52a8\u914d\u7f6e\uff0c\u8fd8\u5305\u62ec\u4e86 tasks.json \u7528\u4e8e\u914d\u7f6e\u4efb\u52a1\u8fd0\u884c\u5668\uff0c\u8def\u5f84\u5982\u4e0b\u3002 $$ C:\\Users\\yhl $$","title":"2.\u5220\u9664 .vscode \u914d\u7f6e\u6587\u4ef6"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#3code","text":"\u200b Visual Studio Code \u7684\u7528\u6237\u914d\u7f6e\u548c\u6269\u5c55\u6587\u4ef6\u5b58\u50a8\u7684\u9ed8\u8ba4\u8def\u5f84\u3002\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\uff0c\u4f60\u4f1a\u627e\u5230\u7528\u6237\u8bbe\u7f6e\u3001\u5df2\u5b89\u88c5\u7684\u6269\u5c55\u3001\u4ee3\u7801\u7247\u6bb5\u548c\u5176\u4ed6\u7528\u6237\u76f8\u5173\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u8fd9\u4e2a\u6587\u4ef6\u5939\u5b58\u50a8\u4e86\u4f60\u5728\u4f7f\u7528 Visual Studio Code \u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u4e00\u4e9b\u4e2a\u6027\u5316\u8bbe\u7f6e\u548c\u6570\u636e,\u8def\u5f84\u5982\u4e0b\u3002 $$ C:\\Users\\yhl\\AppData\\Roaming $$ \u6ce8\u610f \uff1aAppData\u6587\u4ef6\u5939\u627e\u4e0d\u5230\u65f6\uff0c\u8bf7\u5c06 \u9690\u85cf\u9879\u76ee \u52fe\u9009 \u5b8c\u6210\u4e0a\u8ff0\u64cd\u4f5c\u540e\uff0cvscode\u5df2\u7ecf\u5728\u7535\u8111\u4e0a\u5f7b\u5e95\u5220\u9664\u4e86\u3002","title":"3.\u5220\u9664Code \u6587\u4ef6\u5939"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#vscode_1","text":"\u200b vscode\u4e0b\u8f7d\u5730\u5740 \u672c\u6587\u4e0d\u8fc7\u591a\u8d58\u8ff0\uff0c\u8bf7\u81ea\u884c\u4e0b\u8f7d\uff0c\u5e76\u5b89\u88c5\u81f3\u9002\u5f53\u4f4d\u7f6e\u3002","title":"\u4e8c. \u5b89\u88c5vscode"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#mingw6","text":"","title":"\u4e09.\u5b89\u88c5mingw6"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#1mingw6","text":"\u200b mingw6\u4e0b\u8f7d\u5730\u5740 \u200b mingw6 \u662f\u6307 \u201cMinimalist GNU for Windows 6\u201d \uff0c\u662f\u4e00\u4e2a\u7528\u4e8e\u5728 Windows \u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fdb\u884c\u5f00\u53d1\u7684\u5f00\u6e90\u5de5\u5177\u96c6\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u7ec4 GNU \u5de5\u5177\uff0c\u4f8b\u5982 GCC \u7f16\u8bd1\u5668\u3001 GNU Make \u7b49\uff0c\u4f7f\u5f00\u53d1\u8005\u80fd\u591f\u5728 Windows \u5e73\u53f0\u4e0a\u8fdb\u884c\u7c7b Unix \u73af\u5883\u4e0b\u7684\u5f00\u53d1\u5de5\u4f5c\u3002\u8fd9\u4e9b\u5de5\u5177\u5305\u62ec\u4e86 C\u3001C++\u3001Objective-C\u3001Fortran \u7b49\u8bed\u8a00\u7684\u7f16\u8bd1\u5668\u548c\u76f8\u5173\u5de5\u5177\uff0c\u4f7f\u5f97\u5f00\u53d1\u8005\u53ef\u4ee5\u5728 Windows \u4e0a\u8fdb\u884c\u8de8\u5e73\u53f0\u7684\u5f00\u53d1\u5de5\u4f5c\u3002mingw6 \u662f\u5728 mingw-w64 \u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4e86\u4e00\u4e9b\u6539\u8fdb\uff0c\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u529f\u80fd\u548c\u6027\u80fd\u6539\u8fdb\u3002","title":"1.\u4e0b\u8f7dmingw6"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#2mingw6","text":"\u8bf7\u6ce8\u610f\uff0c\u8def\u5f84\u4e0d\u8981\u5b58\u5728\u7a7a\u683c\u548c\u4e2d\u6587","title":"2.\u5b89\u88c5mingw6"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#3mingw6","text":"\u6253\u5f00mingw6\u5b89\u88c5\u7684\u8def\u5f84\uff0c\u8fdb\u5165 bin \u76ee\u5f55\uff0c\u590d\u5236\u8be5\u8def\u5f84\uff0c\u4ee5\u4e0b\u662f\u4f5c\u8005\u5b89\u88c5\u8def\u5f84\uff0c\u8bfb\u8005\u6839\u636e\u81ea\u5df1\u7684\u8def\u5f84\u8fdb\u884c\u66f4\u6362\u3002 $$ D:\\MinGW\\bin $$","title":"3.\u914d\u7f6emingw6\u73af\u5883\u53d8\u91cf"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#4","text":"\u4f9d\u6b21\u70b9\u51fb\uff1a \u4f5c\u8005\u4e00\u822c\u9009\u62e9\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\uff0c\u8bfb\u8005\u53ef\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u9009\u62e9 $$ \u9ad8\u7ea7 \\rightarrow \u73af\u5883\u53d8\u91cf \\rightarrow \u7528\u6237\u73af\u5883\u53d8\u91cf/\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\uff08\u524d\u8005\u4e3a\u5f53\u524d\u7528\u6237\uff0c\u540e\u8005\u4e3a\u6240\u6709\u7528\u6237\uff09\\rightarrow Path \\rightarrow \u65b0\u5efa $$ \u5c06\u4e0a\u4e00\u6b65\u590d\u5236\u7684\u8def\u5f84\u586b\u5165\uff0c\u7136\u540e\u70b9\u51fb 3\u6b21\u786e\u5b9a","title":"4.\u8fdb\u5165\u7cfb\u7edf\u73af\u5883\u53d8\u91cf"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#5","text":"win + r \u6253\u5f00cmd\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4 gcc -v g++ -v \u7ed3\u679c\u5c55\u793a","title":"5.\u67e5\u770b\u73af\u5883\u53d8\u91cf\u662f\u5426\u8bbe\u7f6e\u6210\u529f"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#vscode_2","text":"","title":"\u56db.\u914d\u7f6evscode"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#1","text":"coderu nner C/C++ \u53ef\u9009\u63d2\u4ef6\uff1aChi nese (Simpli f ied) (\u7b80\u4f53\u4e2d\u6587) La n guage Pack \u5b89\u88c5\u540e\u4f1a\u63d0\u793a\u91cd\u542f\u751f\u6548","title":"1.\u5b89\u88c5\u6269\u5c55"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#2code-runner","text":"\u200b \u70b9\u51fb coderunner \u6269\u5c55\uff0c\u6309\u56fe\u793a\u6307\u5f15\u64cd\u4f5c \u200b \u627e\u5230run in terminal \u548csave file before run\uff08\u5728\u8fd0\u884c\u4e4b\u524d\u4fdd\u5b58\uff09\uff0c\u5c06\u5176\u52fe\u9009","title":"2.\u914d\u7f6eCode Runner\u6269\u5c55"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#3cc","text":"\u627e\u5230compiler path\u586b\u5165\u4ee5\u4e0b\u5185\u5bb9 \u6ce8\u610f : D:\\MinGW\\bin\\g++.exe \u4fee\u6539\u4e3a\u4f60\u7535\u8111\u4e0a\u7684\u5b9e\u9645\u8def\u5f84 { \"code-runner.runInTerminal\" : true , \"code-runner.saveFileBeforeRun\" : true , \"C_Cpp.default.compilerPath\" : \"D:\\\\MinGW\\\\bin\\\\g++.exe\" } \u9009\u62e9Cpp Standard\u548cC Standard\u7248\u672c\uff0c\u9009\u62e9C11/C14 \u5747\u53ef \u6dfb\u52a0 Include Path \u9009\u62e9Intelli Sense Mode\uff0c \u9009\u62e9gcc-x64 \u68c0\u67e5\u5b8c\u6bd5\u540e\u5173\u95ed\u6b64\u6269\u5c55","title":"3.\u914d\u7f6eC/C++\u6269\u5c55"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#_2","text":"$$ \u6587\u4ef6 \\rightarrow \u6253\u5f00\u6587\u4ef6\u5939 \\rightarrow \u8fd9\u91cc\u9009\u62e9\u4e00\u4e2a\u4f60\u5b58\u653e\u4ee3\u7801\u7684\u6587\u4ef6\u5939 $$","title":"\u4e94.\u6d4b\u8bd5\u4ee3\u7801"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#1cc","text":"\u200b \u4f5c\u8005\u4f7f\u7528 1.15.4 , \u8bfb\u8005\u53ef\u6839\u636e\u5177\u4f53\u9700\u6c42\u9009\u62e9\u7248\u672c\u3002","title":"1.\u66f4\u6362C/C++\u6269\u5c55\u7248\u672c"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#2cmd","text":"\u200b \u6309\u56fe\u793a\u64cd\u4f5c\uff0c\u5c06 lanuch.json \u5185\u7684 externalConsole \u503c\u6539\u4e3a true \u6ce8\u610f \uff1a\u5c3d\u91cf\u9009\u62e9 g++ \uff0c\u9009\u62e9 gcc \u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\u3002","title":"2.\u4f7f\u7528cmd\u7ec8\u7aef"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#3","text":"\u6ce8\u610f \uff1a \u5f53\u7a97\u53e3\u51fa\u73b0\u95ea\u9000\u65f6\uff0c\u4ec5\u9700\u5728 return 0 \u524d\u52a0\u5165 s ystem(\"pause\"); \u5373\u53ef\u3002 \u4f8b\u5982\u4e0b\u65b9\u793a\u4f8b\u4ee3\u7801 int main () { char binary [ 100 ]; int n ; printf ( \"\u8f93\u5165\u4e8c\u8fdb\u5236\u6570\u4f4d\u6570: \\n \" ); scanf_s ( \"%d\" , & n , sizeof ( n )); getchar (); // \u6e05\u7a7a\u8f93\u5165\u7f13\u51b2\u533a printf ( \"\u8f93\u5165\u4e8c\u8fdb\u5236\u6570: \\n \" ); scanf_s ( \"%[^ \\n ]\" , binary , sizeof ( binary )); printf ( \"\u5e26\u7b26\u53f7\u6574\u6570:%d \\n \" , intToValue ( binary , n )); printf ( \"\u65e0\u7b26\u53f7\u6574\u6570:%u \\n \" , unsignedToValue ( binary , n )); system ( \"pause\" ); return 0 ; }","title":"3.\u6548\u679c\u5c55\u793a"},{"location":"Documentation/study-notes/vscode/CC%2B%2B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#_3","text":"\u200b \u5728\u5b8c\u6210\u4ee5\u4e0a\u914d\u7f6e\u540e\uff0c\u4f60\u5df2\u7ecf\u6210\u529f\u642d\u5efa\u4e86C/C++\u5f00\u53d1\u73af\u5883\uff0c\u5e76\u53ef\u4ee5\u5728vscode\u4e2d\u8fdb\u884c\u4ee3\u7801\u7f16\u5199\u3001\u7f16\u8bd1\u548c\u8fd0\u884c\u3002\u901a\u8fc7\u8fd9\u6837\u7684\u73af\u5883\u914d\u7f6e\uff0c\u4f60\u53ef\u4ee5\u66f4\u4fbf\u6377\u5730\u8fdb\u884cC/C++\u8bed\u8a00\u7684\u5b66\u4e60\u548c\u5f00\u53d1\u5de5\u4f5c\u3002\u795d\u4f60\u5728\u7f16\u7a0b\u5b66\u4e60\u548c\u9879\u76ee\u5f00\u53d1\u4e2d\u53d6\u5f97\u6210\u529f\uff01","title":"\u516d.\u7ed3\u8bed"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/","text":"vscode-python-\u73af\u5883\u5207\u6362 \u00b6 \u524d\u8a00 \u00b6 \u672c\u6587\u6863\u4f7f\u7528\u73af\u5883\uff1aWindows10\uff0c anaconda \u672c\u6587\u6863\u4ecb\u7ecd\u4e86\u5728Windows 10\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u4f7f\u7528Anaconda\u521b\u5efa\u548c\u7ba1\u7406\u865a\u62df\u73af\u5883\uff0c\u5e76\u5728VSCode\u4e2d\u8fdb\u884c\u73af\u5883\u5207\u6362\u7684\u65b9\u6cd5\u3002 \u4e00.\u521b\u5efa\u865a\u62df\u73af\u5883 \u00b6 \u9996\u5148\uff0c\u4f7f\u7528\u5feb\u6377\u952e win + R \u6253\u5f00\u8fd0\u884c\u7a97\u53e3\uff0c\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a 1.\u6253\u5f00anaconda \u00b6 \u7136\u540e\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u6253\u5f00Anaconda\u547d\u4ee4\u63d0\u793a\u7b26\uff0c\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a conda.bat activate base 2.\u521b\u5efa\u865a\u62df\u73af\u5883 \u00b6 \u8fd9\u91cc\u7684 test_python \u53ef\u4ee5\u6362\u6210\u4f60\u81ea\u5df1\u60f3\u8981\u7684\u540d\u5b57\uff0c\u6b64\u5904\u4f5c\u8005\u53ea\u662f\u4f5c\u4e3a\u6d4b\u8bd5\uff0c\u5f53\u5b8c\u6210\u540e\u4f1a\u5c06\u5176\u5220\u9664\u3002 conda create -n test_python python=3.8 \u6ce8\u610f \uff1a\u5f53\u4e0b\u8f7d\u51fa\u73b0\u7f51\u7edc\u95ee\u9898\u65f6\uff0c\u4e00\u4e2a\u53ef\u80fd\u7684\u539f\u56e0\u662f\u4f7f\u7528\u4e86 \u52a0\u901f\u5668 \u4f8b\u5982 clash \uff0c\u53ea\u9700\u5c06\u4ee3\u7406\u5173\u95ed\u5373\u53ef\uff0c \u8be6\u7ec6\u6b65\u9aa4 \u3002 3.\u6253\u5f00\u865a\u62df\u73af\u5883 \u00b6 \u67e5\u770b\u6240\u6709\u865a\u62df\u73af\u5883 \u00b6 conda env list \u6253\u5f00\u6240\u9700\u73af\u5883 \u00b6 \u8981\u6fc0\u6d3b\u6240\u9700\u73af\u5883\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a activate test_python \u4e0b\u8f7d\u4e00\u4e2a\u7b2c\u4e09\u65b9\u5305 \u00b6 \u6b64\u5904\u4f5c\u8005\u4f7f\u7528\u4e86 clash \u52a0\u901f\u5668\uff0c\u4f1a\u51fa\u73b0\u7f51\u7edc\u9519\u8bef\u95ee\u9898\uff0c \u6b64\u65f6\u4ec5\u9700\u5173\u95ed\u4ee3\u7406\u5373\u53ef\u3002 \u5b89\u88c5\u6210\u529f \u4e8c.vscode\u9009\u62e9\u865a\u62df\u73af\u5883 \u00b6 1.python\u6269\u5c55 \u00b6 \u8fd9\u662f\u4f5c\u8005\u6240\u4f7f\u7528\u7684python\u6269\u5c55\uff0c\u672c\u6587\u6863\u57fa\u4e8e\u6b64\u914d\u7f6e\u6240\u7f16\u5199\uff0c\u4e0d\u4e00\u5b9a\u5177\u6709\u4e00\u822c\u6027\uff0c\u4ec5\u4f9b\u8bfb\u8005\u53c2\u8003\u3002 2.\u5207\u6362\u73af\u5883 \u00b6 \u6309\u4e0b\u5feb\u6377\u952e Ctrl + ` \u6253\u5f00\u7ec8\u7aef\uff0c\u9009\u62e9\u6240\u9700\u7684\u865a\u62df\u73af\u5883\u3002 3,.\u8fd0\u884c\u4ee3\u7801\uff0c\u6d4b\u8bd5\u73af\u5883 \u00b6 \u7531\u4e8e\u7b2c\u4e00\u79cd\u65b9\u6848\u53ef\u76f4\u63a5\u4f7f\u7528\uff0c\u672c\u6587\u4e0d\u505a\u5c55\u793a\uff0c\u8bfb\u8005\u53ef\u81ea\u884c\u9a8c\u8bc1\u3002 4.\u8bbe\u7f6elanuch\u914d\u7f6e\u6587\u4ef6 \u00b6 \u6309\u7167\u5982\u4e0b\u6b65\u9aa4\uff0c\u6dfb\u52a0\u914d\u7f6e\u6587\u4ef6\uff0c\u5f53\u5b8c\u6210\u4e86\u4ee5\u4e0b\u6b65\u9aa4\u540e\uff0c\u8c03\u8bd5\u4ee3\u7801\u65f6\u4e5f\u4f1a\u81ea\u52a8\u9009\u62e9\u8be5\u865a\u62df\u73af\u5883\uff0c\u56e0\u6b64\u5efa\u8bae\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6848\u3002 \\[ \u8fd0\u884c \\rightarrow \u6dfb\u52a0\u914d\u7f6e \\rightarrow python\u6587\u4ef6 \\] { // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\" : \"0.2.0\" , \"configurations\" : [ { \"name\" : \"Python: \u5f53\u524d\u6587\u4ef6\" , \"type\" : \"python\" , \"request\" : \"launch\" , \"program\" : \"${file}\" , \"console\" : \"integratedTerminal\" , \"justMyCode\" : true , \"python\" : \"${command:python.interpreterPath}\" } ] } \u4e09. \u5220\u9664\u865a\u62df\u73af\u5883 \u00b6 1.\u9000\u51fa\u5f53\u524d\u865a\u62df\u73af\u5883 \u00b6 conda deactivate 2.\u5220\u9664\u865a\u62df\u73af\u5883 \u00b6 conda env remove -n test_python \u901a\u8fc7\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u4f60\u53ef\u4ee5\u5728Windows 10\u4e0a\u4f7f\u7528Anaconda\u521b\u5efa\u3001\u7ba1\u7406\u548c\u5220\u9664\u865a\u62df\u73af\u5883\uff0c\u5e76\u5728VSCode\u4e2d\u8fdb\u884c\u73af\u5883\u5207\u6362\u3002\u5e0c\u671b\u8fd9\u7bc7\u6587\u6863\u5bf9\u60a8\u6709\u6240\u5e2e\u52a9\uff0c\u672c\u6587\u5230\u6b64\u7ed3\u675f\u3002","title":"python\u73af\u5883\u5207\u6362"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/#vscode-python-","text":"","title":"vscode-python-\u73af\u5883\u5207\u6362"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/#_1","text":"\u672c\u6587\u6863\u4f7f\u7528\u73af\u5883\uff1aWindows10\uff0c anaconda \u672c\u6587\u6863\u4ecb\u7ecd\u4e86\u5728Windows 10\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u4f7f\u7528Anaconda\u521b\u5efa\u548c\u7ba1\u7406\u865a\u62df\u73af\u5883\uff0c\u5e76\u5728VSCode\u4e2d\u8fdb\u884c\u73af\u5883\u5207\u6362\u7684\u65b9\u6cd5\u3002","title":"\u524d\u8a00"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/#_2","text":"\u9996\u5148\uff0c\u4f7f\u7528\u5feb\u6377\u952e win + R \u6253\u5f00\u8fd0\u884c\u7a97\u53e3\uff0c\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"\u4e00.\u521b\u5efa\u865a\u62df\u73af\u5883"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/#1anaconda","text":"\u7136\u540e\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u6253\u5f00Anaconda\u547d\u4ee4\u63d0\u793a\u7b26\uff0c\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a conda.bat activate base","title":"1.\u6253\u5f00anaconda"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/#2","text":"\u8fd9\u91cc\u7684 test_python \u53ef\u4ee5\u6362\u6210\u4f60\u81ea\u5df1\u60f3\u8981\u7684\u540d\u5b57\uff0c\u6b64\u5904\u4f5c\u8005\u53ea\u662f\u4f5c\u4e3a\u6d4b\u8bd5\uff0c\u5f53\u5b8c\u6210\u540e\u4f1a\u5c06\u5176\u5220\u9664\u3002 conda create -n test_python python=3.8 \u6ce8\u610f \uff1a\u5f53\u4e0b\u8f7d\u51fa\u73b0\u7f51\u7edc\u95ee\u9898\u65f6\uff0c\u4e00\u4e2a\u53ef\u80fd\u7684\u539f\u56e0\u662f\u4f7f\u7528\u4e86 \u52a0\u901f\u5668 \u4f8b\u5982 clash \uff0c\u53ea\u9700\u5c06\u4ee3\u7406\u5173\u95ed\u5373\u53ef\uff0c \u8be6\u7ec6\u6b65\u9aa4 \u3002","title":"2.\u521b\u5efa\u865a\u62df\u73af\u5883"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/#3","text":"","title":"3.\u6253\u5f00\u865a\u62df\u73af\u5883"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/#_3","text":"conda env list","title":"\u67e5\u770b\u6240\u6709\u865a\u62df\u73af\u5883"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/#_4","text":"\u8981\u6fc0\u6d3b\u6240\u9700\u73af\u5883\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a activate test_python","title":"\u6253\u5f00\u6240\u9700\u73af\u5883"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/#_5","text":"\u6b64\u5904\u4f5c\u8005\u4f7f\u7528\u4e86 clash \u52a0\u901f\u5668\uff0c\u4f1a\u51fa\u73b0\u7f51\u7edc\u9519\u8bef\u95ee\u9898\uff0c \u6b64\u65f6\u4ec5\u9700\u5173\u95ed\u4ee3\u7406\u5373\u53ef\u3002 \u5b89\u88c5\u6210\u529f","title":"\u4e0b\u8f7d\u4e00\u4e2a\u7b2c\u4e09\u65b9\u5305"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/#vscode","text":"","title":"\u4e8c.vscode\u9009\u62e9\u865a\u62df\u73af\u5883"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/#1python","text":"\u8fd9\u662f\u4f5c\u8005\u6240\u4f7f\u7528\u7684python\u6269\u5c55\uff0c\u672c\u6587\u6863\u57fa\u4e8e\u6b64\u914d\u7f6e\u6240\u7f16\u5199\uff0c\u4e0d\u4e00\u5b9a\u5177\u6709\u4e00\u822c\u6027\uff0c\u4ec5\u4f9b\u8bfb\u8005\u53c2\u8003\u3002","title":"1.python\u6269\u5c55"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/#2_1","text":"\u6309\u4e0b\u5feb\u6377\u952e Ctrl + ` \u6253\u5f00\u7ec8\u7aef\uff0c\u9009\u62e9\u6240\u9700\u7684\u865a\u62df\u73af\u5883\u3002","title":"2.\u5207\u6362\u73af\u5883"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/#3_1","text":"\u7531\u4e8e\u7b2c\u4e00\u79cd\u65b9\u6848\u53ef\u76f4\u63a5\u4f7f\u7528\uff0c\u672c\u6587\u4e0d\u505a\u5c55\u793a\uff0c\u8bfb\u8005\u53ef\u81ea\u884c\u9a8c\u8bc1\u3002","title":"3,.\u8fd0\u884c\u4ee3\u7801\uff0c\u6d4b\u8bd5\u73af\u5883"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/#4lanuch","text":"\u6309\u7167\u5982\u4e0b\u6b65\u9aa4\uff0c\u6dfb\u52a0\u914d\u7f6e\u6587\u4ef6\uff0c\u5f53\u5b8c\u6210\u4e86\u4ee5\u4e0b\u6b65\u9aa4\u540e\uff0c\u8c03\u8bd5\u4ee3\u7801\u65f6\u4e5f\u4f1a\u81ea\u52a8\u9009\u62e9\u8be5\u865a\u62df\u73af\u5883\uff0c\u56e0\u6b64\u5efa\u8bae\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6848\u3002 \\[ \u8fd0\u884c \\rightarrow \u6dfb\u52a0\u914d\u7f6e \\rightarrow python\u6587\u4ef6 \\] { // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\" : \"0.2.0\" , \"configurations\" : [ { \"name\" : \"Python: \u5f53\u524d\u6587\u4ef6\" , \"type\" : \"python\" , \"request\" : \"launch\" , \"program\" : \"${file}\" , \"console\" : \"integratedTerminal\" , \"justMyCode\" : true , \"python\" : \"${command:python.interpreterPath}\" } ] }","title":"4.\u8bbe\u7f6elanuch\u914d\u7f6e\u6587\u4ef6"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/#_6","text":"","title":"\u4e09. \u5220\u9664\u865a\u62df\u73af\u5883"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/#1","text":"conda deactivate","title":"1.\u9000\u51fa\u5f53\u524d\u865a\u62df\u73af\u5883"},{"location":"Documentation/study-notes/vscode/vscode-python-%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/#2_2","text":"conda env remove -n test_python \u901a\u8fc7\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u4f60\u53ef\u4ee5\u5728Windows 10\u4e0a\u4f7f\u7528Anaconda\u521b\u5efa\u3001\u7ba1\u7406\u548c\u5220\u9664\u865a\u62df\u73af\u5883\uff0c\u5e76\u5728VSCode\u4e2d\u8fdb\u884c\u73af\u5883\u5207\u6362\u3002\u5e0c\u671b\u8fd9\u7bc7\u6587\u6863\u5bf9\u60a8\u6709\u6240\u5e2e\u52a9\uff0c\u672c\u6587\u5230\u6b64\u7ed3\u675f\u3002","title":"2.\u5220\u9664\u865a\u62df\u73af\u5883"},{"location":"Home/answer/","text":"//eg1\u80fd\u8fdb\u5165if\uff0ceg2\u4e0d\u80fd\u8fdb\u5165if,\u6682\u65f6\u8fd8\u4e0d\u6e05\u695a\u4e3a\u4ec0\u4e48 typedef unsigned char UINT8_T ; typedef unsigned short UINT16_T ; typedef unsigned long UINT32_T ; UINT16_T i = 0 UINT8_T raw_rsp_data [ MAX_RESP_LEN ] = { 0 }; UINT32_T rsp_data [] eg1 : int num = raw_rsp_data [ 3 ] + 5 ; int data_num_0 = 0 ; int data_num_1 = 0 ; while ( i < num ) { data_num_0 = raw_rsp_data [ i ]; if ( data_num_0 == 0xf3 ) { data_num_1 = raw_cmd_data [ i + 1 ]; if ( data_num_1 > 5 ) { rsp_data [ j ] = raw_rsp_data [ i ]; j ++ ; } else num ++ ; } else { rsp_data [ j ] = raw_rsp_data [ i ]; j ++ ; } i ++ ; } eg2 : int num = raw_rsp_data [ 3 ] + 5 ; while ( i < num ) { if ( raw_rsp_data [ i ] == 0xf3 ) { data_num_1 = raw_cmd_data [ i + 1 ]; if ( raw_rsp_data [ i + 1 ] > 5 ) { rsp_data [ j ] = raw_rsp_data [ i ]; j ++ ; } else num ++ ; } else { rsp_data [ j ] = raw_rsp_data [ i ]; j ++ ; } i ++ ; }","title":"\u7591\u95ee"},{"location":"Home/page2/","text":"\u6d4b\u8bd5\u6807\u98981 \u00b6 \u6d4b\u8bd5\u6807\u98982 \u00b6 \u6d4b\u8bd5\u6807\u98983 \u00b6","title":"\u6d4b\u8bd5\u6807\u98981"},{"location":"Home/page2/#1","text":"","title":"\u6d4b\u8bd5\u6807\u98981"},{"location":"Home/page2/#2","text":"","title":"\u6d4b\u8bd5\u6807\u98982"},{"location":"Home/page2/#3","text":"","title":"\u6d4b\u8bd5\u6807\u98983"},{"location":"Home/todo/","text":"todo \u00b6 \u672c\u754c\u9762\u4f5c\u4e3a\u4f5c\u8005\u5f85\u505a\u4e8b\u9879\u6e05\u5355 1.\u5b66\u4e60 \u00b6 \u521b\u5efa\u65f6\u95f4 2023.11.08 \u738b\u9053\u8ba1\u7ec4\u6d6e\u70b9\u6570\u8868\u793a\u548c\u52a0\u51cf 2023.11.09 \u521b\u5efa\u65f6\u95f4 2023.11.11 \u738b\u9053\u8ba1\u7ec4\u5b9a\u70b9\u6570\u52a0\u51cf\u548c\u4e58\u9664\u590d\u4e60 2023.11.11 \u521b\u5efa\u65f6\u95f4 2023.11.13 \u7f16\u5199IEEE 754\u5b66\u4e60\u7b14\u8bb0 2.\u7f16\u7a0b\\\u5237\u9898 \u00b6 \u521b\u5efa\u65f6\u95f4 2023.11.8 \u529b\u6263\u6bcf\u65e51-2\u9898 2023.11.9 \u521b\u5efa\u65f6\u95f4 2023.11.11 \u529b\u6263\u6bcf\u65e51-2\u9898, \u5b8c\u6210\u4e00\u9898\u30022023.11.12 \u521b\u5efa\u65f6\u95f4 2023.11.13 \u529b\u6263\u6bcf\u65e51-2\u9898, \u5b8c\u6210\u4e00\u9898\u30022023.11.13 \u521b\u5efa\u65f6\u95f4 2024.02.17 \u529b\u6263\u6bcf\u65e51-2\u9898, \u5b8c\u6210\u4e00\u9898\u30022023.02.17 \u521b\u5efa\u65f6\u95f4 2024.02.18 \u529b\u6263\u6bcf\u65e51-2\u9898\u30022024.02.18 3.\u5176\u4ed6 \u00b6 \u521b\u5efa\u65f6\u95f4 2023.11.8 mkdocs \u6dfb\u52a0\u8bc4\u8bba\u529f\u80fd\u603b\u7ed3 2023.11.8 \u521b\u5efa\u65f6\u95f4 2023.11.11 Nougat PDF\u8bc6\u522b \u9879\u76ee\u90e8\u7f72\u603b\u7ed3 2023.11.11-2023.11.20 (\u9884\u8ba1) \u521b\u5efa\u65f6\u95f4 2023.11.13 \u5b8c\u6210\u6d4b\u529f\u4eea\u6570\u636e\u5468\u671f\u6027\u5206\u6790 2020.11.13 \u5c06\u6d4b\u529f\u4eea\u6570\u636e\u6309\u7167\u52a8\u4f5c\u5468\u671f\u5207\u5206\uff0c\u660e\u786e\u627e\u51fa\u5404\u4e2a\u52a8\u4f5c\u7684\u8d77\u59cb\u70b9\u548c\u7ed3\u675f\u70b9\uff0c\u5e76\u7ed8\u5236\u5468\u671f\u4e2d\u7684\u52a8\u4f5c\u66f2\u7ebf\u3002\u5373\u6a2a\u5750\u6807\u4e3a\u5468\u671f\uff0c\u7eb5\u5750\u6807\u4e3a\u76f8\u5173\u7edf\u8ba1\u91cf\u3002 \u7ed9\u51fa\u5468\u671f\u4e2d\u7684\u5404\u4e2a\u6570\u636e\u7684\u76f8\u5173\u7edf\u8ba1\u91cf 2023.11.13 \u521b\u5efa\u65f6\u95f4 2023.11.22 \u671f\u672b\u5468\uff0c\u6682\u65f6\u505c\u6b62\u66f4\u65b0 \u521b\u5efa\u65f6\u95f4 2024.02.14 \u4f18\u5316\u6570\u636e\u5206\u6790\u7b97\u6cd5 2024.02.26 (\u9884\u8ba1) \u5206\u79bb \u6868\u5206\u6bb5 2024.02.16 \u5206\u6bb5\u7b97\u6cd5(\u6682\u65f6\u672a\u6d4b\u8bd5\u9a8c\u8bc1) 2024.02.16 \u589e\u52a0\u52a0\u5168\u7a0b\u5e73\u5747\u6570\u636e(\u5f85\u5b8c\u6210) 2024.02.17-? \u8bbe\u8ba1\u8bad\u7ec3\u8ba1\u5212(\u5f85\u5b8c\u6210) 2024.02.17-?","title":"\u5f85\u505a\u4e8b\u9879"},{"location":"Home/todo/#todo","text":"\u672c\u754c\u9762\u4f5c\u4e3a\u4f5c\u8005\u5f85\u505a\u4e8b\u9879\u6e05\u5355","title":"todo"},{"location":"Home/todo/#1","text":"\u521b\u5efa\u65f6\u95f4 2023.11.08 \u738b\u9053\u8ba1\u7ec4\u6d6e\u70b9\u6570\u8868\u793a\u548c\u52a0\u51cf 2023.11.09 \u521b\u5efa\u65f6\u95f4 2023.11.11 \u738b\u9053\u8ba1\u7ec4\u5b9a\u70b9\u6570\u52a0\u51cf\u548c\u4e58\u9664\u590d\u4e60 2023.11.11 \u521b\u5efa\u65f6\u95f4 2023.11.13 \u7f16\u5199IEEE 754\u5b66\u4e60\u7b14\u8bb0","title":"1.\u5b66\u4e60"},{"location":"Home/todo/#2","text":"\u521b\u5efa\u65f6\u95f4 2023.11.8 \u529b\u6263\u6bcf\u65e51-2\u9898 2023.11.9 \u521b\u5efa\u65f6\u95f4 2023.11.11 \u529b\u6263\u6bcf\u65e51-2\u9898, \u5b8c\u6210\u4e00\u9898\u30022023.11.12 \u521b\u5efa\u65f6\u95f4 2023.11.13 \u529b\u6263\u6bcf\u65e51-2\u9898, \u5b8c\u6210\u4e00\u9898\u30022023.11.13 \u521b\u5efa\u65f6\u95f4 2024.02.17 \u529b\u6263\u6bcf\u65e51-2\u9898, \u5b8c\u6210\u4e00\u9898\u30022023.02.17 \u521b\u5efa\u65f6\u95f4 2024.02.18 \u529b\u6263\u6bcf\u65e51-2\u9898\u30022024.02.18","title":"2.\u7f16\u7a0b\\\u5237\u9898"},{"location":"Home/todo/#3","text":"\u521b\u5efa\u65f6\u95f4 2023.11.8 mkdocs \u6dfb\u52a0\u8bc4\u8bba\u529f\u80fd\u603b\u7ed3 2023.11.8 \u521b\u5efa\u65f6\u95f4 2023.11.11 Nougat PDF\u8bc6\u522b \u9879\u76ee\u90e8\u7f72\u603b\u7ed3 2023.11.11-2023.11.20 (\u9884\u8ba1) \u521b\u5efa\u65f6\u95f4 2023.11.13 \u5b8c\u6210\u6d4b\u529f\u4eea\u6570\u636e\u5468\u671f\u6027\u5206\u6790 2020.11.13 \u5c06\u6d4b\u529f\u4eea\u6570\u636e\u6309\u7167\u52a8\u4f5c\u5468\u671f\u5207\u5206\uff0c\u660e\u786e\u627e\u51fa\u5404\u4e2a\u52a8\u4f5c\u7684\u8d77\u59cb\u70b9\u548c\u7ed3\u675f\u70b9\uff0c\u5e76\u7ed8\u5236\u5468\u671f\u4e2d\u7684\u52a8\u4f5c\u66f2\u7ebf\u3002\u5373\u6a2a\u5750\u6807\u4e3a\u5468\u671f\uff0c\u7eb5\u5750\u6807\u4e3a\u76f8\u5173\u7edf\u8ba1\u91cf\u3002 \u7ed9\u51fa\u5468\u671f\u4e2d\u7684\u5404\u4e2a\u6570\u636e\u7684\u76f8\u5173\u7edf\u8ba1\u91cf 2023.11.13 \u521b\u5efa\u65f6\u95f4 2023.11.22 \u671f\u672b\u5468\uff0c\u6682\u65f6\u505c\u6b62\u66f4\u65b0 \u521b\u5efa\u65f6\u95f4 2024.02.14 \u4f18\u5316\u6570\u636e\u5206\u6790\u7b97\u6cd5 2024.02.26 (\u9884\u8ba1) \u5206\u79bb \u6868\u5206\u6bb5 2024.02.16 \u5206\u6bb5\u7b97\u6cd5(\u6682\u65f6\u672a\u6d4b\u8bd5\u9a8c\u8bc1) 2024.02.16 \u589e\u52a0\u52a0\u5168\u7a0b\u5e73\u5747\u6570\u636e(\u5f85\u5b8c\u6210) 2024.02.17-? \u8bbe\u8ba1\u8bad\u7ec3\u8ba1\u5212(\u5f85\u5b8c\u6210) 2024.02.17-?","title":"3.\u5176\u4ed6"}]}